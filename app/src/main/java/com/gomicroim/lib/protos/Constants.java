// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoc/constants.proto

package com.gomicroim.lib.protos;

public final class Constants {
  private Constants() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code shuo.WSMessageType}
   */
  public enum WSMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 0 是默认值，偶尔会有问题。使用 NewChatMessage
     * </pre>
     *
     * <code>NewMessage = 0 [deprecated = true];</code>
     */
    @Deprecated
    NewMessage(0),
    /**
     * <pre>
     * 有消息被编辑
     * </pre>
     *
     * <code>EditMessage = 1;</code>
     */
    EditMessage(1),
    /**
     * <pre>
     * 有消息被删除
     * </pre>
     *
     * <code>DeleteMessage = 2;</code>
     */
    DeleteMessage(2),
    /**
     * <pre>
     * 有消息添加了新的表情
     * </pre>
     *
     * <code>AddAttitude = 3;</code>
     */
    AddAttitude(3),
    /**
     * <pre>
     * 有消息删除了表情表情
     * </pre>
     *
     * <code>DeleteAttitude = 4;</code>
     */
    DeleteAttitude(4),
    /**
     * <pre>
     * 更新thread回复数
     * </pre>
     *
     * <code>UpdateReplyCount = 5;</code>
     */
    UpdateReplyCount(5),
    /**
     * <pre>
     * 有人加入房间
     * </pre>
     *
     * <code>JoinRoom = 6;</code>
     */
    JoinRoom(6),
    /**
     * <pre>
     * 有人退出房间
     * </pre>
     *
     * <code>QuitRoom = 7;</code>
     */
    QuitRoom(7),
    /**
     * <pre>
     * 暂时没用，忘了是什么了。。
     * </pre>
     *
     * <code>PushMessage = 8;</code>
     */
    PushMessage(8),
    /**
     * <pre>
     * 链接解析更改
     * </pre>
     *
     * <code>UpdateLinkMeta = 9;</code>
     */
    UpdateLinkMeta(9),
    /**
     * <pre>
     * 有新的相关事件
     * </pre>
     *
     * <code>NewInvolved = 10;</code>
     */
    NewInvolved(10),
    /**
     * <pre>
     * 消息被隐藏 返回被隐藏的消息，非本人的消息，消息体会清除
     * </pre>
     *
     * <code>HideMessage = 11;</code>
     */
    HideMessage(11),
    /**
     * <pre>
     * 消息被置顶 返回被置顶的消息
     * </pre>
     *
     * <code>PinTopMessage = 12;</code>
     */
    PinTopMessage(12),
    /**
     * <pre>
     * 取消消息置顶 message结构体，message_id 和 roomId即可
     * </pre>
     *
     * <code>UnPinTopMessage = 13;</code>
     */
    UnPinTopMessage(13),
    /**
     * <pre>
     * 系统通知
     * </pre>
     *
     * <code>SystemMsgNotify = 14;</code>
     */
    SystemMsgNotify(14),
    /**
     * <pre>
     * 好说房间助手通知
     * </pre>
     *
     * <code>HSRoomNotify = 15;</code>
     */
    HSRoomNotify(15),
    /**
     * <pre>
     * 新消息
     * </pre>
     *
     * <code>NewChatMessage = 16;</code>
     */
    NewChatMessage(16),
    /**
     * <pre>
     * 用户房间权限变化
     * </pre>
     *
     * <code>MemberPermChange = 17;</code>
     */
    MemberPermChange(17),
    /**
     * <code>Notice = 20;</code>
     */
    Notice(20),
    /**
     * <pre>
     *首页头图变更
     * </pre>
     *
     * <code>ChangeHomeHead = 21;</code>
     */
    ChangeHomeHead(21),
    /**
     * <pre>
     * 好友列表变更 返回 FriendChange 结构
     * </pre>
     *
     * <code>ChangeFriendList = 22;</code>
     */
    ChangeFriendList(22),
    /**
     * <pre>
     * 收到的好友申请 列表变更
     * </pre>
     *
     * <code>ReceiveFriendRequest = 23;</code>
     */
    ReceiveFriendRequest(23),
    /**
     * <pre>
     * 黑名单列表变更
     * </pre>
     *
     * <code>ChangeBlacklist = 24;</code>
     */
    ChangeBlacklist(24),
    /**
     * <pre>
     * 首页精选话题变更
     * </pre>
     *
     * <code>ChangeFeaturedTopics = 25;</code>
     */
    ChangeFeaturedTopics(25),
    /**
     * <pre>
     * 队伍详情变更 返回 UpdateTeamEvent
     * </pre>
     *
     * <code>TeamUpdate = 26;</code>
     */
    TeamUpdate(26),
    /**
     * <pre>
     * 队伍成员变更 返回 UpdateTeamMemberEvent
     * </pre>
     *
     * <code>TeamMemberUpdate = 27;</code>
     */
    TeamMemberUpdate(27),
    /**
     * <pre>
     * 我的队伍变更
     * </pre>
     *
     * <code>MineTeamChange = 28;</code>
     */
    MineTeamChange(28),
    /**
     * <pre>
     * 本人有新设备加入 返回 UpdateTeamOnlineClientEvent
     * </pre>
     *
     * <code>TeamNewClientJoined = 29;</code>
     */
    TeamNewClientJoined(29),
    /**
     * <pre>
     * 说说通知
     * </pre>
     *
     * <code>TalkNotify = 30;</code>
     */
    TalkNotify(30),
    /**
     * <pre>
     * 说说找玩伴通知，拼写错误废弃
     * </pre>
     *
     * <code>TalkPlamateNotify = 31 [deprecated = true];</code>
     */
    @Deprecated
    TalkPlamateNotify(31),
    /**
     * <pre>
     * 说说找玩伴通知
     * </pre>
     *
     * <code>TalkPlaymateNotify = 32;</code>
     */
    TalkPlaymateNotify(32),
    /**
     * <pre>
     * 发布新的公共动态
     * </pre>
     *
     * <code>PublishGlobalTalkPost = 33;</code>
     */
    PublishGlobalTalkPost(33),
    /**
     * <pre>
     * 发布新的频道动态
     * </pre>
     *
     * <code>PublishChannelTalkPost = 34;</code>
     */
    PublishChannelTalkPost(34),
    /**
     * <pre>
     * 到了预约时间
     * </pre>
     *
     * <code>ToTeamAppointmentTime = 35;</code>
     */
    ToTeamAppointmentTime(35),
    /**
     * <pre>
     * 返回 Video
     * </pre>
     *
     * <code>VideoUpdate = 36;</code>
     */
    VideoUpdate(36),
    /**
     * <pre>
     * 完成全部新房任务
     * </pre>
     *
     * <code>CompletedRoomTasks = 37;</code>
     */
    CompletedRoomTasks(37),
    /**
     * <pre>
     * 完成某个新房任务
     * </pre>
     *
     * <code>CompletedRoomTask = 38;</code>
     */
    CompletedRoomTask(38),
    /**
     * <pre>
     * 好友在动态流发布动态
     * </pre>
     *
     * <code>PublishFriendFeedPost = 39;</code>
     */
    PublishFriendFeedPost(39),
    /**
     * <pre>
     * 话题队伍创建成功
     * </pre>
     *
     * <code>TeamCreated = 40;</code>
     */
    TeamCreated(40),
    /**
     * <pre>
     * 话题解散
     * </pre>
     *
     * <code>TeamDisband = 41;</code>
     */
    TeamDisband(41),
    /**
     * <pre>
     * 好友在动态流发布动态
     * </pre>
     *
     * <code>PublishHotFeedPost = 42;</code>
     */
    PublishHotFeedPost(42),
    /**
     * <pre>
     * 发现页面房间更新
     * </pre>
     *
     * <code>ExploreRoomUpdated = 43;</code>
     */
    ExploreRoomUpdated(43),
    /**
     * <pre>
     * 推荐动态流发布动态
     * </pre>
     *
     * <code>PublishRecommendFeedPost = 44;</code>
     */
    PublishRecommendFeedPost(44),
    /**
     * <pre>
     * 车队成员更新
     * </pre>
     *
     * <code>TeamMemberDetailUpdate = 45;</code>
     */
    TeamMemberDetailUpdate(45),
    /**
     * <code>UserProfileUpdated = 46;</code>
     */
    UserProfileUpdated(46),
    /**
     * <pre>
     * team 预约时间推送至成员
     * </pre>
     *
     * <code>ToTeamAppointmentTimeMemberPush = 47;</code>
     */
    ToTeamAppointmentTimeMemberPush(47),
    /**
     * <pre>
     * 发布了新的频道笔记
     * </pre>
     *
     * <code>PublishChannelNote = 48;</code>
     */
    PublishChannelNote(48),
    /**
     * <pre>
     * 笔记系统通知
     * </pre>
     *
     * <code>NoteNotify = 49;</code>
     */
    NoteNotify(49),
    /**
     * <pre>
     * 车队更新
     * </pre>
     *
     * <code>TeamDetailUpdate = 50;</code>
     */
    TeamDetailUpdate(50),
    /**
     * <pre>
     * 玩伴推荐
     * </pre>
     *
     * <code>PlaymateRecommend = 51;</code>
     */
    PlaymateRecommend(51),
    /**
     * <code>PongMessage = 1001;</code>
     */
    PongMessage(1001),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 0 是默认值，偶尔会有问题。使用 NewChatMessage
     * </pre>
     *
     * <code>NewMessage = 0 [deprecated = true];</code>
     */
    @Deprecated public static final int NewMessage_VALUE = 0;
    /**
     * <pre>
     * 有消息被编辑
     * </pre>
     *
     * <code>EditMessage = 1;</code>
     */
    public static final int EditMessage_VALUE = 1;
    /**
     * <pre>
     * 有消息被删除
     * </pre>
     *
     * <code>DeleteMessage = 2;</code>
     */
    public static final int DeleteMessage_VALUE = 2;
    /**
     * <pre>
     * 有消息添加了新的表情
     * </pre>
     *
     * <code>AddAttitude = 3;</code>
     */
    public static final int AddAttitude_VALUE = 3;
    /**
     * <pre>
     * 有消息删除了表情表情
     * </pre>
     *
     * <code>DeleteAttitude = 4;</code>
     */
    public static final int DeleteAttitude_VALUE = 4;
    /**
     * <pre>
     * 更新thread回复数
     * </pre>
     *
     * <code>UpdateReplyCount = 5;</code>
     */
    public static final int UpdateReplyCount_VALUE = 5;
    /**
     * <pre>
     * 有人加入房间
     * </pre>
     *
     * <code>JoinRoom = 6;</code>
     */
    public static final int JoinRoom_VALUE = 6;
    /**
     * <pre>
     * 有人退出房间
     * </pre>
     *
     * <code>QuitRoom = 7;</code>
     */
    public static final int QuitRoom_VALUE = 7;
    /**
     * <pre>
     * 暂时没用，忘了是什么了。。
     * </pre>
     *
     * <code>PushMessage = 8;</code>
     */
    public static final int PushMessage_VALUE = 8;
    /**
     * <pre>
     * 链接解析更改
     * </pre>
     *
     * <code>UpdateLinkMeta = 9;</code>
     */
    public static final int UpdateLinkMeta_VALUE = 9;
    /**
     * <pre>
     * 有新的相关事件
     * </pre>
     *
     * <code>NewInvolved = 10;</code>
     */
    public static final int NewInvolved_VALUE = 10;
    /**
     * <pre>
     * 消息被隐藏 返回被隐藏的消息，非本人的消息，消息体会清除
     * </pre>
     *
     * <code>HideMessage = 11;</code>
     */
    public static final int HideMessage_VALUE = 11;
    /**
     * <pre>
     * 消息被置顶 返回被置顶的消息
     * </pre>
     *
     * <code>PinTopMessage = 12;</code>
     */
    public static final int PinTopMessage_VALUE = 12;
    /**
     * <pre>
     * 取消消息置顶 message结构体，message_id 和 roomId即可
     * </pre>
     *
     * <code>UnPinTopMessage = 13;</code>
     */
    public static final int UnPinTopMessage_VALUE = 13;
    /**
     * <pre>
     * 系统通知
     * </pre>
     *
     * <code>SystemMsgNotify = 14;</code>
     */
    public static final int SystemMsgNotify_VALUE = 14;
    /**
     * <pre>
     * 好说房间助手通知
     * </pre>
     *
     * <code>HSRoomNotify = 15;</code>
     */
    public static final int HSRoomNotify_VALUE = 15;
    /**
     * <pre>
     * 新消息
     * </pre>
     *
     * <code>NewChatMessage = 16;</code>
     */
    public static final int NewChatMessage_VALUE = 16;
    /**
     * <pre>
     * 用户房间权限变化
     * </pre>
     *
     * <code>MemberPermChange = 17;</code>
     */
    public static final int MemberPermChange_VALUE = 17;
    /**
     * <code>Notice = 20;</code>
     */
    public static final int Notice_VALUE = 20;
    /**
     * <pre>
     *首页头图变更
     * </pre>
     *
     * <code>ChangeHomeHead = 21;</code>
     */
    public static final int ChangeHomeHead_VALUE = 21;
    /**
     * <pre>
     * 好友列表变更 返回 FriendChange 结构
     * </pre>
     *
     * <code>ChangeFriendList = 22;</code>
     */
    public static final int ChangeFriendList_VALUE = 22;
    /**
     * <pre>
     * 收到的好友申请 列表变更
     * </pre>
     *
     * <code>ReceiveFriendRequest = 23;</code>
     */
    public static final int ReceiveFriendRequest_VALUE = 23;
    /**
     * <pre>
     * 黑名单列表变更
     * </pre>
     *
     * <code>ChangeBlacklist = 24;</code>
     */
    public static final int ChangeBlacklist_VALUE = 24;
    /**
     * <pre>
     * 首页精选话题变更
     * </pre>
     *
     * <code>ChangeFeaturedTopics = 25;</code>
     */
    public static final int ChangeFeaturedTopics_VALUE = 25;
    /**
     * <pre>
     * 队伍详情变更 返回 UpdateTeamEvent
     * </pre>
     *
     * <code>TeamUpdate = 26;</code>
     */
    public static final int TeamUpdate_VALUE = 26;
    /**
     * <pre>
     * 队伍成员变更 返回 UpdateTeamMemberEvent
     * </pre>
     *
     * <code>TeamMemberUpdate = 27;</code>
     */
    public static final int TeamMemberUpdate_VALUE = 27;
    /**
     * <pre>
     * 我的队伍变更
     * </pre>
     *
     * <code>MineTeamChange = 28;</code>
     */
    public static final int MineTeamChange_VALUE = 28;
    /**
     * <pre>
     * 本人有新设备加入 返回 UpdateTeamOnlineClientEvent
     * </pre>
     *
     * <code>TeamNewClientJoined = 29;</code>
     */
    public static final int TeamNewClientJoined_VALUE = 29;
    /**
     * <pre>
     * 说说通知
     * </pre>
     *
     * <code>TalkNotify = 30;</code>
     */
    public static final int TalkNotify_VALUE = 30;
    /**
     * <pre>
     * 说说找玩伴通知，拼写错误废弃
     * </pre>
     *
     * <code>TalkPlamateNotify = 31 [deprecated = true];</code>
     */
    @Deprecated public static final int TalkPlamateNotify_VALUE = 31;
    /**
     * <pre>
     * 说说找玩伴通知
     * </pre>
     *
     * <code>TalkPlaymateNotify = 32;</code>
     */
    public static final int TalkPlaymateNotify_VALUE = 32;
    /**
     * <pre>
     * 发布新的公共动态
     * </pre>
     *
     * <code>PublishGlobalTalkPost = 33;</code>
     */
    public static final int PublishGlobalTalkPost_VALUE = 33;
    /**
     * <pre>
     * 发布新的频道动态
     * </pre>
     *
     * <code>PublishChannelTalkPost = 34;</code>
     */
    public static final int PublishChannelTalkPost_VALUE = 34;
    /**
     * <pre>
     * 到了预约时间
     * </pre>
     *
     * <code>ToTeamAppointmentTime = 35;</code>
     */
    public static final int ToTeamAppointmentTime_VALUE = 35;
    /**
     * <pre>
     * 返回 Video
     * </pre>
     *
     * <code>VideoUpdate = 36;</code>
     */
    public static final int VideoUpdate_VALUE = 36;
    /**
     * <pre>
     * 完成全部新房任务
     * </pre>
     *
     * <code>CompletedRoomTasks = 37;</code>
     */
    public static final int CompletedRoomTasks_VALUE = 37;
    /**
     * <pre>
     * 完成某个新房任务
     * </pre>
     *
     * <code>CompletedRoomTask = 38;</code>
     */
    public static final int CompletedRoomTask_VALUE = 38;
    /**
     * <pre>
     * 好友在动态流发布动态
     * </pre>
     *
     * <code>PublishFriendFeedPost = 39;</code>
     */
    public static final int PublishFriendFeedPost_VALUE = 39;
    /**
     * <pre>
     * 话题队伍创建成功
     * </pre>
     *
     * <code>TeamCreated = 40;</code>
     */
    public static final int TeamCreated_VALUE = 40;
    /**
     * <pre>
     * 话题解散
     * </pre>
     *
     * <code>TeamDisband = 41;</code>
     */
    public static final int TeamDisband_VALUE = 41;
    /**
     * <pre>
     * 好友在动态流发布动态
     * </pre>
     *
     * <code>PublishHotFeedPost = 42;</code>
     */
    public static final int PublishHotFeedPost_VALUE = 42;
    /**
     * <pre>
     * 发现页面房间更新
     * </pre>
     *
     * <code>ExploreRoomUpdated = 43;</code>
     */
    public static final int ExploreRoomUpdated_VALUE = 43;
    /**
     * <pre>
     * 推荐动态流发布动态
     * </pre>
     *
     * <code>PublishRecommendFeedPost = 44;</code>
     */
    public static final int PublishRecommendFeedPost_VALUE = 44;
    /**
     * <pre>
     * 车队成员更新
     * </pre>
     *
     * <code>TeamMemberDetailUpdate = 45;</code>
     */
    public static final int TeamMemberDetailUpdate_VALUE = 45;
    /**
     * <code>UserProfileUpdated = 46;</code>
     */
    public static final int UserProfileUpdated_VALUE = 46;
    /**
     * <pre>
     * team 预约时间推送至成员
     * </pre>
     *
     * <code>ToTeamAppointmentTimeMemberPush = 47;</code>
     */
    public static final int ToTeamAppointmentTimeMemberPush_VALUE = 47;
    /**
     * <pre>
     * 发布了新的频道笔记
     * </pre>
     *
     * <code>PublishChannelNote = 48;</code>
     */
    public static final int PublishChannelNote_VALUE = 48;
    /**
     * <pre>
     * 笔记系统通知
     * </pre>
     *
     * <code>NoteNotify = 49;</code>
     */
    public static final int NoteNotify_VALUE = 49;
    /**
     * <pre>
     * 车队更新
     * </pre>
     *
     * <code>TeamDetailUpdate = 50;</code>
     */
    public static final int TeamDetailUpdate_VALUE = 50;
    /**
     * <pre>
     * 玩伴推荐
     * </pre>
     *
     * <code>PlaymateRecommend = 51;</code>
     */
    public static final int PlaymateRecommend_VALUE = 51;
    /**
     * <code>PongMessage = 1001;</code>
     */
    public static final int PongMessage_VALUE = 1001;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static WSMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WSMessageType forNumber(int value) {
      switch (value) {
        case 0: return NewMessage;
        case 1: return EditMessage;
        case 2: return DeleteMessage;
        case 3: return AddAttitude;
        case 4: return DeleteAttitude;
        case 5: return UpdateReplyCount;
        case 6: return JoinRoom;
        case 7: return QuitRoom;
        case 8: return PushMessage;
        case 9: return UpdateLinkMeta;
        case 10: return NewInvolved;
        case 11: return HideMessage;
        case 12: return PinTopMessage;
        case 13: return UnPinTopMessage;
        case 14: return SystemMsgNotify;
        case 15: return HSRoomNotify;
        case 16: return NewChatMessage;
        case 17: return MemberPermChange;
        case 20: return Notice;
        case 21: return ChangeHomeHead;
        case 22: return ChangeFriendList;
        case 23: return ReceiveFriendRequest;
        case 24: return ChangeBlacklist;
        case 25: return ChangeFeaturedTopics;
        case 26: return TeamUpdate;
        case 27: return TeamMemberUpdate;
        case 28: return MineTeamChange;
        case 29: return TeamNewClientJoined;
        case 30: return TalkNotify;
        case 31: return TalkPlamateNotify;
        case 32: return TalkPlaymateNotify;
        case 33: return PublishGlobalTalkPost;
        case 34: return PublishChannelTalkPost;
        case 35: return ToTeamAppointmentTime;
        case 36: return VideoUpdate;
        case 37: return CompletedRoomTasks;
        case 38: return CompletedRoomTask;
        case 39: return PublishFriendFeedPost;
        case 40: return TeamCreated;
        case 41: return TeamDisband;
        case 42: return PublishHotFeedPost;
        case 43: return ExploreRoomUpdated;
        case 44: return PublishRecommendFeedPost;
        case 45: return TeamMemberDetailUpdate;
        case 46: return UserProfileUpdated;
        case 47: return ToTeamAppointmentTimeMemberPush;
        case 48: return PublishChannelNote;
        case 49: return NoteNotify;
        case 50: return TeamDetailUpdate;
        case 51: return PlaymateRecommend;
        case 1001: return PongMessage;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WSMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WSMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WSMessageType>() {
            public WSMessageType findValueByNumber(int number) {
              return WSMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(0);
    }

    private static final WSMessageType[] VALUES = values();

    public static WSMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WSMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.WSMessageType)
  }

  /**
   * Protobuf enum {@code shuo.SystemMessageType}
   */
  public enum SystemMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UndefinedBotMessage = 0 [deprecated = true];</code>
     */
    @Deprecated
    UndefinedBotMessage(0),
    /**
     * <code>BotHaoShuoRoomAssistant = 1;</code>
     */
    BotHaoShuoRoomAssistant(1),
    /**
     * <code>BotSysMsg = 2;</code>
     */
    BotSysMsg(2),
    /**
     * <code>BotActivityNotice = 3;</code>
     */
    BotActivityNotice(3),
    /**
     * <code>BotTalkNotice = 4;</code>
     */
    BotTalkNotice(4),
    /**
     * <code>BotTalkPlaymateNotice = 5;</code>
     */
    BotTalkPlaymateNotice(5),
    /**
     * <code>BotNoteNotice = 6;</code>
     */
    BotNoteNotice(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UndefinedBotMessage = 0 [deprecated = true];</code>
     */
    @Deprecated public static final int UndefinedBotMessage_VALUE = 0;
    /**
     * <code>BotHaoShuoRoomAssistant = 1;</code>
     */
    public static final int BotHaoShuoRoomAssistant_VALUE = 1;
    /**
     * <code>BotSysMsg = 2;</code>
     */
    public static final int BotSysMsg_VALUE = 2;
    /**
     * <code>BotActivityNotice = 3;</code>
     */
    public static final int BotActivityNotice_VALUE = 3;
    /**
     * <code>BotTalkNotice = 4;</code>
     */
    public static final int BotTalkNotice_VALUE = 4;
    /**
     * <code>BotTalkPlaymateNotice = 5;</code>
     */
    public static final int BotTalkPlaymateNotice_VALUE = 5;
    /**
     * <code>BotNoteNotice = 6;</code>
     */
    public static final int BotNoteNotice_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SystemMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SystemMessageType forNumber(int value) {
      switch (value) {
        case 0: return UndefinedBotMessage;
        case 1: return BotHaoShuoRoomAssistant;
        case 2: return BotSysMsg;
        case 3: return BotActivityNotice;
        case 4: return BotTalkNotice;
        case 5: return BotTalkPlaymateNotice;
        case 6: return BotNoteNotice;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SystemMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SystemMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SystemMessageType>() {
            public SystemMessageType findValueByNumber(int number) {
              return SystemMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(1);
    }

    private static final SystemMessageType[] VALUES = values();

    public static SystemMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SystemMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.SystemMessageType)
  }

  /**
   * Protobuf enum {@code shuo.ClientMessageType}
   */
  public enum ClientMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UndefinedMessage = 0;</code>
     */
    UndefinedMessage(0),
    /**
     * <code>PingMessage = 1;</code>
     */
    PingMessage(1),
    /**
     * <code>RoomEventMessage = 2;</code>
     */
    RoomEventMessage(2),
    /**
     * <pre>
     * 前台活跃
     * </pre>
     *
     * <code>FrontActiveMessage = 3;</code>
     */
    FrontActiveMessage(3),
    /**
     * <pre>
     * 后台活跃
     * </pre>
     *
     * <code>BackgroundActiveMessage = 4;</code>
     */
    BackgroundActiveMessage(4),
    /**
     * <pre>
     * ack确认包
     * </pre>
     *
     * <code>AckMessage = 5;</code>
     */
    AckMessage(5),
    /**
     * <code>UnknownMessage = -1;</code>
     */
    UnknownMessage(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UndefinedMessage = 0;</code>
     */
    public static final int UndefinedMessage_VALUE = 0;
    /**
     * <code>PingMessage = 1;</code>
     */
    public static final int PingMessage_VALUE = 1;
    /**
     * <code>RoomEventMessage = 2;</code>
     */
    public static final int RoomEventMessage_VALUE = 2;
    /**
     * <pre>
     * 前台活跃
     * </pre>
     *
     * <code>FrontActiveMessage = 3;</code>
     */
    public static final int FrontActiveMessage_VALUE = 3;
    /**
     * <pre>
     * 后台活跃
     * </pre>
     *
     * <code>BackgroundActiveMessage = 4;</code>
     */
    public static final int BackgroundActiveMessage_VALUE = 4;
    /**
     * <pre>
     * ack确认包
     * </pre>
     *
     * <code>AckMessage = 5;</code>
     */
    public static final int AckMessage_VALUE = 5;
    /**
     * <code>UnknownMessage = -1;</code>
     */
    public static final int UnknownMessage_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ClientMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClientMessageType forNumber(int value) {
      switch (value) {
        case 0: return UndefinedMessage;
        case 1: return PingMessage;
        case 2: return RoomEventMessage;
        case 3: return FrontActiveMessage;
        case 4: return BackgroundActiveMessage;
        case 5: return AckMessage;
        case -1: return UnknownMessage;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClientMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClientMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClientMessageType>() {
            public ClientMessageType findValueByNumber(int number) {
              return ClientMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(2);
    }

    private static final ClientMessageType[] VALUES = values();

    public static ClientMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClientMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.ClientMessageType)
  }

  /**
   * Protobuf enum {@code shuo.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MessageTypeUndefined = 0;</code>
     */
    MessageTypeUndefined(0),
    /**
     * <code>MessageTypeText = 1;</code>
     */
    MessageTypeText(1),
    /**
     * <code>MessageTypeSticker = 2;</code>
     */
    MessageTypeSticker(2),
    /**
     * <code>MessageTypeReferMessage = 3;</code>
     */
    MessageTypeReferMessage(3),
    /**
     * <code>MessageTypeReferRoom = 4;</code>
     */
    MessageTypeReferRoom(4),
    /**
     * <code>MessageTypeNewJoin = 5;</code>
     */
    MessageTypeNewJoin(5),
    /**
     * <code>MessageTypeReferChannel = 6;</code>
     */
    MessageTypeReferChannel(6),
    /**
     * <code>MessageTypeReferTeam = 7;</code>
     */
    MessageTypeReferTeam(7),
    /**
     * <code>MessageTypeMemberLevelUp = 8;</code>
     */
    MessageTypeMemberLevelUp(8),
    /**
     * <code>MessageTypeTalkPost = 9;</code>
     */
    MessageTypeTalkPost(9),
    /**
     * <code>MessageTypeReferPost = 10;</code>
     */
    MessageTypeReferPost(10),
    /**
     * <code>MessageTypeNote = 11;</code>
     */
    MessageTypeNote(11),
    /**
     * <code>MessageTypeReferNote = 12;</code>
     */
    MessageTypeReferNote(12),
    /**
     * <code>MessageTypePlaymate = 13;</code>
     */
    MessageTypePlaymate(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MessageTypeUndefined = 0;</code>
     */
    public static final int MessageTypeUndefined_VALUE = 0;
    /**
     * <code>MessageTypeText = 1;</code>
     */
    public static final int MessageTypeText_VALUE = 1;
    /**
     * <code>MessageTypeSticker = 2;</code>
     */
    public static final int MessageTypeSticker_VALUE = 2;
    /**
     * <code>MessageTypeReferMessage = 3;</code>
     */
    public static final int MessageTypeReferMessage_VALUE = 3;
    /**
     * <code>MessageTypeReferRoom = 4;</code>
     */
    public static final int MessageTypeReferRoom_VALUE = 4;
    /**
     * <code>MessageTypeNewJoin = 5;</code>
     */
    public static final int MessageTypeNewJoin_VALUE = 5;
    /**
     * <code>MessageTypeReferChannel = 6;</code>
     */
    public static final int MessageTypeReferChannel_VALUE = 6;
    /**
     * <code>MessageTypeReferTeam = 7;</code>
     */
    public static final int MessageTypeReferTeam_VALUE = 7;
    /**
     * <code>MessageTypeMemberLevelUp = 8;</code>
     */
    public static final int MessageTypeMemberLevelUp_VALUE = 8;
    /**
     * <code>MessageTypeTalkPost = 9;</code>
     */
    public static final int MessageTypeTalkPost_VALUE = 9;
    /**
     * <code>MessageTypeReferPost = 10;</code>
     */
    public static final int MessageTypeReferPost_VALUE = 10;
    /**
     * <code>MessageTypeNote = 11;</code>
     */
    public static final int MessageTypeNote_VALUE = 11;
    /**
     * <code>MessageTypeReferNote = 12;</code>
     */
    public static final int MessageTypeReferNote_VALUE = 12;
    /**
     * <code>MessageTypePlaymate = 13;</code>
     */
    public static final int MessageTypePlaymate_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return MessageTypeUndefined;
        case 1: return MessageTypeText;
        case 2: return MessageTypeSticker;
        case 3: return MessageTypeReferMessage;
        case 4: return MessageTypeReferRoom;
        case 5: return MessageTypeNewJoin;
        case 6: return MessageTypeReferChannel;
        case 7: return MessageTypeReferTeam;
        case 8: return MessageTypeMemberLevelUp;
        case 9: return MessageTypeTalkPost;
        case 10: return MessageTypeReferPost;
        case 11: return MessageTypeNote;
        case 12: return MessageTypeReferNote;
        case 13: return MessageTypePlaymate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(3);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.MessageType)
  }

  /**
   * Protobuf enum {@code shuo.MessageStatus}
   */
  public enum MessageStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MessageStatusUnknown = 0;</code>
     */
    MessageStatusUnknown(0),
    /**
     * <pre>
     * 已删除
     * </pre>
     *
     * <code>MessageStatusDeleted = -1;</code>
     */
    MessageStatusDeleted(-1),
    /**
     * <pre>
     * 所属频道被删除
     * </pre>
     *
     * <code>MessageStatusChannelDeleted = -2;</code>
     */
    MessageStatusChannelDeleted(-2),
    /**
     * <pre>
     * 被隐藏
     * </pre>
     *
     * <code>MessageStatusHide = -3;</code>
     */
    MessageStatusHide(-3),
    /**
     * <pre>
     * 所属话题被隐藏
     * </pre>
     *
     * <code>MessageStatusThreadHide = -4;</code>
     */
    MessageStatusThreadHide(-4),
    /**
     * <pre>
     * 正常
     * </pre>
     *
     * <code>MessageStatusOK = 1;</code>
     */
    MessageStatusOK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MessageStatusUnknown = 0;</code>
     */
    public static final int MessageStatusUnknown_VALUE = 0;
    /**
     * <pre>
     * 已删除
     * </pre>
     *
     * <code>MessageStatusDeleted = -1;</code>
     */
    public static final int MessageStatusDeleted_VALUE = -1;
    /**
     * <pre>
     * 所属频道被删除
     * </pre>
     *
     * <code>MessageStatusChannelDeleted = -2;</code>
     */
    public static final int MessageStatusChannelDeleted_VALUE = -2;
    /**
     * <pre>
     * 被隐藏
     * </pre>
     *
     * <code>MessageStatusHide = -3;</code>
     */
    public static final int MessageStatusHide_VALUE = -3;
    /**
     * <pre>
     * 所属话题被隐藏
     * </pre>
     *
     * <code>MessageStatusThreadHide = -4;</code>
     */
    public static final int MessageStatusThreadHide_VALUE = -4;
    /**
     * <pre>
     * 正常
     * </pre>
     *
     * <code>MessageStatusOK = 1;</code>
     */
    public static final int MessageStatusOK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MessageStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageStatus forNumber(int value) {
      switch (value) {
        case 0: return MessageStatusUnknown;
        case -1: return MessageStatusDeleted;
        case -2: return MessageStatusChannelDeleted;
        case -3: return MessageStatusHide;
        case -4: return MessageStatusThreadHide;
        case 1: return MessageStatusOK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageStatus>() {
            public MessageStatus findValueByNumber(int number) {
              return MessageStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(4);
    }

    private static final MessageStatus[] VALUES = values();

    public static MessageStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.MessageStatus)
  }

  /**
   * Protobuf enum {@code shuo.RoomType}
   */
  public enum RoomType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RoomTypeUndefined = 0;</code>
     */
    RoomTypeUndefined(0),
    /**
     * <pre>
     * 游戏
     * </pre>
     *
     * <code>RoomTypeGame = 1;</code>
     */
    RoomTypeGame(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RoomTypeUndefined = 0;</code>
     */
    public static final int RoomTypeUndefined_VALUE = 0;
    /**
     * <pre>
     * 游戏
     * </pre>
     *
     * <code>RoomTypeGame = 1;</code>
     */
    public static final int RoomTypeGame_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RoomType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoomType forNumber(int value) {
      switch (value) {
        case 0: return RoomTypeUndefined;
        case 1: return RoomTypeGame;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoomType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoomType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoomType>() {
            public RoomType findValueByNumber(int number) {
              return RoomType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(5);
    }

    private static final RoomType[] VALUES = values();

    public static RoomType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoomType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.RoomType)
  }

  /**
   * Protobuf enum {@code shuo.RoomStatus}
   */
  public enum RoomStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RoomStatusUnknown = 0;</code>
     */
    RoomStatusUnknown(0),
    /**
     * <pre>
     * 已归档 可查看历史消息，不可加入/发言等
     * </pre>
     *
     * <code>RoomStatusArchived = -2;</code>
     */
    RoomStatusArchived(-2),
    /**
     * <pre>
     * 已删除 前台无法进行任何操作
     * </pre>
     *
     * <code>RoomStatusDeleted = -1;</code>
     */
    RoomStatusDeleted(-1),
    /**
     * <pre>
     * 无法搜索/推荐
     * </pre>
     *
     * <code>RoomStatusCanJoin = 1;</code>
     */
    RoomStatusCanJoin(1),
    /**
     * <pre>
     * 可被搜索，可加入，可发言
     * </pre>
     *
     * <code>RoomStatusOK = 2;</code>
     */
    RoomStatusOK(2),
    /**
     * <pre>
     * 可展现在推荐房间
     * </pre>
     *
     * <code>RoomStatusRecommend = 3;</code>
     */
    RoomStatusRecommend(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RoomStatusUnknown = 0;</code>
     */
    public static final int RoomStatusUnknown_VALUE = 0;
    /**
     * <pre>
     * 已归档 可查看历史消息，不可加入/发言等
     * </pre>
     *
     * <code>RoomStatusArchived = -2;</code>
     */
    public static final int RoomStatusArchived_VALUE = -2;
    /**
     * <pre>
     * 已删除 前台无法进行任何操作
     * </pre>
     *
     * <code>RoomStatusDeleted = -1;</code>
     */
    public static final int RoomStatusDeleted_VALUE = -1;
    /**
     * <pre>
     * 无法搜索/推荐
     * </pre>
     *
     * <code>RoomStatusCanJoin = 1;</code>
     */
    public static final int RoomStatusCanJoin_VALUE = 1;
    /**
     * <pre>
     * 可被搜索，可加入，可发言
     * </pre>
     *
     * <code>RoomStatusOK = 2;</code>
     */
    public static final int RoomStatusOK_VALUE = 2;
    /**
     * <pre>
     * 可展现在推荐房间
     * </pre>
     *
     * <code>RoomStatusRecommend = 3;</code>
     */
    public static final int RoomStatusRecommend_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RoomStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoomStatus forNumber(int value) {
      switch (value) {
        case 0: return RoomStatusUnknown;
        case -2: return RoomStatusArchived;
        case -1: return RoomStatusDeleted;
        case 1: return RoomStatusCanJoin;
        case 2: return RoomStatusOK;
        case 3: return RoomStatusRecommend;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoomStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoomStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoomStatus>() {
            public RoomStatus findValueByNumber(int number) {
              return RoomStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(6);
    }

    private static final RoomStatus[] VALUES = values();

    public static RoomStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoomStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.RoomStatus)
  }

  /**
   * Protobuf enum {@code shuo.PermissionType}
   */
  public enum PermissionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PermissionTypeUndefined = 0;</code>
     */
    PermissionTypeUndefined(0),
    /**
     * <pre>
     * 编辑房间信息
     * </pre>
     *
     * <code>PermissionTypeManageRoom = 1;</code>
     */
    PermissionTypeManageRoom(1),
    /**
     * <pre>
     * 成员管理
     * </pre>
     *
     * <code>PermissionTypeManageMember = 2;</code>
     */
    PermissionTypeManageMember(2),
    /**
     * <pre>
     * 频道管理权限
     * </pre>
     *
     * <code>PermissionTypeManageChannel = 3;</code>
     */
    PermissionTypeManageChannel(3),
    /**
     * <pre>
     * 查看操作日志
     * </pre>
     *
     * <code>PermissionTypeManageOplog = 4;</code>
     */
    PermissionTypeManageOplog(4),
    /**
     * <pre>
     * 身份组管理
     * </pre>
     *
     * <code>PermissionTypeManageRoomGroup = 5;</code>
     */
    PermissionTypeManageRoomGroup(5),
    /**
     * <pre>
     * 超级管理员
     * </pre>
     *
     * <code>PermissionTypeAdmin = 6;</code>
     */
    PermissionTypeAdmin(6),
    /**
     * <pre>
     * &#64;所有人和身份组
     * </pre>
     *
     * <code>PermissionTypeAtEveryoneGroup = 7;</code>
     */
    PermissionTypeAtEveryoneGroup(7),
    /**
     * <pre>
     * 消息置顶/取消置顶
     * </pre>
     *
     * <code>PermissionTypePinMessage = 8;</code>
     */
    PermissionTypePinMessage(8),
    /**
     * <pre>
     * 在公告频道发言
     * </pre>
     *
     * <code>PermissionTypeAnnounceChat = 9;</code>
     */
    PermissionTypeAnnounceChat(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PermissionTypeUndefined = 0;</code>
     */
    public static final int PermissionTypeUndefined_VALUE = 0;
    /**
     * <pre>
     * 编辑房间信息
     * </pre>
     *
     * <code>PermissionTypeManageRoom = 1;</code>
     */
    public static final int PermissionTypeManageRoom_VALUE = 1;
    /**
     * <pre>
     * 成员管理
     * </pre>
     *
     * <code>PermissionTypeManageMember = 2;</code>
     */
    public static final int PermissionTypeManageMember_VALUE = 2;
    /**
     * <pre>
     * 频道管理权限
     * </pre>
     *
     * <code>PermissionTypeManageChannel = 3;</code>
     */
    public static final int PermissionTypeManageChannel_VALUE = 3;
    /**
     * <pre>
     * 查看操作日志
     * </pre>
     *
     * <code>PermissionTypeManageOplog = 4;</code>
     */
    public static final int PermissionTypeManageOplog_VALUE = 4;
    /**
     * <pre>
     * 身份组管理
     * </pre>
     *
     * <code>PermissionTypeManageRoomGroup = 5;</code>
     */
    public static final int PermissionTypeManageRoomGroup_VALUE = 5;
    /**
     * <pre>
     * 超级管理员
     * </pre>
     *
     * <code>PermissionTypeAdmin = 6;</code>
     */
    public static final int PermissionTypeAdmin_VALUE = 6;
    /**
     * <pre>
     * &#64;所有人和身份组
     * </pre>
     *
     * <code>PermissionTypeAtEveryoneGroup = 7;</code>
     */
    public static final int PermissionTypeAtEveryoneGroup_VALUE = 7;
    /**
     * <pre>
     * 消息置顶/取消置顶
     * </pre>
     *
     * <code>PermissionTypePinMessage = 8;</code>
     */
    public static final int PermissionTypePinMessage_VALUE = 8;
    /**
     * <pre>
     * 在公告频道发言
     * </pre>
     *
     * <code>PermissionTypeAnnounceChat = 9;</code>
     */
    public static final int PermissionTypeAnnounceChat_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static PermissionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PermissionType forNumber(int value) {
      switch (value) {
        case 0: return PermissionTypeUndefined;
        case 1: return PermissionTypeManageRoom;
        case 2: return PermissionTypeManageMember;
        case 3: return PermissionTypeManageChannel;
        case 4: return PermissionTypeManageOplog;
        case 5: return PermissionTypeManageRoomGroup;
        case 6: return PermissionTypeAdmin;
        case 7: return PermissionTypeAtEveryoneGroup;
        case 8: return PermissionTypePinMessage;
        case 9: return PermissionTypeAnnounceChat;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PermissionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PermissionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PermissionType>() {
            public PermissionType findValueByNumber(int number) {
              return PermissionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(7);
    }

    private static final PermissionType[] VALUES = values();

    public static PermissionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PermissionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.PermissionType)
  }

  /**
   * Protobuf enum {@code shuo.ChannelType}
   */
  public enum ChannelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ChannelTypeUndefined = 0;</code>
     */
    ChannelTypeUndefined(0),
    /**
     * <pre>
     * 文字
     * </pre>
     *
     * <code>ChannelTypeText = 1;</code>
     */
    ChannelTypeText(1),
    /**
     * <pre>
     * 公告
     * </pre>
     *
     * <code>ChannelTypeAnnounce = 2;</code>
     */
    ChannelTypeAnnounce(2),
    /**
     * <pre>
     * 外链
     * </pre>
     *
     * <code>ChannelTypeExternalLink = 3;</code>
     */
    ChannelTypeExternalLink(3),
    /**
     * <pre>
     * 私聊
     * </pre>
     *
     * <code>ChannelTypePrivate = 4;</code>
     */
    ChannelTypePrivate(4),
    /**
     * <pre>
     * 动态频道
     * </pre>
     *
     * <code>ChannelTypeTalkPost = 7;</code>
     */
    ChannelTypeTalkPost(7),
    /**
     * <pre>
     *笔记 攻略
     * </pre>
     *
     * <code>ChannelTypeNote = 8;</code>
     */
    ChannelTypeNote(8),
    /**
     * <pre>
     * 话题？预定义的，暂未用到
     * </pre>
     *
     * <code>ChannelTypeTopic = 9;</code>
     */
    ChannelTypeTopic(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ChannelTypeUndefined = 0;</code>
     */
    public static final int ChannelTypeUndefined_VALUE = 0;
    /**
     * <pre>
     * 文字
     * </pre>
     *
     * <code>ChannelTypeText = 1;</code>
     */
    public static final int ChannelTypeText_VALUE = 1;
    /**
     * <pre>
     * 公告
     * </pre>
     *
     * <code>ChannelTypeAnnounce = 2;</code>
     */
    public static final int ChannelTypeAnnounce_VALUE = 2;
    /**
     * <pre>
     * 外链
     * </pre>
     *
     * <code>ChannelTypeExternalLink = 3;</code>
     */
    public static final int ChannelTypeExternalLink_VALUE = 3;
    /**
     * <pre>
     * 私聊
     * </pre>
     *
     * <code>ChannelTypePrivate = 4;</code>
     */
    public static final int ChannelTypePrivate_VALUE = 4;
    /**
     * <pre>
     * 动态频道
     * </pre>
     *
     * <code>ChannelTypeTalkPost = 7;</code>
     */
    public static final int ChannelTypeTalkPost_VALUE = 7;
    /**
     * <pre>
     *笔记 攻略
     * </pre>
     *
     * <code>ChannelTypeNote = 8;</code>
     */
    public static final int ChannelTypeNote_VALUE = 8;
    /**
     * <pre>
     * 话题？预定义的，暂未用到
     * </pre>
     *
     * <code>ChannelTypeTopic = 9;</code>
     */
    public static final int ChannelTypeTopic_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ChannelType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ChannelType forNumber(int value) {
      switch (value) {
        case 0: return ChannelTypeUndefined;
        case 1: return ChannelTypeText;
        case 2: return ChannelTypeAnnounce;
        case 3: return ChannelTypeExternalLink;
        case 4: return ChannelTypePrivate;
        case 7: return ChannelTypeTalkPost;
        case 8: return ChannelTypeNote;
        case 9: return ChannelTypeTopic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChannelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ChannelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChannelType>() {
            public ChannelType findValueByNumber(int number) {
              return ChannelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(8);
    }

    private static final ChannelType[] VALUES = values();

    public static ChannelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ChannelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.ChannelType)
  }

  /**
   * Protobuf enum {@code shuo.ChannelStatus}
   */
  public enum ChannelStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ChannelStatusUndefined = 0;</code>
     */
    ChannelStatusUndefined(0),
    /**
     * <code>ChannelStatusOK = 1;</code>
     */
    ChannelStatusOK(1),
    /**
     * <code>ChannelStatusArchived = -2;</code>
     */
    ChannelStatusArchived(-2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ChannelStatusUndefined = 0;</code>
     */
    public static final int ChannelStatusUndefined_VALUE = 0;
    /**
     * <code>ChannelStatusOK = 1;</code>
     */
    public static final int ChannelStatusOK_VALUE = 1;
    /**
     * <code>ChannelStatusArchived = -2;</code>
     */
    public static final int ChannelStatusArchived_VALUE = -2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ChannelStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ChannelStatus forNumber(int value) {
      switch (value) {
        case 0: return ChannelStatusUndefined;
        case 1: return ChannelStatusOK;
        case -2: return ChannelStatusArchived;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChannelStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ChannelStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChannelStatus>() {
            public ChannelStatus findValueByNumber(int number) {
              return ChannelStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(9);
    }

    private static final ChannelStatus[] VALUES = values();

    public static ChannelStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ChannelStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.ChannelStatus)
  }

  /**
   * Protobuf enum {@code shuo.UserStatus}
   */
  public enum UserStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UserStatusUndefined = 0;</code>
     */
    UserStatusUndefined(0),
    /**
     * <pre>
     * 全局屏蔽
     * </pre>
     *
     * <code>UserStatusBan = -1;</code>
     */
    UserStatusBan(-1),
    /**
     * <pre>
     * 全局禁言
     * </pre>
     *
     * <code>UserStatusMute = -2;</code>
     */
    UserStatusMute(-2),
    /**
     * <pre>
     * 预注销
     * </pre>
     *
     * <code>UserStatusPreAccountClose = -3;</code>
     */
    UserStatusPreAccountClose(-3),
    /**
     * <pre>
     * 已注销
     * </pre>
     *
     * <code>UserStatusAccountClose = -4;</code>
     */
    UserStatusAccountClose(-4),
    /**
     * <pre>
     * 正常
     * </pre>
     *
     * <code>UserStatusOK = 1;</code>
     */
    UserStatusOK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UserStatusUndefined = 0;</code>
     */
    public static final int UserStatusUndefined_VALUE = 0;
    /**
     * <pre>
     * 全局屏蔽
     * </pre>
     *
     * <code>UserStatusBan = -1;</code>
     */
    public static final int UserStatusBan_VALUE = -1;
    /**
     * <pre>
     * 全局禁言
     * </pre>
     *
     * <code>UserStatusMute = -2;</code>
     */
    public static final int UserStatusMute_VALUE = -2;
    /**
     * <pre>
     * 预注销
     * </pre>
     *
     * <code>UserStatusPreAccountClose = -3;</code>
     */
    public static final int UserStatusPreAccountClose_VALUE = -3;
    /**
     * <pre>
     * 已注销
     * </pre>
     *
     * <code>UserStatusAccountClose = -4;</code>
     */
    public static final int UserStatusAccountClose_VALUE = -4;
    /**
     * <pre>
     * 正常
     * </pre>
     *
     * <code>UserStatusOK = 1;</code>
     */
    public static final int UserStatusOK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static UserStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserStatus forNumber(int value) {
      switch (value) {
        case 0: return UserStatusUndefined;
        case -1: return UserStatusBan;
        case -2: return UserStatusMute;
        case -3: return UserStatusPreAccountClose;
        case -4: return UserStatusAccountClose;
        case 1: return UserStatusOK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserStatus>() {
            public UserStatus findValueByNumber(int number) {
              return UserStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(10);
    }

    private static final UserStatus[] VALUES = values();

    public static UserStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.UserStatus)
  }

  /**
   * Protobuf enum {@code shuo.UserIdentity}
   */
  public enum UserIdentity
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UserIdentityUndefined = 0;</code>
     */
    UserIdentityUndefined(0),
    /**
     * <code>UserIdentityDeveloper = 1;</code>
     */
    UserIdentityDeveloper(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UserIdentityUndefined = 0;</code>
     */
    public static final int UserIdentityUndefined_VALUE = 0;
    /**
     * <code>UserIdentityDeveloper = 1;</code>
     */
    public static final int UserIdentityDeveloper_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static UserIdentity valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserIdentity forNumber(int value) {
      switch (value) {
        case 0: return UserIdentityUndefined;
        case 1: return UserIdentityDeveloper;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserIdentity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserIdentity> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserIdentity>() {
            public UserIdentity findValueByNumber(int number) {
              return UserIdentity.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(11);
    }

    private static final UserIdentity[] VALUES = values();

    public static UserIdentity valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserIdentity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.UserIdentity)
  }

  /**
   * Protobuf enum {@code shuo.RoomMemberStatus}
   */
  public enum RoomMemberStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RoomMemberStatusUndefined = 0;</code>
     */
    RoomMemberStatusUndefined(0),
    /**
     * <pre>
     * 全局屏蔽
     * </pre>
     *
     * <code>GlobalUserStatusBan = -1;</code>
     */
    GlobalUserStatusBan(-1),
    /**
     * <pre>
     * 全局禁言
     * </pre>
     *
     * <code>GlobalUserStatusMute = -2;</code>
     */
    GlobalUserStatusMute(-2),
    /**
     * <pre>
     *房间内禁言
     * </pre>
     *
     * <code>RoomMemberStatusMute = -3;</code>
     */
    RoomMemberStatusMute(-3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RoomMemberStatusUndefined = 0;</code>
     */
    public static final int RoomMemberStatusUndefined_VALUE = 0;
    /**
     * <pre>
     * 全局屏蔽
     * </pre>
     *
     * <code>GlobalUserStatusBan = -1;</code>
     */
    public static final int GlobalUserStatusBan_VALUE = -1;
    /**
     * <pre>
     * 全局禁言
     * </pre>
     *
     * <code>GlobalUserStatusMute = -2;</code>
     */
    public static final int GlobalUserStatusMute_VALUE = -2;
    /**
     * <pre>
     *房间内禁言
     * </pre>
     *
     * <code>RoomMemberStatusMute = -3;</code>
     */
    public static final int RoomMemberStatusMute_VALUE = -3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RoomMemberStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoomMemberStatus forNumber(int value) {
      switch (value) {
        case 0: return RoomMemberStatusUndefined;
        case -1: return GlobalUserStatusBan;
        case -2: return GlobalUserStatusMute;
        case -3: return RoomMemberStatusMute;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoomMemberStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoomMemberStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoomMemberStatus>() {
            public RoomMemberStatus findValueByNumber(int number) {
              return RoomMemberStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(12);
    }

    private static final RoomMemberStatus[] VALUES = values();

    public static RoomMemberStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoomMemberStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.RoomMemberStatus)
  }

  /**
   * <pre>
   * RoomOp 房间操作
   * </pre>
   *
   * Protobuf enum {@code shuo.RoomOp}
   */
  public enum RoomOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>RoomOpUnknown = 0;</code>
     */
    RoomOpUnknown(0),
    /**
     * <pre>
     * 创建房间
     * </pre>
     *
     * <code>RoomOpRoomCreate = 1001;</code>
     */
    RoomOpRoomCreate(1001),
    /**
     * <pre>
     * 修改房间
     * </pre>
     *
     * <code>RoomOpRoomUpdate = 1002;</code>
     */
    RoomOpRoomUpdate(1002),
    /**
     * <pre>
     * 删除房间
     * </pre>
     *
     * <code>RoomOpRoomDelete = 1003;</code>
     */
    RoomOpRoomDelete(1003),
    /**
     * <pre>
     * 创建频道
     * </pre>
     *
     * <code>RoomOpChannelCreate = 1004;</code>
     */
    RoomOpChannelCreate(1004),
    /**
     * <pre>
     * 修改频道
     * </pre>
     *
     * <code>RoomOpChannelUpdate = 1005;</code>
     */
    RoomOpChannelUpdate(1005),
    /**
     * <pre>
     * 删除频道
     * </pre>
     *
     * <code>RoomOpChannelDelete = 1006;</code>
     */
    RoomOpChannelDelete(1006),
    /**
     * <pre>
     * 创建频道分组
     * </pre>
     *
     * <code>RoomOpChannelGroupCreate = 1007;</code>
     */
    RoomOpChannelGroupCreate(1007),
    /**
     * <pre>
     * 修改频道分组
     * </pre>
     *
     * <code>RoomOpChannelGroupUpdate = 1008;</code>
     */
    RoomOpChannelGroupUpdate(1008),
    /**
     * <pre>
     * 删除频道分组
     * </pre>
     *
     * <code>RoomOpChannelGroupDelete = 1009;</code>
     */
    RoomOpChannelGroupDelete(1009),
    /**
     * <pre>
     * 频道排序
     * </pre>
     *
     * <code>RoomOpChannelSort = 1010;</code>
     */
    RoomOpChannelSort(1010),
    /**
     * <pre>
     * 频道分组排序
     * </pre>
     *
     * <code>RoomOpChannelGroupSort = 1011;</code>
     */
    RoomOpChannelGroupSort(1011),
    /**
     * <pre>
     * 创建身份组
     * </pre>
     *
     * <code>RoomOpRoomGroupCreate = 1012;</code>
     */
    RoomOpRoomGroupCreate(1012),
    /**
     * <pre>
     * 删除身份组
     * </pre>
     *
     * <code>RoomOpRoomGroupDelete = 1013;</code>
     */
    RoomOpRoomGroupDelete(1013),
    /**
     * <pre>
     * 修改身份组
     * </pre>
     *
     * <code>RoomOpRoomGroupUpdate = 1014;</code>
     */
    RoomOpRoomGroupUpdate(1014),
    /**
     * <pre>
     * 踢出成员 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberKickout = 1015;</code>
     */
    RoomOpMemberKickout(1015),
    /**
     * <pre>
     * 取消踢出成员 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberUnKickout = 1016;</code>
     */
    RoomOpMemberUnKickout(1016),
    /**
     * <pre>
     * 禁言用户 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberNospeak = 1017;</code>
     */
    RoomOpMemberNospeak(1017),
    /**
     * <pre>
     * 取消禁言用户 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberUnNospeak = 1018;</code>
     */
    RoomOpMemberUnNospeak(1018),
    /**
     * <pre>
     * 踢出身份组 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberRemoveFromRoomGroup = 1019;</code>
     */
    RoomOpMemberRemoveFromRoomGroup(1019),
    /**
     * <pre>
     * 加入身份组 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberAddToRoomGroup = 1020;</code>
     */
    RoomOpMemberAddToRoomGroup(1020),
    /**
     * <pre>
     * 隐藏消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessageHide = 1021;</code>
     */
    RoomOpMessageHide(1021),
    /**
     * <pre>
     * 删除消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessageDelete = 1022;</code>
     */
    RoomOpMessageDelete(1022),
    /**
     * <pre>
     * 置顶消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessagePin = 1023;</code>
     */
    RoomOpMessagePin(1023),
    /**
     * <pre>
     * 取消置顶消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessageUnPin = 1024;</code>
     */
    RoomOpMessageUnPin(1024),
    /**
     * <pre>
     * 设置房主 Deprecated
     * </pre>
     *
     * <code>RoomOpRoomOwnerChange = 1025;</code>
     */
    RoomOpRoomOwnerChange(1025),
    /**
     * <pre>
     * 归档房间
     * </pre>
     *
     * <code>RoomOpRoomArchive = 1026;</code>
     */
    RoomOpRoomArchive(1026),
    /**
     * <pre>
     * 添加外链
     * </pre>
     *
     * <code>RoomOpExternalLinkCreate = 1027;</code>
     */
    RoomOpExternalLinkCreate(1027),
    /**
     * <pre>
     * 修改外链
     * </pre>
     *
     * <code>RoomOpExternalLinkUpdate = 1028;</code>
     */
    RoomOpExternalLinkUpdate(1028),
    /**
     * <pre>
     * 删除外链
     * </pre>
     *
     * <code>RoomOpExternalLinkDelete = 1029;</code>
     */
    RoomOpExternalLinkDelete(1029),
    /**
     * <pre>
     * 创建广场
     * </pre>
     *
     * <code>RoomOpSquareCreate = 1030;</code>
     */
    RoomOpSquareCreate(1030),
    /**
     * <pre>
     * 修改广场
     * </pre>
     *
     * <code>RoomOpSquareUpdate = 1031;</code>
     */
    RoomOpSquareUpdate(1031),
    /**
     * <pre>
     * 归档频道
     * </pre>
     *
     * <code>RoomOpChannelArchive = 1032;</code>
     */
    RoomOpChannelArchive(1032),
    /**
     * <pre>
     * 添加标签
     * </pre>
     *
     * <code>RoomOpTagAdd = 1033;</code>
     */
    RoomOpTagAdd(1033),
    /**
     * <pre>
     * 删除标签
     * </pre>
     *
     * <code>RoomOpTagDelete = 1034;</code>
     */
    RoomOpTagDelete(1034),
    /**
     * <pre>
     * 创建欢迎页
     * </pre>
     *
     * <code>RoomOpWelcomeCreate = 1035;</code>
     */
    RoomOpWelcomeCreate(1035),
    /**
     * <pre>
     * 修改欢迎页
     * </pre>
     *
     * <code>RoomOpWelcomeUpdate = 1036;</code>
     */
    RoomOpWelcomeUpdate(1036),
    /**
     * <pre>
     * 房间基础信息审核
     * </pre>
     *
     * <code>RoomOpRoomAudit = 1037;</code>
     */
    RoomOpRoomAudit(1037),
    /**
     * <pre>
     * 房间外链审核
     * </pre>
     *
     * <code>RoomOpExternalLinkAudit = 1038;</code>
     */
    RoomOpExternalLinkAudit(1038),
    /**
     * <pre>
     * 编辑等级头衔
     * </pre>
     *
     * <code>RoomOpLevelUpdate = 1039;</code>
     */
    RoomOpLevelUpdate(1039),
    /**
     * <pre>
     * 添加机器人
     * </pre>
     *
     * <code>RoomOpBotJoin = 1040;</code>
     */
    RoomOpBotJoin(1040),
    /**
     * <pre>
     * 移除机器人
     * </pre>
     *
     * <code>RoomOpBotLeave = 1041;</code>
     */
    RoomOpBotLeave(1041),
    /**
     * <pre>
     * 频道信息审核
     * </pre>
     *
     * <code>RoomOpChannelAudit = 1042;</code>
     */
    RoomOpChannelAudit(1042),
    /**
     * <pre>
     * 机器人欢迎语审核
     * </pre>
     *
     * <code>RoomOpBotAuditGreeting = 1043;</code>
     */
    RoomOpBotAuditGreeting(1043),
    /**
     * <pre>
     * 频道分类信息审核
     * </pre>
     *
     * <code>RoomOpChannelGroupAudit = 1044;</code>
     */
    RoomOpChannelGroupAudit(1044),
    /**
     * <pre>
     * 机器人欢迎语自动回复
     * </pre>
     *
     * <code>RoomOpBotAuditAutoReply = 1045;</code>
     */
    RoomOpBotAuditAutoReply(1045),
    /**
     * <pre>
     * 创建成员等级
     * </pre>
     *
     * <code>RoomOpMemberLevelCreate = 1046;</code>
     */
    RoomOpMemberLevelCreate(1046),
    /**
     * <pre>
     * 更新成员等级
     * </pre>
     *
     * <code>RoomOpMemberLevelUpdate = 1047;</code>
     */
    RoomOpMemberLevelUpdate(1047),
    /**
     * <pre>
     * 成员等级审核
     * </pre>
     *
     * <code>RoomOpMemberLevelAudit = 1048;</code>
     */
    RoomOpMemberLevelAudit(1048),
    /**
     * <pre>
     * 身份组审核
     * </pre>
     *
     * <code>RoomOpRoomGroupAudit = 1049;</code>
     */
    RoomOpRoomGroupAudit(1049),
    /**
     * <pre>
     * 广场审核
     * </pre>
     *
     * <code>RoomOpSquareAudit = 1050;</code>
     */
    RoomOpSquareAudit(1050),
    /**
     * <pre>
     * 欢迎页审核
     * </pre>
     *
     * <code>RoomOpWelcomeAudit = 1051;</code>
     */
    RoomOpWelcomeAudit(1051),
    /**
     * <pre>
     * 举报房间
     * </pre>
     *
     * <code>RoomOpReport = 1052;</code>
     */
    RoomOpReport(1052),
    /**
     * <pre>
     * 举报房间审核
     * </pre>
     *
     * <code>RoomOpReportAudit = 1053;</code>
     */
    RoomOpReportAudit(1053),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>RoomOpUnknown = 0;</code>
     */
    public static final int RoomOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 创建房间
     * </pre>
     *
     * <code>RoomOpRoomCreate = 1001;</code>
     */
    public static final int RoomOpRoomCreate_VALUE = 1001;
    /**
     * <pre>
     * 修改房间
     * </pre>
     *
     * <code>RoomOpRoomUpdate = 1002;</code>
     */
    public static final int RoomOpRoomUpdate_VALUE = 1002;
    /**
     * <pre>
     * 删除房间
     * </pre>
     *
     * <code>RoomOpRoomDelete = 1003;</code>
     */
    public static final int RoomOpRoomDelete_VALUE = 1003;
    /**
     * <pre>
     * 创建频道
     * </pre>
     *
     * <code>RoomOpChannelCreate = 1004;</code>
     */
    public static final int RoomOpChannelCreate_VALUE = 1004;
    /**
     * <pre>
     * 修改频道
     * </pre>
     *
     * <code>RoomOpChannelUpdate = 1005;</code>
     */
    public static final int RoomOpChannelUpdate_VALUE = 1005;
    /**
     * <pre>
     * 删除频道
     * </pre>
     *
     * <code>RoomOpChannelDelete = 1006;</code>
     */
    public static final int RoomOpChannelDelete_VALUE = 1006;
    /**
     * <pre>
     * 创建频道分组
     * </pre>
     *
     * <code>RoomOpChannelGroupCreate = 1007;</code>
     */
    public static final int RoomOpChannelGroupCreate_VALUE = 1007;
    /**
     * <pre>
     * 修改频道分组
     * </pre>
     *
     * <code>RoomOpChannelGroupUpdate = 1008;</code>
     */
    public static final int RoomOpChannelGroupUpdate_VALUE = 1008;
    /**
     * <pre>
     * 删除频道分组
     * </pre>
     *
     * <code>RoomOpChannelGroupDelete = 1009;</code>
     */
    public static final int RoomOpChannelGroupDelete_VALUE = 1009;
    /**
     * <pre>
     * 频道排序
     * </pre>
     *
     * <code>RoomOpChannelSort = 1010;</code>
     */
    public static final int RoomOpChannelSort_VALUE = 1010;
    /**
     * <pre>
     * 频道分组排序
     * </pre>
     *
     * <code>RoomOpChannelGroupSort = 1011;</code>
     */
    public static final int RoomOpChannelGroupSort_VALUE = 1011;
    /**
     * <pre>
     * 创建身份组
     * </pre>
     *
     * <code>RoomOpRoomGroupCreate = 1012;</code>
     */
    public static final int RoomOpRoomGroupCreate_VALUE = 1012;
    /**
     * <pre>
     * 删除身份组
     * </pre>
     *
     * <code>RoomOpRoomGroupDelete = 1013;</code>
     */
    public static final int RoomOpRoomGroupDelete_VALUE = 1013;
    /**
     * <pre>
     * 修改身份组
     * </pre>
     *
     * <code>RoomOpRoomGroupUpdate = 1014;</code>
     */
    public static final int RoomOpRoomGroupUpdate_VALUE = 1014;
    /**
     * <pre>
     * 踢出成员 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberKickout = 1015;</code>
     */
    public static final int RoomOpMemberKickout_VALUE = 1015;
    /**
     * <pre>
     * 取消踢出成员 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberUnKickout = 1016;</code>
     */
    public static final int RoomOpMemberUnKickout_VALUE = 1016;
    /**
     * <pre>
     * 禁言用户 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberNospeak = 1017;</code>
     */
    public static final int RoomOpMemberNospeak_VALUE = 1017;
    /**
     * <pre>
     * 取消禁言用户 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberUnNospeak = 1018;</code>
     */
    public static final int RoomOpMemberUnNospeak_VALUE = 1018;
    /**
     * <pre>
     * 踢出身份组 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberRemoveFromRoomGroup = 1019;</code>
     */
    public static final int RoomOpMemberRemoveFromRoomGroup_VALUE = 1019;
    /**
     * <pre>
     * 加入身份组 Deprecated
     * </pre>
     *
     * <code>RoomOpMemberAddToRoomGroup = 1020;</code>
     */
    public static final int RoomOpMemberAddToRoomGroup_VALUE = 1020;
    /**
     * <pre>
     * 隐藏消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessageHide = 1021;</code>
     */
    public static final int RoomOpMessageHide_VALUE = 1021;
    /**
     * <pre>
     * 删除消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessageDelete = 1022;</code>
     */
    public static final int RoomOpMessageDelete_VALUE = 1022;
    /**
     * <pre>
     * 置顶消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessagePin = 1023;</code>
     */
    public static final int RoomOpMessagePin_VALUE = 1023;
    /**
     * <pre>
     * 取消置顶消息 Deprecated
     * </pre>
     *
     * <code>RoomOpMessageUnPin = 1024;</code>
     */
    public static final int RoomOpMessageUnPin_VALUE = 1024;
    /**
     * <pre>
     * 设置房主 Deprecated
     * </pre>
     *
     * <code>RoomOpRoomOwnerChange = 1025;</code>
     */
    public static final int RoomOpRoomOwnerChange_VALUE = 1025;
    /**
     * <pre>
     * 归档房间
     * </pre>
     *
     * <code>RoomOpRoomArchive = 1026;</code>
     */
    public static final int RoomOpRoomArchive_VALUE = 1026;
    /**
     * <pre>
     * 添加外链
     * </pre>
     *
     * <code>RoomOpExternalLinkCreate = 1027;</code>
     */
    public static final int RoomOpExternalLinkCreate_VALUE = 1027;
    /**
     * <pre>
     * 修改外链
     * </pre>
     *
     * <code>RoomOpExternalLinkUpdate = 1028;</code>
     */
    public static final int RoomOpExternalLinkUpdate_VALUE = 1028;
    /**
     * <pre>
     * 删除外链
     * </pre>
     *
     * <code>RoomOpExternalLinkDelete = 1029;</code>
     */
    public static final int RoomOpExternalLinkDelete_VALUE = 1029;
    /**
     * <pre>
     * 创建广场
     * </pre>
     *
     * <code>RoomOpSquareCreate = 1030;</code>
     */
    public static final int RoomOpSquareCreate_VALUE = 1030;
    /**
     * <pre>
     * 修改广场
     * </pre>
     *
     * <code>RoomOpSquareUpdate = 1031;</code>
     */
    public static final int RoomOpSquareUpdate_VALUE = 1031;
    /**
     * <pre>
     * 归档频道
     * </pre>
     *
     * <code>RoomOpChannelArchive = 1032;</code>
     */
    public static final int RoomOpChannelArchive_VALUE = 1032;
    /**
     * <pre>
     * 添加标签
     * </pre>
     *
     * <code>RoomOpTagAdd = 1033;</code>
     */
    public static final int RoomOpTagAdd_VALUE = 1033;
    /**
     * <pre>
     * 删除标签
     * </pre>
     *
     * <code>RoomOpTagDelete = 1034;</code>
     */
    public static final int RoomOpTagDelete_VALUE = 1034;
    /**
     * <pre>
     * 创建欢迎页
     * </pre>
     *
     * <code>RoomOpWelcomeCreate = 1035;</code>
     */
    public static final int RoomOpWelcomeCreate_VALUE = 1035;
    /**
     * <pre>
     * 修改欢迎页
     * </pre>
     *
     * <code>RoomOpWelcomeUpdate = 1036;</code>
     */
    public static final int RoomOpWelcomeUpdate_VALUE = 1036;
    /**
     * <pre>
     * 房间基础信息审核
     * </pre>
     *
     * <code>RoomOpRoomAudit = 1037;</code>
     */
    public static final int RoomOpRoomAudit_VALUE = 1037;
    /**
     * <pre>
     * 房间外链审核
     * </pre>
     *
     * <code>RoomOpExternalLinkAudit = 1038;</code>
     */
    public static final int RoomOpExternalLinkAudit_VALUE = 1038;
    /**
     * <pre>
     * 编辑等级头衔
     * </pre>
     *
     * <code>RoomOpLevelUpdate = 1039;</code>
     */
    public static final int RoomOpLevelUpdate_VALUE = 1039;
    /**
     * <pre>
     * 添加机器人
     * </pre>
     *
     * <code>RoomOpBotJoin = 1040;</code>
     */
    public static final int RoomOpBotJoin_VALUE = 1040;
    /**
     * <pre>
     * 移除机器人
     * </pre>
     *
     * <code>RoomOpBotLeave = 1041;</code>
     */
    public static final int RoomOpBotLeave_VALUE = 1041;
    /**
     * <pre>
     * 频道信息审核
     * </pre>
     *
     * <code>RoomOpChannelAudit = 1042;</code>
     */
    public static final int RoomOpChannelAudit_VALUE = 1042;
    /**
     * <pre>
     * 机器人欢迎语审核
     * </pre>
     *
     * <code>RoomOpBotAuditGreeting = 1043;</code>
     */
    public static final int RoomOpBotAuditGreeting_VALUE = 1043;
    /**
     * <pre>
     * 频道分类信息审核
     * </pre>
     *
     * <code>RoomOpChannelGroupAudit = 1044;</code>
     */
    public static final int RoomOpChannelGroupAudit_VALUE = 1044;
    /**
     * <pre>
     * 机器人欢迎语自动回复
     * </pre>
     *
     * <code>RoomOpBotAuditAutoReply = 1045;</code>
     */
    public static final int RoomOpBotAuditAutoReply_VALUE = 1045;
    /**
     * <pre>
     * 创建成员等级
     * </pre>
     *
     * <code>RoomOpMemberLevelCreate = 1046;</code>
     */
    public static final int RoomOpMemberLevelCreate_VALUE = 1046;
    /**
     * <pre>
     * 更新成员等级
     * </pre>
     *
     * <code>RoomOpMemberLevelUpdate = 1047;</code>
     */
    public static final int RoomOpMemberLevelUpdate_VALUE = 1047;
    /**
     * <pre>
     * 成员等级审核
     * </pre>
     *
     * <code>RoomOpMemberLevelAudit = 1048;</code>
     */
    public static final int RoomOpMemberLevelAudit_VALUE = 1048;
    /**
     * <pre>
     * 身份组审核
     * </pre>
     *
     * <code>RoomOpRoomGroupAudit = 1049;</code>
     */
    public static final int RoomOpRoomGroupAudit_VALUE = 1049;
    /**
     * <pre>
     * 广场审核
     * </pre>
     *
     * <code>RoomOpSquareAudit = 1050;</code>
     */
    public static final int RoomOpSquareAudit_VALUE = 1050;
    /**
     * <pre>
     * 欢迎页审核
     * </pre>
     *
     * <code>RoomOpWelcomeAudit = 1051;</code>
     */
    public static final int RoomOpWelcomeAudit_VALUE = 1051;
    /**
     * <pre>
     * 举报房间
     * </pre>
     *
     * <code>RoomOpReport = 1052;</code>
     */
    public static final int RoomOpReport_VALUE = 1052;
    /**
     * <pre>
     * 举报房间审核
     * </pre>
     *
     * <code>RoomOpReportAudit = 1053;</code>
     */
    public static final int RoomOpReportAudit_VALUE = 1053;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RoomOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoomOp forNumber(int value) {
      switch (value) {
        case 0: return RoomOpUnknown;
        case 1001: return RoomOpRoomCreate;
        case 1002: return RoomOpRoomUpdate;
        case 1003: return RoomOpRoomDelete;
        case 1004: return RoomOpChannelCreate;
        case 1005: return RoomOpChannelUpdate;
        case 1006: return RoomOpChannelDelete;
        case 1007: return RoomOpChannelGroupCreate;
        case 1008: return RoomOpChannelGroupUpdate;
        case 1009: return RoomOpChannelGroupDelete;
        case 1010: return RoomOpChannelSort;
        case 1011: return RoomOpChannelGroupSort;
        case 1012: return RoomOpRoomGroupCreate;
        case 1013: return RoomOpRoomGroupDelete;
        case 1014: return RoomOpRoomGroupUpdate;
        case 1015: return RoomOpMemberKickout;
        case 1016: return RoomOpMemberUnKickout;
        case 1017: return RoomOpMemberNospeak;
        case 1018: return RoomOpMemberUnNospeak;
        case 1019: return RoomOpMemberRemoveFromRoomGroup;
        case 1020: return RoomOpMemberAddToRoomGroup;
        case 1021: return RoomOpMessageHide;
        case 1022: return RoomOpMessageDelete;
        case 1023: return RoomOpMessagePin;
        case 1024: return RoomOpMessageUnPin;
        case 1025: return RoomOpRoomOwnerChange;
        case 1026: return RoomOpRoomArchive;
        case 1027: return RoomOpExternalLinkCreate;
        case 1028: return RoomOpExternalLinkUpdate;
        case 1029: return RoomOpExternalLinkDelete;
        case 1030: return RoomOpSquareCreate;
        case 1031: return RoomOpSquareUpdate;
        case 1032: return RoomOpChannelArchive;
        case 1033: return RoomOpTagAdd;
        case 1034: return RoomOpTagDelete;
        case 1035: return RoomOpWelcomeCreate;
        case 1036: return RoomOpWelcomeUpdate;
        case 1037: return RoomOpRoomAudit;
        case 1038: return RoomOpExternalLinkAudit;
        case 1039: return RoomOpLevelUpdate;
        case 1040: return RoomOpBotJoin;
        case 1041: return RoomOpBotLeave;
        case 1042: return RoomOpChannelAudit;
        case 1043: return RoomOpBotAuditGreeting;
        case 1044: return RoomOpChannelGroupAudit;
        case 1045: return RoomOpBotAuditAutoReply;
        case 1046: return RoomOpMemberLevelCreate;
        case 1047: return RoomOpMemberLevelUpdate;
        case 1048: return RoomOpMemberLevelAudit;
        case 1049: return RoomOpRoomGroupAudit;
        case 1050: return RoomOpSquareAudit;
        case 1051: return RoomOpWelcomeAudit;
        case 1052: return RoomOpReport;
        case 1053: return RoomOpReportAudit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoomOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoomOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoomOp>() {
            public RoomOp findValueByNumber(int number) {
              return RoomOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(13);
    }

    private static final RoomOp[] VALUES = values();

    public static RoomOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoomOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.RoomOp)
  }

  /**
   * <pre>
   * UserOp 用户操作
   * </pre>
   *
   * Protobuf enum {@code shuo.UserOp}
   */
  public enum UserOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>UserOpUnknown = 0;</code>
     */
    UserOpUnknown(0),
    /**
     * <pre>
     * 昵称修改
     * </pre>
     *
     * <code>UserOpNicknameUpdate = 2001;</code>
     */
    UserOpNicknameUpdate(2001),
    /**
     * <pre>
     * 头像修改
     * </pre>
     *
     * <code>UserOpAvatarUpdate = 2002;</code>
     */
    UserOpAvatarUpdate(2002),
    /**
     * <pre>
     * 昵称审核
     * </pre>
     *
     * <code>UserOpNicknameAudit = 2003;</code>
     */
    UserOpNicknameAudit(2003),
    /**
     * <pre>
     * 头像审核
     * </pre>
     *
     * <code>UserOpAvatarAudit = 2004;</code>
     */
    UserOpAvatarAudit(2004),
    /**
     * <pre>
     * 更新个人资料
     * </pre>
     *
     * <code>UserOpProfileUpdate = 2005;</code>
     */
    UserOpProfileUpdate(2005),
    /**
     * <pre>
     * 加入房间
     * </pre>
     *
     * <code>UserOpJoinRoom = 2006;</code>
     */
    UserOpJoinRoom(2006),
    /**
     * <pre>
     * 退出房间
     * </pre>
     *
     * <code>UserOpQuitRoom = 2007;</code>
     */
    UserOpQuitRoom(2007),
    /**
     * <pre>
     * 被踢出房间
     * </pre>
     *
     * <code>UserOpKickout = 2008;</code>
     */
    UserOpKickout(2008),
    /**
     * <pre>
     * 取消被踢出房间
     * </pre>
     *
     * <code>UserOpUnKickout = 2009;</code>
     */
    UserOpUnKickout(2009),
    /**
     * <pre>
     * 被禁言
     * </pre>
     *
     * <code>UserOpNospeak = 2010;</code>
     */
    UserOpNospeak(2010),
    /**
     * <pre>
     * 取消被禁言
     * </pre>
     *
     * <code>UserOpUnNospeak = 2011;</code>
     */
    UserOpUnNospeak(2011),
    /**
     * <pre>
     * 被全局禁言
     * </pre>
     *
     * <code>UserOpMute = 2012;</code>
     */
    UserOpMute(2012),
    /**
     * <pre>
     * 取消被全局禁言
     * </pre>
     *
     * <code>UserOpUnMute = 2013;</code>
     */
    UserOpUnMute(2013),
    /**
     * <pre>
     * 被全局封禁
     * </pre>
     *
     * <code>UserOpBan = 2014;</code>
     */
    UserOpBan(2014),
    /**
     * <pre>
     * 取消被全局封禁
     * </pre>
     *
     * <code>UserOpUnBan = 2015;</code>
     */
    UserOpUnBan(2015),
    /**
     * <pre>
     * 移出房间身份组
     * </pre>
     *
     * <code>UserOpRemoveFromRoomGroup = 2016;</code>
     */
    UserOpRemoveFromRoomGroup(2016),
    /**
     * <pre>
     * 加入房间身份组
     * </pre>
     *
     * <code>UserOpAddToRoomGroup = 2017;</code>
     */
    UserOpAddToRoomGroup(2017),
    /**
     * <pre>
     * 举报用户
     * </pre>
     *
     * <code>UserOpReport = 2018;</code>
     */
    UserOpReport(2018),
    /**
     * <pre>
     * 举报用户审核
     * </pre>
     *
     * <code>UserOpReportAudit = 2019;</code>
     */
    UserOpReportAudit(2019),
    /**
     * <pre>
     * 设置房主
     * </pre>
     *
     * <code>UserOpRoomOwnerSet = 2020;</code>
     */
    UserOpRoomOwnerSet(2020),
    /**
     * <pre>
     * 取消房主
     * </pre>
     *
     * <code>UserOpRoomOwnerUnset = 2021;</code>
     */
    UserOpRoomOwnerUnset(2021),
    /**
     * <pre>
     * 重设默认昵称
     * </pre>
     *
     * <code>UserOpNicknameReset = 2022;</code>
     */
    UserOpNicknameReset(2022),
    /**
     * <pre>
     * 重设默认头像
     * </pre>
     *
     * <code>UserOpAvatarReset = 2023;</code>
     */
    UserOpAvatarReset(2023),
    /**
     * <pre>
     * 移入小黑屋
     * </pre>
     *
     * <code>UserOpImprison = 2024;</code>
     */
    UserOpImprison(2024),
    /**
     * <pre>
     * 移出小黑屋
     * </pre>
     *
     * <code>UserOpUnImprison = 2025;</code>
     */
    UserOpUnImprison(2025),
    /**
     * <pre>
     * 开发者申请
     * </pre>
     *
     * <code>UserOpDevloperApply = 2026;</code>
     */
    UserOpDevloperApply(2026),
    /**
     * <pre>
     * 撤销开发者申请
     * </pre>
     *
     * <code>UserOpDevloperCancel = 2027;</code>
     */
    UserOpDevloperCancel(2027),
    /**
     * <pre>
     * 审核开发者申请
     * </pre>
     *
     * <code>UserOpDevloperAudit = 2028;</code>
     */
    UserOpDevloperAudit(2028),
    /**
     * <pre>
     * 实名认证
     * </pre>
     *
     * <code>UserOpIdentityVerif = 2029;</code>
     */
    UserOpIdentityVerif(2029),
    /**
     * <pre>
     * 给用户发系统通知
     * </pre>
     *
     * <code>UserOpSystemNotify = 2030;</code>
     */
    UserOpSystemNotify(2030),
    /**
     * <pre>
     * 管理员对用户备注
     * </pre>
     *
     * <code>UserOpAdminRemark = 2031;</code>
     */
    UserOpAdminRemark(2031),
    /**
     * <pre>
     * 举报私聊用户
     * </pre>
     *
     * <code>UserOpReportPrivate = 2032;</code>
     */
    UserOpReportPrivate(2032),
    /**
     * <pre>
     * 举报私聊用户审核
     * </pre>
     *
     * <code>UserOpReportPrivateAudit = 2033;</code>
     */
    UserOpReportPrivateAudit(2033),
    /**
     * <pre>
     * 注册
     * </pre>
     *
     * <code>UserOpRegister = 2034;</code>
     */
    UserOpRegister(2034),
    /**
     * <pre>
     * 登陆
     * </pre>
     *
     * <code>UserOpLogin = 2035;</code>
     */
    UserOpLogin(2035),
    /**
     * <pre>
     * 注册审核
     * </pre>
     *
     * <code>UserOpRegisterAudit = 2036;</code>
     */
    UserOpRegisterAudit(2036),
    /**
     * <pre>
     * 登陆审核
     * </pre>
     *
     * <code>UserOpLoginAudit = 2037;</code>
     */
    UserOpLoginAudit(2037),
    /**
     * <pre>
     *官方认证
     * </pre>
     *
     * <code>UserOpOfficialCertification = 2038;</code>
     */
    UserOpOfficialCertification(2038),
    /**
     * <pre>
     * 创建笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteCreate = 2039;</code>
     */
    UserOpNoteCreate(2039),
    /**
     * <pre>
     * 修改笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteUpdate = 2040;</code>
     */
    UserOpNoteUpdate(2040),
    /**
     * <pre>
     * 删除笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteDelete = 2041;</code>
     */
    UserOpNoteDelete(2041),
    /**
     * <pre>
     * 审核笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteAudit = 2042;</code>
     */
    UserOpNoteAudit(2042),
    /**
     * <pre>
     * 昵称审核反馈
     * </pre>
     *
     * <code>UserOpNicknameAuditFeedback = 2043;</code>
     */
    UserOpNicknameAuditFeedback(2043),
    /**
     * <pre>
     * 头像审核反馈
     * </pre>
     *
     * <code>UserOpAvatarAuditFeedback = 2044;</code>
     */
    UserOpAvatarAuditFeedback(2044),
    /**
     * <pre>
     * 举报组队用户
     * </pre>
     *
     * <code>UserOpReportTeam = 2045;</code>
     */
    UserOpReportTeam(2045),
    /**
     * <pre>
     * 举报组队用户审核
     * </pre>
     *
     * <code>UserOpReportTeamAudit = 2046;</code>
     */
    UserOpReportTeamAudit(2046),
    /**
     * <pre>
     * 举报说说用户
     * </pre>
     *
     * <code>UserOpReportTalk = 2047;</code>
     */
    UserOpReportTalk(2047),
    /**
     * <pre>
     * 举报说说用户审核
     * </pre>
     *
     * <code>UserOpReportTalkAudit = 2048;</code>
     */
    UserOpReportTalkAudit(2048),
    /**
     * <pre>
     * 预注销账号
     * </pre>
     *
     * <code>UserOpPreCloseAccount = 2049;</code>
     */
    UserOpPreCloseAccount(2049),
    /**
     * <pre>
     * 背景图修改
     * </pre>
     *
     * <code>UserOpCoverUpdate = 2050;</code>
     */
    UserOpCoverUpdate(2050),
    /**
     * <pre>
     * 背景图审核
     * </pre>
     *
     * <code>UserOpCoverAudit = 2051;</code>
     */
    UserOpCoverAudit(2051),
    /**
     * <pre>
     * 重设背景图
     * </pre>
     *
     * <code>UserOpCoverReset = 2052;</code>
     */
    UserOpCoverReset(2052),
    /**
     * <pre>
     * 背景图审核反馈
     * </pre>
     *
     * <code>UserOpCoverAuditFeedback = 2053;</code>
     */
    UserOpCoverAuditFeedback(2053),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>UserOpUnknown = 0;</code>
     */
    public static final int UserOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 昵称修改
     * </pre>
     *
     * <code>UserOpNicknameUpdate = 2001;</code>
     */
    public static final int UserOpNicknameUpdate_VALUE = 2001;
    /**
     * <pre>
     * 头像修改
     * </pre>
     *
     * <code>UserOpAvatarUpdate = 2002;</code>
     */
    public static final int UserOpAvatarUpdate_VALUE = 2002;
    /**
     * <pre>
     * 昵称审核
     * </pre>
     *
     * <code>UserOpNicknameAudit = 2003;</code>
     */
    public static final int UserOpNicknameAudit_VALUE = 2003;
    /**
     * <pre>
     * 头像审核
     * </pre>
     *
     * <code>UserOpAvatarAudit = 2004;</code>
     */
    public static final int UserOpAvatarAudit_VALUE = 2004;
    /**
     * <pre>
     * 更新个人资料
     * </pre>
     *
     * <code>UserOpProfileUpdate = 2005;</code>
     */
    public static final int UserOpProfileUpdate_VALUE = 2005;
    /**
     * <pre>
     * 加入房间
     * </pre>
     *
     * <code>UserOpJoinRoom = 2006;</code>
     */
    public static final int UserOpJoinRoom_VALUE = 2006;
    /**
     * <pre>
     * 退出房间
     * </pre>
     *
     * <code>UserOpQuitRoom = 2007;</code>
     */
    public static final int UserOpQuitRoom_VALUE = 2007;
    /**
     * <pre>
     * 被踢出房间
     * </pre>
     *
     * <code>UserOpKickout = 2008;</code>
     */
    public static final int UserOpKickout_VALUE = 2008;
    /**
     * <pre>
     * 取消被踢出房间
     * </pre>
     *
     * <code>UserOpUnKickout = 2009;</code>
     */
    public static final int UserOpUnKickout_VALUE = 2009;
    /**
     * <pre>
     * 被禁言
     * </pre>
     *
     * <code>UserOpNospeak = 2010;</code>
     */
    public static final int UserOpNospeak_VALUE = 2010;
    /**
     * <pre>
     * 取消被禁言
     * </pre>
     *
     * <code>UserOpUnNospeak = 2011;</code>
     */
    public static final int UserOpUnNospeak_VALUE = 2011;
    /**
     * <pre>
     * 被全局禁言
     * </pre>
     *
     * <code>UserOpMute = 2012;</code>
     */
    public static final int UserOpMute_VALUE = 2012;
    /**
     * <pre>
     * 取消被全局禁言
     * </pre>
     *
     * <code>UserOpUnMute = 2013;</code>
     */
    public static final int UserOpUnMute_VALUE = 2013;
    /**
     * <pre>
     * 被全局封禁
     * </pre>
     *
     * <code>UserOpBan = 2014;</code>
     */
    public static final int UserOpBan_VALUE = 2014;
    /**
     * <pre>
     * 取消被全局封禁
     * </pre>
     *
     * <code>UserOpUnBan = 2015;</code>
     */
    public static final int UserOpUnBan_VALUE = 2015;
    /**
     * <pre>
     * 移出房间身份组
     * </pre>
     *
     * <code>UserOpRemoveFromRoomGroup = 2016;</code>
     */
    public static final int UserOpRemoveFromRoomGroup_VALUE = 2016;
    /**
     * <pre>
     * 加入房间身份组
     * </pre>
     *
     * <code>UserOpAddToRoomGroup = 2017;</code>
     */
    public static final int UserOpAddToRoomGroup_VALUE = 2017;
    /**
     * <pre>
     * 举报用户
     * </pre>
     *
     * <code>UserOpReport = 2018;</code>
     */
    public static final int UserOpReport_VALUE = 2018;
    /**
     * <pre>
     * 举报用户审核
     * </pre>
     *
     * <code>UserOpReportAudit = 2019;</code>
     */
    public static final int UserOpReportAudit_VALUE = 2019;
    /**
     * <pre>
     * 设置房主
     * </pre>
     *
     * <code>UserOpRoomOwnerSet = 2020;</code>
     */
    public static final int UserOpRoomOwnerSet_VALUE = 2020;
    /**
     * <pre>
     * 取消房主
     * </pre>
     *
     * <code>UserOpRoomOwnerUnset = 2021;</code>
     */
    public static final int UserOpRoomOwnerUnset_VALUE = 2021;
    /**
     * <pre>
     * 重设默认昵称
     * </pre>
     *
     * <code>UserOpNicknameReset = 2022;</code>
     */
    public static final int UserOpNicknameReset_VALUE = 2022;
    /**
     * <pre>
     * 重设默认头像
     * </pre>
     *
     * <code>UserOpAvatarReset = 2023;</code>
     */
    public static final int UserOpAvatarReset_VALUE = 2023;
    /**
     * <pre>
     * 移入小黑屋
     * </pre>
     *
     * <code>UserOpImprison = 2024;</code>
     */
    public static final int UserOpImprison_VALUE = 2024;
    /**
     * <pre>
     * 移出小黑屋
     * </pre>
     *
     * <code>UserOpUnImprison = 2025;</code>
     */
    public static final int UserOpUnImprison_VALUE = 2025;
    /**
     * <pre>
     * 开发者申请
     * </pre>
     *
     * <code>UserOpDevloperApply = 2026;</code>
     */
    public static final int UserOpDevloperApply_VALUE = 2026;
    /**
     * <pre>
     * 撤销开发者申请
     * </pre>
     *
     * <code>UserOpDevloperCancel = 2027;</code>
     */
    public static final int UserOpDevloperCancel_VALUE = 2027;
    /**
     * <pre>
     * 审核开发者申请
     * </pre>
     *
     * <code>UserOpDevloperAudit = 2028;</code>
     */
    public static final int UserOpDevloperAudit_VALUE = 2028;
    /**
     * <pre>
     * 实名认证
     * </pre>
     *
     * <code>UserOpIdentityVerif = 2029;</code>
     */
    public static final int UserOpIdentityVerif_VALUE = 2029;
    /**
     * <pre>
     * 给用户发系统通知
     * </pre>
     *
     * <code>UserOpSystemNotify = 2030;</code>
     */
    public static final int UserOpSystemNotify_VALUE = 2030;
    /**
     * <pre>
     * 管理员对用户备注
     * </pre>
     *
     * <code>UserOpAdminRemark = 2031;</code>
     */
    public static final int UserOpAdminRemark_VALUE = 2031;
    /**
     * <pre>
     * 举报私聊用户
     * </pre>
     *
     * <code>UserOpReportPrivate = 2032;</code>
     */
    public static final int UserOpReportPrivate_VALUE = 2032;
    /**
     * <pre>
     * 举报私聊用户审核
     * </pre>
     *
     * <code>UserOpReportPrivateAudit = 2033;</code>
     */
    public static final int UserOpReportPrivateAudit_VALUE = 2033;
    /**
     * <pre>
     * 注册
     * </pre>
     *
     * <code>UserOpRegister = 2034;</code>
     */
    public static final int UserOpRegister_VALUE = 2034;
    /**
     * <pre>
     * 登陆
     * </pre>
     *
     * <code>UserOpLogin = 2035;</code>
     */
    public static final int UserOpLogin_VALUE = 2035;
    /**
     * <pre>
     * 注册审核
     * </pre>
     *
     * <code>UserOpRegisterAudit = 2036;</code>
     */
    public static final int UserOpRegisterAudit_VALUE = 2036;
    /**
     * <pre>
     * 登陆审核
     * </pre>
     *
     * <code>UserOpLoginAudit = 2037;</code>
     */
    public static final int UserOpLoginAudit_VALUE = 2037;
    /**
     * <pre>
     *官方认证
     * </pre>
     *
     * <code>UserOpOfficialCertification = 2038;</code>
     */
    public static final int UserOpOfficialCertification_VALUE = 2038;
    /**
     * <pre>
     * 创建笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteCreate = 2039;</code>
     */
    public static final int UserOpNoteCreate_VALUE = 2039;
    /**
     * <pre>
     * 修改笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteUpdate = 2040;</code>
     */
    public static final int UserOpNoteUpdate_VALUE = 2040;
    /**
     * <pre>
     * 删除笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteDelete = 2041;</code>
     */
    public static final int UserOpNoteDelete_VALUE = 2041;
    /**
     * <pre>
     * 审核笔记 Deprecated
     * </pre>
     *
     * <code>UserOpNoteAudit = 2042;</code>
     */
    public static final int UserOpNoteAudit_VALUE = 2042;
    /**
     * <pre>
     * 昵称审核反馈
     * </pre>
     *
     * <code>UserOpNicknameAuditFeedback = 2043;</code>
     */
    public static final int UserOpNicknameAuditFeedback_VALUE = 2043;
    /**
     * <pre>
     * 头像审核反馈
     * </pre>
     *
     * <code>UserOpAvatarAuditFeedback = 2044;</code>
     */
    public static final int UserOpAvatarAuditFeedback_VALUE = 2044;
    /**
     * <pre>
     * 举报组队用户
     * </pre>
     *
     * <code>UserOpReportTeam = 2045;</code>
     */
    public static final int UserOpReportTeam_VALUE = 2045;
    /**
     * <pre>
     * 举报组队用户审核
     * </pre>
     *
     * <code>UserOpReportTeamAudit = 2046;</code>
     */
    public static final int UserOpReportTeamAudit_VALUE = 2046;
    /**
     * <pre>
     * 举报说说用户
     * </pre>
     *
     * <code>UserOpReportTalk = 2047;</code>
     */
    public static final int UserOpReportTalk_VALUE = 2047;
    /**
     * <pre>
     * 举报说说用户审核
     * </pre>
     *
     * <code>UserOpReportTalkAudit = 2048;</code>
     */
    public static final int UserOpReportTalkAudit_VALUE = 2048;
    /**
     * <pre>
     * 预注销账号
     * </pre>
     *
     * <code>UserOpPreCloseAccount = 2049;</code>
     */
    public static final int UserOpPreCloseAccount_VALUE = 2049;
    /**
     * <pre>
     * 背景图修改
     * </pre>
     *
     * <code>UserOpCoverUpdate = 2050;</code>
     */
    public static final int UserOpCoverUpdate_VALUE = 2050;
    /**
     * <pre>
     * 背景图审核
     * </pre>
     *
     * <code>UserOpCoverAudit = 2051;</code>
     */
    public static final int UserOpCoverAudit_VALUE = 2051;
    /**
     * <pre>
     * 重设背景图
     * </pre>
     *
     * <code>UserOpCoverReset = 2052;</code>
     */
    public static final int UserOpCoverReset_VALUE = 2052;
    /**
     * <pre>
     * 背景图审核反馈
     * </pre>
     *
     * <code>UserOpCoverAuditFeedback = 2053;</code>
     */
    public static final int UserOpCoverAuditFeedback_VALUE = 2053;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static UserOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserOp forNumber(int value) {
      switch (value) {
        case 0: return UserOpUnknown;
        case 2001: return UserOpNicknameUpdate;
        case 2002: return UserOpAvatarUpdate;
        case 2003: return UserOpNicknameAudit;
        case 2004: return UserOpAvatarAudit;
        case 2005: return UserOpProfileUpdate;
        case 2006: return UserOpJoinRoom;
        case 2007: return UserOpQuitRoom;
        case 2008: return UserOpKickout;
        case 2009: return UserOpUnKickout;
        case 2010: return UserOpNospeak;
        case 2011: return UserOpUnNospeak;
        case 2012: return UserOpMute;
        case 2013: return UserOpUnMute;
        case 2014: return UserOpBan;
        case 2015: return UserOpUnBan;
        case 2016: return UserOpRemoveFromRoomGroup;
        case 2017: return UserOpAddToRoomGroup;
        case 2018: return UserOpReport;
        case 2019: return UserOpReportAudit;
        case 2020: return UserOpRoomOwnerSet;
        case 2021: return UserOpRoomOwnerUnset;
        case 2022: return UserOpNicknameReset;
        case 2023: return UserOpAvatarReset;
        case 2024: return UserOpImprison;
        case 2025: return UserOpUnImprison;
        case 2026: return UserOpDevloperApply;
        case 2027: return UserOpDevloperCancel;
        case 2028: return UserOpDevloperAudit;
        case 2029: return UserOpIdentityVerif;
        case 2030: return UserOpSystemNotify;
        case 2031: return UserOpAdminRemark;
        case 2032: return UserOpReportPrivate;
        case 2033: return UserOpReportPrivateAudit;
        case 2034: return UserOpRegister;
        case 2035: return UserOpLogin;
        case 2036: return UserOpRegisterAudit;
        case 2037: return UserOpLoginAudit;
        case 2038: return UserOpOfficialCertification;
        case 2039: return UserOpNoteCreate;
        case 2040: return UserOpNoteUpdate;
        case 2041: return UserOpNoteDelete;
        case 2042: return UserOpNoteAudit;
        case 2043: return UserOpNicknameAuditFeedback;
        case 2044: return UserOpAvatarAuditFeedback;
        case 2045: return UserOpReportTeam;
        case 2046: return UserOpReportTeamAudit;
        case 2047: return UserOpReportTalk;
        case 2048: return UserOpReportTalkAudit;
        case 2049: return UserOpPreCloseAccount;
        case 2050: return UserOpCoverUpdate;
        case 2051: return UserOpCoverAudit;
        case 2052: return UserOpCoverReset;
        case 2053: return UserOpCoverAuditFeedback;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserOp>() {
            public UserOp findValueByNumber(int number) {
              return UserOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(14);
    }

    private static final UserOp[] VALUES = values();

    public static UserOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.UserOp)
  }

  /**
   * <pre>
   * MessageOp 消息操作
   * </pre>
   *
   * Protobuf enum {@code shuo.MessageOp}
   */
  public enum MessageOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>MessageOpUnknown = 0;</code>
     */
    MessageOpUnknown(0),
    /**
     * <pre>
     * 发送消息
     * </pre>
     *
     * <code>MessageOpNew = 3001;</code>
     */
    MessageOpNew(3001),
    /**
     * <pre>
     * 编辑消息
     * </pre>
     *
     * <code>MessageOpEdit = 3002;</code>
     */
    MessageOpEdit(3002),
    /**
     * <pre>
     * 删除消息
     * </pre>
     *
     * <code>MessageOpDelete = 3003;</code>
     */
    MessageOpDelete(3003),
    /**
     * <pre>
     * 隐藏消息
     * </pre>
     *
     * <code>MessageOpHide = 3004;</code>
     */
    MessageOpHide(3004),
    /**
     * <pre>
     * 显示消息
     * </pre>
     *
     * <code>MessageOpShow = 3005;</code>
     */
    MessageOpShow(3005),
    /**
     * <pre>
     * 消息审核
     * </pre>
     *
     * <code>MessageOpChatAudit = 3006;</code>
     */
    MessageOpChatAudit(3006),
    /**
     * <pre>
     * 举报消息
     * </pre>
     *
     * <code>MessageOpReport = 3007;</code>
     */
    MessageOpReport(3007),
    /**
     * <pre>
     * 举报消息审核
     * </pre>
     *
     * <code>MessageOpReportAudit = 3008;</code>
     */
    MessageOpReportAudit(3008),
    /**
     * <pre>
     * 置顶消息
     * </pre>
     *
     * <code>MessageOpPin = 3009;</code>
     */
    MessageOpPin(3009),
    /**
     * <pre>
     * 取消置顶消息
     * </pre>
     *
     * <code>MessageOpUnPin = 3010;</code>
     */
    MessageOpUnPin(3010),
    /**
     * <pre>
     * 设置热门消息
     * </pre>
     *
     * <code>MessageOpHot = 3011;</code>
     */
    MessageOpHot(3011),
    /**
     * <pre>
     * 取消热门消息
     * </pre>
     *
     * <code>MessageOpUnHot = 3012;</code>
     */
    MessageOpUnHot(3012),
    /**
     * <pre>
     * 审核热门消息
     * </pre>
     *
     * <code>MessageOpHotAudit = 3013;</code>
     */
    MessageOpHotAudit(3013),
    /**
     * <pre>
     * 设置热门精选消息
     * </pre>
     *
     * <code>MessageOpHotCollect = 3014;</code>
     */
    MessageOpHotCollect(3014),
    /**
     * <pre>
     * 取消热门精选消息
     * </pre>
     *
     * <code>MessageOpUnHotCollect = 3015;</code>
     */
    MessageOpUnHotCollect(3015),
    /**
     * <pre>
     * 审核热门精选消息
     * </pre>
     *
     * <code>MessageOpHotCollectAudit = 3016;</code>
     */
    MessageOpHotCollectAudit(3016),
    /**
     * <pre>
     * 群聊链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaAudit = 3017;</code>
     */
    MessageOpLinkMetaAudit(3017),
    /**
     * <pre>
     * 私聊链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaPrivateAudit = 3018;</code>
     */
    MessageOpLinkMetaPrivateAudit(3018),
    /**
     * <pre>
     * 私聊消息审核
     * </pre>
     *
     * <code>MessageOpChatPrivateAudit = 3019;</code>
     */
    MessageOpChatPrivateAudit(3019),
    /**
     * <pre>
     * 举报私聊消息
     * </pre>
     *
     * <code>MessageOpReportPrivate = 3020;</code>
     */
    MessageOpReportPrivate(3020),
    /**
     * <pre>
     * 举报私聊消息审核
     * </pre>
     *
     * <code>MessageOpReportPrivateAudit = 3021;</code>
     */
    MessageOpReportPrivateAudit(3021),
    /**
     * <pre>
     * 审核推荐消息
     * </pre>
     *
     * <code>MessageOpRecommendAudit = 3022;</code>
     */
    MessageOpRecommendAudit(3022),
    /**
     * <pre>
     * 举报组队消息
     * </pre>
     *
     * <code>MessageOpReportTeam = 3023;</code>
     */
    MessageOpReportTeam(3023),
    /**
     * <pre>
     * 举报组队消息审核
     * </pre>
     *
     * <code>MessageOpReportTeamAudit = 3024;</code>
     */
    MessageOpReportTeamAudit(3024),
    /**
     * <pre>
     * 组队链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaTeamAudit = 3025;</code>
     */
    MessageOpLinkMetaTeamAudit(3025),
    /**
     * <pre>
     * 组队消息审核
     * </pre>
     *
     * <code>MessageOpChatTeamAudit = 3026;</code>
     */
    MessageOpChatTeamAudit(3026),
    /**
     * <pre>
     * 举报说说消息
     * </pre>
     *
     * <code>MessageOpReportTalk = 3027;</code>
     */
    MessageOpReportTalk(3027),
    /**
     * <pre>
     * 举报说说消息审核
     * </pre>
     *
     * <code>MessageOpReportTalkAudit = 3028;</code>
     */
    MessageOpReportTalkAudit(3028),
    /**
     * <pre>
     * 说说链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaTalkAudit = 3029;</code>
     */
    MessageOpLinkMetaTalkAudit(3029),
    /**
     * <pre>
     * 说说消息审核
     * </pre>
     *
     * <code>MessageOpChatTalkAudit = 3030;</code>
     */
    MessageOpChatTalkAudit(3030),
    /**
     * <pre>
     * 私聊视频消息审核
     * </pre>
     *
     * <code>MessageOpPrivateChatVideoAudit = 3031;</code>
     */
    MessageOpPrivateChatVideoAudit(3031),
    /**
     * <pre>
     * 群聊视频消息审核
     * </pre>
     *
     * <code>MessageOpGroupChatVideoAudit = 3032;</code>
     */
    MessageOpGroupChatVideoAudit(3032),
    /**
     * <pre>
     * 动态视频消息审核
     * </pre>
     *
     * <code>MessageOpTalkVideoAudit = 3033;</code>
     */
    MessageOpTalkVideoAudit(3033),
    /**
     * <pre>
     * 举报私聊视频消息
     * </pre>
     *
     * <code>MessageOpReportPrivateChatVideo = 3034;</code>
     */
    MessageOpReportPrivateChatVideo(3034),
    /**
     * <pre>
     * 举报群聊视频消息
     * </pre>
     *
     * <code>MessageOpReportGroupChatVideo = 3035;</code>
     */
    MessageOpReportGroupChatVideo(3035),
    /**
     * <pre>
     * 举报动态视频消息
     * </pre>
     *
     * <code>MessageOpReportTalkVideo = 3036;</code>
     */
    MessageOpReportTalkVideo(3036),
    /**
     * <pre>
     * 举报私聊视频消息审核
     * </pre>
     *
     * <code>MessageOpReportPrivateChatVideoAudit = 3037;</code>
     */
    MessageOpReportPrivateChatVideoAudit(3037),
    /**
     * <pre>
     * 举报群聊视频消息审核
     * </pre>
     *
     * <code>MessageOpReportGroupChatVideoAudit = 3038;</code>
     */
    MessageOpReportGroupChatVideoAudit(3038),
    /**
     * <pre>
     * 举报动态视频消息审核
     * </pre>
     *
     * <code>MessageOpReportTalkVideoAudit = 3039;</code>
     */
    MessageOpReportTalkVideoAudit(3039),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>MessageOpUnknown = 0;</code>
     */
    public static final int MessageOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 发送消息
     * </pre>
     *
     * <code>MessageOpNew = 3001;</code>
     */
    public static final int MessageOpNew_VALUE = 3001;
    /**
     * <pre>
     * 编辑消息
     * </pre>
     *
     * <code>MessageOpEdit = 3002;</code>
     */
    public static final int MessageOpEdit_VALUE = 3002;
    /**
     * <pre>
     * 删除消息
     * </pre>
     *
     * <code>MessageOpDelete = 3003;</code>
     */
    public static final int MessageOpDelete_VALUE = 3003;
    /**
     * <pre>
     * 隐藏消息
     * </pre>
     *
     * <code>MessageOpHide = 3004;</code>
     */
    public static final int MessageOpHide_VALUE = 3004;
    /**
     * <pre>
     * 显示消息
     * </pre>
     *
     * <code>MessageOpShow = 3005;</code>
     */
    public static final int MessageOpShow_VALUE = 3005;
    /**
     * <pre>
     * 消息审核
     * </pre>
     *
     * <code>MessageOpChatAudit = 3006;</code>
     */
    public static final int MessageOpChatAudit_VALUE = 3006;
    /**
     * <pre>
     * 举报消息
     * </pre>
     *
     * <code>MessageOpReport = 3007;</code>
     */
    public static final int MessageOpReport_VALUE = 3007;
    /**
     * <pre>
     * 举报消息审核
     * </pre>
     *
     * <code>MessageOpReportAudit = 3008;</code>
     */
    public static final int MessageOpReportAudit_VALUE = 3008;
    /**
     * <pre>
     * 置顶消息
     * </pre>
     *
     * <code>MessageOpPin = 3009;</code>
     */
    public static final int MessageOpPin_VALUE = 3009;
    /**
     * <pre>
     * 取消置顶消息
     * </pre>
     *
     * <code>MessageOpUnPin = 3010;</code>
     */
    public static final int MessageOpUnPin_VALUE = 3010;
    /**
     * <pre>
     * 设置热门消息
     * </pre>
     *
     * <code>MessageOpHot = 3011;</code>
     */
    public static final int MessageOpHot_VALUE = 3011;
    /**
     * <pre>
     * 取消热门消息
     * </pre>
     *
     * <code>MessageOpUnHot = 3012;</code>
     */
    public static final int MessageOpUnHot_VALUE = 3012;
    /**
     * <pre>
     * 审核热门消息
     * </pre>
     *
     * <code>MessageOpHotAudit = 3013;</code>
     */
    public static final int MessageOpHotAudit_VALUE = 3013;
    /**
     * <pre>
     * 设置热门精选消息
     * </pre>
     *
     * <code>MessageOpHotCollect = 3014;</code>
     */
    public static final int MessageOpHotCollect_VALUE = 3014;
    /**
     * <pre>
     * 取消热门精选消息
     * </pre>
     *
     * <code>MessageOpUnHotCollect = 3015;</code>
     */
    public static final int MessageOpUnHotCollect_VALUE = 3015;
    /**
     * <pre>
     * 审核热门精选消息
     * </pre>
     *
     * <code>MessageOpHotCollectAudit = 3016;</code>
     */
    public static final int MessageOpHotCollectAudit_VALUE = 3016;
    /**
     * <pre>
     * 群聊链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaAudit = 3017;</code>
     */
    public static final int MessageOpLinkMetaAudit_VALUE = 3017;
    /**
     * <pre>
     * 私聊链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaPrivateAudit = 3018;</code>
     */
    public static final int MessageOpLinkMetaPrivateAudit_VALUE = 3018;
    /**
     * <pre>
     * 私聊消息审核
     * </pre>
     *
     * <code>MessageOpChatPrivateAudit = 3019;</code>
     */
    public static final int MessageOpChatPrivateAudit_VALUE = 3019;
    /**
     * <pre>
     * 举报私聊消息
     * </pre>
     *
     * <code>MessageOpReportPrivate = 3020;</code>
     */
    public static final int MessageOpReportPrivate_VALUE = 3020;
    /**
     * <pre>
     * 举报私聊消息审核
     * </pre>
     *
     * <code>MessageOpReportPrivateAudit = 3021;</code>
     */
    public static final int MessageOpReportPrivateAudit_VALUE = 3021;
    /**
     * <pre>
     * 审核推荐消息
     * </pre>
     *
     * <code>MessageOpRecommendAudit = 3022;</code>
     */
    public static final int MessageOpRecommendAudit_VALUE = 3022;
    /**
     * <pre>
     * 举报组队消息
     * </pre>
     *
     * <code>MessageOpReportTeam = 3023;</code>
     */
    public static final int MessageOpReportTeam_VALUE = 3023;
    /**
     * <pre>
     * 举报组队消息审核
     * </pre>
     *
     * <code>MessageOpReportTeamAudit = 3024;</code>
     */
    public static final int MessageOpReportTeamAudit_VALUE = 3024;
    /**
     * <pre>
     * 组队链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaTeamAudit = 3025;</code>
     */
    public static final int MessageOpLinkMetaTeamAudit_VALUE = 3025;
    /**
     * <pre>
     * 组队消息审核
     * </pre>
     *
     * <code>MessageOpChatTeamAudit = 3026;</code>
     */
    public static final int MessageOpChatTeamAudit_VALUE = 3026;
    /**
     * <pre>
     * 举报说说消息
     * </pre>
     *
     * <code>MessageOpReportTalk = 3027;</code>
     */
    public static final int MessageOpReportTalk_VALUE = 3027;
    /**
     * <pre>
     * 举报说说消息审核
     * </pre>
     *
     * <code>MessageOpReportTalkAudit = 3028;</code>
     */
    public static final int MessageOpReportTalkAudit_VALUE = 3028;
    /**
     * <pre>
     * 说说链接内容审核
     * </pre>
     *
     * <code>MessageOpLinkMetaTalkAudit = 3029;</code>
     */
    public static final int MessageOpLinkMetaTalkAudit_VALUE = 3029;
    /**
     * <pre>
     * 说说消息审核
     * </pre>
     *
     * <code>MessageOpChatTalkAudit = 3030;</code>
     */
    public static final int MessageOpChatTalkAudit_VALUE = 3030;
    /**
     * <pre>
     * 私聊视频消息审核
     * </pre>
     *
     * <code>MessageOpPrivateChatVideoAudit = 3031;</code>
     */
    public static final int MessageOpPrivateChatVideoAudit_VALUE = 3031;
    /**
     * <pre>
     * 群聊视频消息审核
     * </pre>
     *
     * <code>MessageOpGroupChatVideoAudit = 3032;</code>
     */
    public static final int MessageOpGroupChatVideoAudit_VALUE = 3032;
    /**
     * <pre>
     * 动态视频消息审核
     * </pre>
     *
     * <code>MessageOpTalkVideoAudit = 3033;</code>
     */
    public static final int MessageOpTalkVideoAudit_VALUE = 3033;
    /**
     * <pre>
     * 举报私聊视频消息
     * </pre>
     *
     * <code>MessageOpReportPrivateChatVideo = 3034;</code>
     */
    public static final int MessageOpReportPrivateChatVideo_VALUE = 3034;
    /**
     * <pre>
     * 举报群聊视频消息
     * </pre>
     *
     * <code>MessageOpReportGroupChatVideo = 3035;</code>
     */
    public static final int MessageOpReportGroupChatVideo_VALUE = 3035;
    /**
     * <pre>
     * 举报动态视频消息
     * </pre>
     *
     * <code>MessageOpReportTalkVideo = 3036;</code>
     */
    public static final int MessageOpReportTalkVideo_VALUE = 3036;
    /**
     * <pre>
     * 举报私聊视频消息审核
     * </pre>
     *
     * <code>MessageOpReportPrivateChatVideoAudit = 3037;</code>
     */
    public static final int MessageOpReportPrivateChatVideoAudit_VALUE = 3037;
    /**
     * <pre>
     * 举报群聊视频消息审核
     * </pre>
     *
     * <code>MessageOpReportGroupChatVideoAudit = 3038;</code>
     */
    public static final int MessageOpReportGroupChatVideoAudit_VALUE = 3038;
    /**
     * <pre>
     * 举报动态视频消息审核
     * </pre>
     *
     * <code>MessageOpReportTalkVideoAudit = 3039;</code>
     */
    public static final int MessageOpReportTalkVideoAudit_VALUE = 3039;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MessageOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageOp forNumber(int value) {
      switch (value) {
        case 0: return MessageOpUnknown;
        case 3001: return MessageOpNew;
        case 3002: return MessageOpEdit;
        case 3003: return MessageOpDelete;
        case 3004: return MessageOpHide;
        case 3005: return MessageOpShow;
        case 3006: return MessageOpChatAudit;
        case 3007: return MessageOpReport;
        case 3008: return MessageOpReportAudit;
        case 3009: return MessageOpPin;
        case 3010: return MessageOpUnPin;
        case 3011: return MessageOpHot;
        case 3012: return MessageOpUnHot;
        case 3013: return MessageOpHotAudit;
        case 3014: return MessageOpHotCollect;
        case 3015: return MessageOpUnHotCollect;
        case 3016: return MessageOpHotCollectAudit;
        case 3017: return MessageOpLinkMetaAudit;
        case 3018: return MessageOpLinkMetaPrivateAudit;
        case 3019: return MessageOpChatPrivateAudit;
        case 3020: return MessageOpReportPrivate;
        case 3021: return MessageOpReportPrivateAudit;
        case 3022: return MessageOpRecommendAudit;
        case 3023: return MessageOpReportTeam;
        case 3024: return MessageOpReportTeamAudit;
        case 3025: return MessageOpLinkMetaTeamAudit;
        case 3026: return MessageOpChatTeamAudit;
        case 3027: return MessageOpReportTalk;
        case 3028: return MessageOpReportTalkAudit;
        case 3029: return MessageOpLinkMetaTalkAudit;
        case 3030: return MessageOpChatTalkAudit;
        case 3031: return MessageOpPrivateChatVideoAudit;
        case 3032: return MessageOpGroupChatVideoAudit;
        case 3033: return MessageOpTalkVideoAudit;
        case 3034: return MessageOpReportPrivateChatVideo;
        case 3035: return MessageOpReportGroupChatVideo;
        case 3036: return MessageOpReportTalkVideo;
        case 3037: return MessageOpReportPrivateChatVideoAudit;
        case 3038: return MessageOpReportGroupChatVideoAudit;
        case 3039: return MessageOpReportTalkVideoAudit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageOp>() {
            public MessageOp findValueByNumber(int number) {
              return MessageOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(15);
    }

    private static final MessageOp[] VALUES = values();

    public static MessageOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.MessageOp)
  }

  /**
   * <pre>
   * SystemOp 全局操作
   * </pre>
   *
   * Protobuf enum {@code shuo.SystemOp}
   */
  public enum SystemOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>SystemOpUnknown = 0;</code>
     */
    SystemOpUnknown(0),
    /**
     * <pre>
     * 创建屏蔽词
     * </pre>
     *
     * <code>SystemOpRiskWordsCreate = 4001;</code>
     */
    SystemOpRiskWordsCreate(4001),
    /**
     * <pre>
     * 修改屏蔽词
     * </pre>
     *
     * <code>SystemOpRiskWordsUpdate = 4002;</code>
     */
    SystemOpRiskWordsUpdate(4002),
    /**
     * <pre>
     * 删除屏蔽词
     * </pre>
     *
     * <code>SystemOpRiskWordsDelete = 4003;</code>
     */
    SystemOpRiskWordsDelete(4003),
    /**
     * <pre>
     * 创建风险标签
     * </pre>
     *
     * <code>SystemOpRiskLabelCreate = 4004;</code>
     */
    SystemOpRiskLabelCreate(4004),
    /**
     * <pre>
     * 修改风险标签
     * </pre>
     *
     * <code>SystemOpRiskLabelUpdate = 4005;</code>
     */
    SystemOpRiskLabelUpdate(4005),
    /**
     * <pre>
     * 删除风险标签
     * </pre>
     *
     * <code>SystemOpRiskLabelDelete = 4006;</code>
     */
    SystemOpRiskLabelDelete(4006),
    /**
     * <pre>
     * 创建活动
     * </pre>
     *
     * <code>SystemOpActivityCreate = 4007;</code>
     */
    SystemOpActivityCreate(4007),
    /**
     * <pre>
     * 修改活动
     * </pre>
     *
     * <code>SystemOpActivityUpdate = 4008;</code>
     */
    SystemOpActivityUpdate(4008),
    /**
     * <pre>
     * 下架活动
     * </pre>
     *
     * <code>SystemOpActivityClose = 4009;</code>
     */
    SystemOpActivityClose(4009),
    /**
     * <pre>
     * 新工单
     * </pre>
     *
     * <code>SystemOpNewOrder = 4010;</code>
     */
    SystemOpNewOrder(4010),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>SystemOpUnknown = 0;</code>
     */
    public static final int SystemOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 创建屏蔽词
     * </pre>
     *
     * <code>SystemOpRiskWordsCreate = 4001;</code>
     */
    public static final int SystemOpRiskWordsCreate_VALUE = 4001;
    /**
     * <pre>
     * 修改屏蔽词
     * </pre>
     *
     * <code>SystemOpRiskWordsUpdate = 4002;</code>
     */
    public static final int SystemOpRiskWordsUpdate_VALUE = 4002;
    /**
     * <pre>
     * 删除屏蔽词
     * </pre>
     *
     * <code>SystemOpRiskWordsDelete = 4003;</code>
     */
    public static final int SystemOpRiskWordsDelete_VALUE = 4003;
    /**
     * <pre>
     * 创建风险标签
     * </pre>
     *
     * <code>SystemOpRiskLabelCreate = 4004;</code>
     */
    public static final int SystemOpRiskLabelCreate_VALUE = 4004;
    /**
     * <pre>
     * 修改风险标签
     * </pre>
     *
     * <code>SystemOpRiskLabelUpdate = 4005;</code>
     */
    public static final int SystemOpRiskLabelUpdate_VALUE = 4005;
    /**
     * <pre>
     * 删除风险标签
     * </pre>
     *
     * <code>SystemOpRiskLabelDelete = 4006;</code>
     */
    public static final int SystemOpRiskLabelDelete_VALUE = 4006;
    /**
     * <pre>
     * 创建活动
     * </pre>
     *
     * <code>SystemOpActivityCreate = 4007;</code>
     */
    public static final int SystemOpActivityCreate_VALUE = 4007;
    /**
     * <pre>
     * 修改活动
     * </pre>
     *
     * <code>SystemOpActivityUpdate = 4008;</code>
     */
    public static final int SystemOpActivityUpdate_VALUE = 4008;
    /**
     * <pre>
     * 下架活动
     * </pre>
     *
     * <code>SystemOpActivityClose = 4009;</code>
     */
    public static final int SystemOpActivityClose_VALUE = 4009;
    /**
     * <pre>
     * 新工单
     * </pre>
     *
     * <code>SystemOpNewOrder = 4010;</code>
     */
    public static final int SystemOpNewOrder_VALUE = 4010;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SystemOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SystemOp forNumber(int value) {
      switch (value) {
        case 0: return SystemOpUnknown;
        case 4001: return SystemOpRiskWordsCreate;
        case 4002: return SystemOpRiskWordsUpdate;
        case 4003: return SystemOpRiskWordsDelete;
        case 4004: return SystemOpRiskLabelCreate;
        case 4005: return SystemOpRiskLabelUpdate;
        case 4006: return SystemOpRiskLabelDelete;
        case 4007: return SystemOpActivityCreate;
        case 4008: return SystemOpActivityUpdate;
        case 4009: return SystemOpActivityClose;
        case 4010: return SystemOpNewOrder;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SystemOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SystemOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SystemOp>() {
            public SystemOp findValueByNumber(int number) {
              return SystemOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(16);
    }

    private static final SystemOp[] VALUES = values();

    public static SystemOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SystemOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.SystemOp)
  }

  /**
   * <pre>
   * GameOp 游戏操作
   * </pre>
   *
   * Protobuf enum {@code shuo.GameOp}
   */
  public enum GameOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>GameOpUnknown = 0;</code>
     */
    GameOpUnknown(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>GameOpUnknown = 0;</code>
     */
    public static final int GameOpUnknown_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static GameOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GameOp forNumber(int value) {
      switch (value) {
        case 0: return GameOpUnknown;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GameOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameOp>() {
            public GameOp findValueByNumber(int number) {
              return GameOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(17);
    }

    private static final GameOp[] VALUES = values();

    public static GameOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GameOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.GameOp)
  }

  /**
   * <pre>
   * TeamOp 车队操作
   * </pre>
   *
   * Protobuf enum {@code shuo.TeamOp}
   */
  public enum TeamOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>TeamOpUnknown = 0;</code>
     */
    TeamOpUnknown(0),
    /**
     * <pre>
     * 创建车队
     * </pre>
     *
     * <code>TeamOpCreate = 6001;</code>
     */
    TeamOpCreate(6001),
    /**
     * <pre>
     * 修改车队
     * </pre>
     *
     * <code>TeamOpUpdate = 6002;</code>
     */
    TeamOpUpdate(6002),
    /**
     * <pre>
     * 删除车队
     * </pre>
     *
     * <code>TeamOpDelete = 6003;</code>
     */
    TeamOpDelete(6003),
    /**
     * <pre>
     * 审核车队说明
     * </pre>
     *
     * <code>TeamOpAuditIntro = 6004;</code>
     */
    TeamOpAuditIntro(6004),
    /**
     * <pre>
     * 审核车队偏好
     * </pre>
     *
     * <code>TeamOpAuditTags = 6005;</code>
     */
    TeamOpAuditTags(6005),
    /**
     * <pre>
     * 审核车队小喇叭
     * </pre>
     *
     * <code>TeamOpAuditAnnounce = 6006;</code>
     */
    TeamOpAuditAnnounce(6006),
    /**
     * <pre>
     * 车队普通消息审核
     * </pre>
     *
     * <code>TeamOpMsgAudit = 6007;</code>
     */
    TeamOpMsgAudit(6007),
    /**
     * <pre>
     * 车队语音消息审核
     * </pre>
     *
     * <code>TeamOpMsgAudioAudit = 6008;</code>
     */
    TeamOpMsgAudioAudit(6008),
    /**
     * <pre>
     * 举报车队
     * </pre>
     *
     * <code>TeamOpReport = 6009;</code>
     */
    TeamOpReport(6009),
    /**
     * <pre>
     * 举报车队审核
     * </pre>
     *
     * <code>TeamOpReportAudit = 6010;</code>
     */
    TeamOpReportAudit(6010),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>TeamOpUnknown = 0;</code>
     */
    public static final int TeamOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 创建车队
     * </pre>
     *
     * <code>TeamOpCreate = 6001;</code>
     */
    public static final int TeamOpCreate_VALUE = 6001;
    /**
     * <pre>
     * 修改车队
     * </pre>
     *
     * <code>TeamOpUpdate = 6002;</code>
     */
    public static final int TeamOpUpdate_VALUE = 6002;
    /**
     * <pre>
     * 删除车队
     * </pre>
     *
     * <code>TeamOpDelete = 6003;</code>
     */
    public static final int TeamOpDelete_VALUE = 6003;
    /**
     * <pre>
     * 审核车队说明
     * </pre>
     *
     * <code>TeamOpAuditIntro = 6004;</code>
     */
    public static final int TeamOpAuditIntro_VALUE = 6004;
    /**
     * <pre>
     * 审核车队偏好
     * </pre>
     *
     * <code>TeamOpAuditTags = 6005;</code>
     */
    public static final int TeamOpAuditTags_VALUE = 6005;
    /**
     * <pre>
     * 审核车队小喇叭
     * </pre>
     *
     * <code>TeamOpAuditAnnounce = 6006;</code>
     */
    public static final int TeamOpAuditAnnounce_VALUE = 6006;
    /**
     * <pre>
     * 车队普通消息审核
     * </pre>
     *
     * <code>TeamOpMsgAudit = 6007;</code>
     */
    public static final int TeamOpMsgAudit_VALUE = 6007;
    /**
     * <pre>
     * 车队语音消息审核
     * </pre>
     *
     * <code>TeamOpMsgAudioAudit = 6008;</code>
     */
    public static final int TeamOpMsgAudioAudit_VALUE = 6008;
    /**
     * <pre>
     * 举报车队
     * </pre>
     *
     * <code>TeamOpReport = 6009;</code>
     */
    public static final int TeamOpReport_VALUE = 6009;
    /**
     * <pre>
     * 举报车队审核
     * </pre>
     *
     * <code>TeamOpReportAudit = 6010;</code>
     */
    public static final int TeamOpReportAudit_VALUE = 6010;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TeamOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TeamOp forNumber(int value) {
      switch (value) {
        case 0: return TeamOpUnknown;
        case 6001: return TeamOpCreate;
        case 6002: return TeamOpUpdate;
        case 6003: return TeamOpDelete;
        case 6004: return TeamOpAuditIntro;
        case 6005: return TeamOpAuditTags;
        case 6006: return TeamOpAuditAnnounce;
        case 6007: return TeamOpMsgAudit;
        case 6008: return TeamOpMsgAudioAudit;
        case 6009: return TeamOpReport;
        case 6010: return TeamOpReportAudit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TeamOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TeamOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TeamOp>() {
            public TeamOp findValueByNumber(int number) {
              return TeamOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(18);
    }

    private static final TeamOp[] VALUES = values();

    public static TeamOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TeamOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.TeamOp)
  }

  /**
   * <pre>
   * NoteOp 笔记操作
   * </pre>
   *
   * Protobuf enum {@code shuo.NoteOp}
   */
  public enum NoteOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>NoteOpUnknown = 0;</code>
     */
    NoteOpUnknown(0),
    /**
     * <pre>
     * 创建笔记
     * </pre>
     *
     * <code>NoteOpCreate = 7001;</code>
     */
    NoteOpCreate(7001),
    /**
     * <pre>
     * 修改笔记
     * </pre>
     *
     * <code>NoteOpUpdate = 7002;</code>
     */
    NoteOpUpdate(7002),
    /**
     * <pre>
     * 删除笔记
     * </pre>
     *
     * <code>NoteOpDelete = 7003;</code>
     */
    NoteOpDelete(7003),
    /**
     * <pre>
     * 审核笔记
     * </pre>
     *
     * <code>NoteOpAudit = 7004;</code>
     */
    NoteOpAudit(7004),
    /**
     * <pre>
     * 创建笔记咨询配置
     * </pre>
     *
     * <code>NoteOpInfoConfCreate = 7005;</code>
     */
    NoteOpInfoConfCreate(7005),
    /**
     * <pre>
     * 修改笔记咨询配置
     * </pre>
     *
     * <code>NoteOpInfoConfUpdate = 7006;</code>
     */
    NoteOpInfoConfUpdate(7006),
    /**
     * <pre>
     * 删除笔记咨询配置
     * </pre>
     *
     * <code>NoteOpInfoConfDelete = 7007;</code>
     */
    NoteOpInfoConfDelete(7007),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>NoteOpUnknown = 0;</code>
     */
    public static final int NoteOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 创建笔记
     * </pre>
     *
     * <code>NoteOpCreate = 7001;</code>
     */
    public static final int NoteOpCreate_VALUE = 7001;
    /**
     * <pre>
     * 修改笔记
     * </pre>
     *
     * <code>NoteOpUpdate = 7002;</code>
     */
    public static final int NoteOpUpdate_VALUE = 7002;
    /**
     * <pre>
     * 删除笔记
     * </pre>
     *
     * <code>NoteOpDelete = 7003;</code>
     */
    public static final int NoteOpDelete_VALUE = 7003;
    /**
     * <pre>
     * 审核笔记
     * </pre>
     *
     * <code>NoteOpAudit = 7004;</code>
     */
    public static final int NoteOpAudit_VALUE = 7004;
    /**
     * <pre>
     * 创建笔记咨询配置
     * </pre>
     *
     * <code>NoteOpInfoConfCreate = 7005;</code>
     */
    public static final int NoteOpInfoConfCreate_VALUE = 7005;
    /**
     * <pre>
     * 修改笔记咨询配置
     * </pre>
     *
     * <code>NoteOpInfoConfUpdate = 7006;</code>
     */
    public static final int NoteOpInfoConfUpdate_VALUE = 7006;
    /**
     * <pre>
     * 删除笔记咨询配置
     * </pre>
     *
     * <code>NoteOpInfoConfDelete = 7007;</code>
     */
    public static final int NoteOpInfoConfDelete_VALUE = 7007;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static NoteOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NoteOp forNumber(int value) {
      switch (value) {
        case 0: return NoteOpUnknown;
        case 7001: return NoteOpCreate;
        case 7002: return NoteOpUpdate;
        case 7003: return NoteOpDelete;
        case 7004: return NoteOpAudit;
        case 7005: return NoteOpInfoConfCreate;
        case 7006: return NoteOpInfoConfUpdate;
        case 7007: return NoteOpInfoConfDelete;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NoteOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NoteOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NoteOp>() {
            public NoteOp findValueByNumber(int number) {
              return NoteOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(19);
    }

    private static final NoteOp[] VALUES = values();

    public static NoteOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NoteOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.NoteOp)
  }

  /**
   * <pre>
   * AuditOp 审核操作
   * </pre>
   *
   * Protobuf enum {@code shuo.AuditOp}
   */
  public enum AuditOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>AuditOpUnknown = 0;</code>
     */
    AuditOpUnknown(0),
    /**
     * <pre>
     * 文本
     * </pre>
     *
     * <code>AuditOpText = 8001;</code>
     */
    AuditOpText(8001),
    /**
     * <pre>
     * 图片
     * </pre>
     *
     * <code>AuditOpImage = 8002;</code>
     */
    AuditOpImage(8002),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>AuditOpUnknown = 0;</code>
     */
    public static final int AuditOpUnknown_VALUE = 0;
    /**
     * <pre>
     * 文本
     * </pre>
     *
     * <code>AuditOpText = 8001;</code>
     */
    public static final int AuditOpText_VALUE = 8001;
    /**
     * <pre>
     * 图片
     * </pre>
     *
     * <code>AuditOpImage = 8002;</code>
     */
    public static final int AuditOpImage_VALUE = 8002;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AuditOp valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AuditOp forNumber(int value) {
      switch (value) {
        case 0: return AuditOpUnknown;
        case 8001: return AuditOpText;
        case 8002: return AuditOpImage;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AuditOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AuditOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AuditOp>() {
            public AuditOp findValueByNumber(int number) {
              return AuditOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(20);
    }

    private static final AuditOp[] VALUES = values();

    public static AuditOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AuditOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.AuditOp)
  }

  /**
   * Protobuf enum {@code shuo.ChatType}
   */
  public enum ChatType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ChatTypeUndefined = 0;</code>
     */
    ChatTypeUndefined(0),
    /**
     * <pre>
     * 房间
     * </pre>
     *
     * <code>ChatTypeRoom = 1;</code>
     */
    ChatTypeRoom(1),
    /**
     * <pre>
     * 频道
     * </pre>
     *
     * <code>ChatTypeChannel = 2;</code>
     */
    ChatTypeChannel(2),
    /**
     * <pre>
     * 私聊
     * </pre>
     *
     * <code>ChatTypeUser = 3;</code>
     */
    ChatTypeUser(3),
    /**
     * <pre>
     * 临时聊天组(纯前端使用)
     * </pre>
     *
     * <code>ChatTypeTempGroup = 4;</code>
     */
    ChatTypeTempGroup(4),
    /**
     * <pre>
     * 机器人发送的系统消息(纯前端使用)
     * </pre>
     *
     * <code>ChatTypeSystemBot = 5;</code>
     */
    ChatTypeSystemBot(5),
    /**
     * <pre>
     * 派对
     * </pre>
     *
     * <code>ChatTypeTeam = 6;</code>
     */
    ChatTypeTeam(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ChatTypeUndefined = 0;</code>
     */
    public static final int ChatTypeUndefined_VALUE = 0;
    /**
     * <pre>
     * 房间
     * </pre>
     *
     * <code>ChatTypeRoom = 1;</code>
     */
    public static final int ChatTypeRoom_VALUE = 1;
    /**
     * <pre>
     * 频道
     * </pre>
     *
     * <code>ChatTypeChannel = 2;</code>
     */
    public static final int ChatTypeChannel_VALUE = 2;
    /**
     * <pre>
     * 私聊
     * </pre>
     *
     * <code>ChatTypeUser = 3;</code>
     */
    public static final int ChatTypeUser_VALUE = 3;
    /**
     * <pre>
     * 临时聊天组(纯前端使用)
     * </pre>
     *
     * <code>ChatTypeTempGroup = 4;</code>
     */
    public static final int ChatTypeTempGroup_VALUE = 4;
    /**
     * <pre>
     * 机器人发送的系统消息(纯前端使用)
     * </pre>
     *
     * <code>ChatTypeSystemBot = 5;</code>
     */
    public static final int ChatTypeSystemBot_VALUE = 5;
    /**
     * <pre>
     * 派对
     * </pre>
     *
     * <code>ChatTypeTeam = 6;</code>
     */
    public static final int ChatTypeTeam_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ChatType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ChatType forNumber(int value) {
      switch (value) {
        case 0: return ChatTypeUndefined;
        case 1: return ChatTypeRoom;
        case 2: return ChatTypeChannel;
        case 3: return ChatTypeUser;
        case 4: return ChatTypeTempGroup;
        case 5: return ChatTypeSystemBot;
        case 6: return ChatTypeTeam;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChatType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ChatType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChatType>() {
            public ChatType findValueByNumber(int number) {
              return ChatType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(21);
    }

    private static final ChatType[] VALUES = values();

    public static ChatType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ChatType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.ChatType)
  }

  /**
   * Protobuf enum {@code shuo.FriendSourceType}
   */
  public enum FriendSourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FriendSourceTypeUndefined = 0;</code>
     */
    FriendSourceTypeUndefined(0),
    /**
     * <code>FriendSourceTypeGroup = 1;</code>
     */
    FriendSourceTypeGroup(1),
    /**
     * <code>FriendSourceTypeSearch = 2;</code>
     */
    FriendSourceTypeSearch(2),
    /**
     * <code>FriendSourceTypeRecommend = 3;</code>
     */
    FriendSourceTypeRecommend(3),
    /**
     * <code>FriendSourceTypeFeaturedTopic = 4;</code>
     */
    FriendSourceTypeFeaturedTopic(4),
    /**
     * <code>FriendSourceTypeTeam = 5;</code>
     */
    FriendSourceTypeTeam(5),
    /**
     * <code>FriendSourceTalk = 6;</code>
     */
    FriendSourceTalk(6),
    /**
     * <code>FriendSourceTypePlaymate = 7;</code>
     */
    FriendSourceTypePlaymate(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FriendSourceTypeUndefined = 0;</code>
     */
    public static final int FriendSourceTypeUndefined_VALUE = 0;
    /**
     * <code>FriendSourceTypeGroup = 1;</code>
     */
    public static final int FriendSourceTypeGroup_VALUE = 1;
    /**
     * <code>FriendSourceTypeSearch = 2;</code>
     */
    public static final int FriendSourceTypeSearch_VALUE = 2;
    /**
     * <code>FriendSourceTypeRecommend = 3;</code>
     */
    public static final int FriendSourceTypeRecommend_VALUE = 3;
    /**
     * <code>FriendSourceTypeFeaturedTopic = 4;</code>
     */
    public static final int FriendSourceTypeFeaturedTopic_VALUE = 4;
    /**
     * <code>FriendSourceTypeTeam = 5;</code>
     */
    public static final int FriendSourceTypeTeam_VALUE = 5;
    /**
     * <code>FriendSourceTalk = 6;</code>
     */
    public static final int FriendSourceTalk_VALUE = 6;
    /**
     * <code>FriendSourceTypePlaymate = 7;</code>
     */
    public static final int FriendSourceTypePlaymate_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FriendSourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FriendSourceType forNumber(int value) {
      switch (value) {
        case 0: return FriendSourceTypeUndefined;
        case 1: return FriendSourceTypeGroup;
        case 2: return FriendSourceTypeSearch;
        case 3: return FriendSourceTypeRecommend;
        case 4: return FriendSourceTypeFeaturedTopic;
        case 5: return FriendSourceTypeTeam;
        case 6: return FriendSourceTalk;
        case 7: return FriendSourceTypePlaymate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FriendSourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FriendSourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FriendSourceType>() {
            public FriendSourceType findValueByNumber(int number) {
              return FriendSourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(22);
    }

    private static final FriendSourceType[] VALUES = values();

    public static FriendSourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FriendSourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.FriendSourceType)
  }

  /**
   * Protobuf enum {@code shuo.FriendRequestStatus}
   */
  public enum FriendRequestStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FriendRequestStatusUndefined = 0;</code>
     */
    FriendRequestStatusUndefined(0),
    /**
     * <code>FriendRequestStatusWaitPass = 1;</code>
     */
    FriendRequestStatusWaitPass(1),
    /**
     * <code>FriendRequestStatusPass = 2;</code>
     */
    FriendRequestStatusPass(2),
    /**
     * <code>FriendRequestStatusRefuse = 3;</code>
     */
    FriendRequestStatusRefuse(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FriendRequestStatusUndefined = 0;</code>
     */
    public static final int FriendRequestStatusUndefined_VALUE = 0;
    /**
     * <code>FriendRequestStatusWaitPass = 1;</code>
     */
    public static final int FriendRequestStatusWaitPass_VALUE = 1;
    /**
     * <code>FriendRequestStatusPass = 2;</code>
     */
    public static final int FriendRequestStatusPass_VALUE = 2;
    /**
     * <code>FriendRequestStatusRefuse = 3;</code>
     */
    public static final int FriendRequestStatusRefuse_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FriendRequestStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FriendRequestStatus forNumber(int value) {
      switch (value) {
        case 0: return FriendRequestStatusUndefined;
        case 1: return FriendRequestStatusWaitPass;
        case 2: return FriendRequestStatusPass;
        case 3: return FriendRequestStatusRefuse;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FriendRequestStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FriendRequestStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FriendRequestStatus>() {
            public FriendRequestStatus findValueByNumber(int number) {
              return FriendRequestStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(23);
    }

    private static final FriendRequestStatus[] VALUES = values();

    public static FriendRequestStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FriendRequestStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.FriendRequestStatus)
  }

  /**
   * Protobuf enum {@code shuo.FriendChangeType}
   */
  public enum FriendChangeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FriendChangeTypeUndefined = 0;</code>
     */
    FriendChangeTypeUndefined(0),
    /**
     * <code>FriendChangeTypeAdd = 1;</code>
     */
    FriendChangeTypeAdd(1),
    /**
     * <code>FriendChangeTypeRemove = 2;</code>
     */
    FriendChangeTypeRemove(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FriendChangeTypeUndefined = 0;</code>
     */
    public static final int FriendChangeTypeUndefined_VALUE = 0;
    /**
     * <code>FriendChangeTypeAdd = 1;</code>
     */
    public static final int FriendChangeTypeAdd_VALUE = 1;
    /**
     * <code>FriendChangeTypeRemove = 2;</code>
     */
    public static final int FriendChangeTypeRemove_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FriendChangeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FriendChangeType forNumber(int value) {
      switch (value) {
        case 0: return FriendChangeTypeUndefined;
        case 1: return FriendChangeTypeAdd;
        case 2: return FriendChangeTypeRemove;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FriendChangeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FriendChangeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FriendChangeType>() {
            public FriendChangeType findValueByNumber(int number) {
              return FriendChangeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(24);
    }

    private static final FriendChangeType[] VALUES = values();

    public static FriendChangeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FriendChangeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.FriendChangeType)
  }

  /**
   * Protobuf enum {@code shuo.WebsocketNoticeType}
   */
  public enum WebsocketNoticeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WebsocketNoticeTypeDefault = 0;</code>
     */
    WebsocketNoticeTypeDefault(0),
    /**
     * <code>WebsocketNoticeTypeMessage = 1;</code>
     */
    WebsocketNoticeTypeMessage(1),
    /**
     * <code>WebsocketNoticeTypeTalk = 2;</code>
     */
    WebsocketNoticeTypeTalk(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>WebsocketNoticeTypeDefault = 0;</code>
     */
    public static final int WebsocketNoticeTypeDefault_VALUE = 0;
    /**
     * <code>WebsocketNoticeTypeMessage = 1;</code>
     */
    public static final int WebsocketNoticeTypeMessage_VALUE = 1;
    /**
     * <code>WebsocketNoticeTypeTalk = 2;</code>
     */
    public static final int WebsocketNoticeTypeTalk_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static WebsocketNoticeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WebsocketNoticeType forNumber(int value) {
      switch (value) {
        case 0: return WebsocketNoticeTypeDefault;
        case 1: return WebsocketNoticeTypeMessage;
        case 2: return WebsocketNoticeTypeTalk;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WebsocketNoticeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WebsocketNoticeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WebsocketNoticeType>() {
            public WebsocketNoticeType findValueByNumber(int number) {
              return WebsocketNoticeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(25);
    }

    private static final WebsocketNoticeType[] VALUES = values();

    public static WebsocketNoticeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WebsocketNoticeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.WebsocketNoticeType)
  }

  /**
   * Protobuf enum {@code shuo.NewFriendRequestType}
   */
  public enum NewFriendRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NewFriendRequestTypeUndefined = 0;</code>
     */
    NewFriendRequestTypeUndefined(0),
    /**
     * <pre>
     * 我发出
     * </pre>
     *
     * <code>NewFriendRequestTypeSend = 1;</code>
     */
    NewFriendRequestTypeSend(1),
    /**
     * <pre>
     * 我收到
     * </pre>
     *
     * <code>NewFriendRequestTypeReceive = 2;</code>
     */
    NewFriendRequestTypeReceive(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NewFriendRequestTypeUndefined = 0;</code>
     */
    public static final int NewFriendRequestTypeUndefined_VALUE = 0;
    /**
     * <pre>
     * 我发出
     * </pre>
     *
     * <code>NewFriendRequestTypeSend = 1;</code>
     */
    public static final int NewFriendRequestTypeSend_VALUE = 1;
    /**
     * <pre>
     * 我收到
     * </pre>
     *
     * <code>NewFriendRequestTypeReceive = 2;</code>
     */
    public static final int NewFriendRequestTypeReceive_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static NewFriendRequestType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NewFriendRequestType forNumber(int value) {
      switch (value) {
        case 0: return NewFriendRequestTypeUndefined;
        case 1: return NewFriendRequestTypeSend;
        case 2: return NewFriendRequestTypeReceive;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NewFriendRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NewFriendRequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NewFriendRequestType>() {
            public NewFriendRequestType findValueByNumber(int number) {
              return NewFriendRequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(26);
    }

    private static final NewFriendRequestType[] VALUES = values();

    public static NewFriendRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NewFriendRequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.NewFriendRequestType)
  }

  /**
   * Protobuf enum {@code shuo.OnlineDeviceType}
   */
  public enum OnlineDeviceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OnlineDeviceTypeUndefined = 0;</code>
     */
    OnlineDeviceTypeUndefined(0),
    /**
     * <code>OnlineDeviceTypeWeb = 1;</code>
     */
    OnlineDeviceTypeWeb(1),
    /**
     * <code>OnlineDeviceTypeApp = 2;</code>
     */
    OnlineDeviceTypeApp(2),
    /**
     * <code>OnlineDeviceTypeMulti = 3;</code>
     */
    OnlineDeviceTypeMulti(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OnlineDeviceTypeUndefined = 0;</code>
     */
    public static final int OnlineDeviceTypeUndefined_VALUE = 0;
    /**
     * <code>OnlineDeviceTypeWeb = 1;</code>
     */
    public static final int OnlineDeviceTypeWeb_VALUE = 1;
    /**
     * <code>OnlineDeviceTypeApp = 2;</code>
     */
    public static final int OnlineDeviceTypeApp_VALUE = 2;
    /**
     * <code>OnlineDeviceTypeMulti = 3;</code>
     */
    public static final int OnlineDeviceTypeMulti_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OnlineDeviceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OnlineDeviceType forNumber(int value) {
      switch (value) {
        case 0: return OnlineDeviceTypeUndefined;
        case 1: return OnlineDeviceTypeWeb;
        case 2: return OnlineDeviceTypeApp;
        case 3: return OnlineDeviceTypeMulti;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OnlineDeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OnlineDeviceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OnlineDeviceType>() {
            public OnlineDeviceType findValueByNumber(int number) {
              return OnlineDeviceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(27);
    }

    private static final OnlineDeviceType[] VALUES = values();

    public static OnlineDeviceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OnlineDeviceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.OnlineDeviceType)
  }

  /**
   * Protobuf enum {@code shuo.TalkPostType}
   */
  public enum TalkPostType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PostTypeUndefined = 0;</code>
     */
    PostTypeUndefined(0),
    /**
     * <code>PostTypeShare = 1;</code>
     */
    PostTypeShare(1),
    /**
     * <code>PostTypePlaymate = 2;</code>
     */
    PostTypePlaymate(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PostTypeUndefined = 0;</code>
     */
    public static final int PostTypeUndefined_VALUE = 0;
    /**
     * <code>PostTypeShare = 1;</code>
     */
    public static final int PostTypeShare_VALUE = 1;
    /**
     * <code>PostTypePlaymate = 2;</code>
     */
    public static final int PostTypePlaymate_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TalkPostType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TalkPostType forNumber(int value) {
      switch (value) {
        case 0: return PostTypeUndefined;
        case 1: return PostTypeShare;
        case 2: return PostTypePlaymate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TalkPostType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TalkPostType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TalkPostType>() {
            public TalkPostType findValueByNumber(int number) {
              return TalkPostType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(28);
    }

    private static final TalkPostType[] VALUES = values();

    public static TalkPostType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TalkPostType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.TalkPostType)
  }

  /**
   * Protobuf enum {@code shuo.TalkPostTagType}
   */
  public enum TalkPostTagType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PostTagTypeUndefined = 0;</code>
     */
    PostTagTypeUndefined(0),
    /**
     * <code>PostTagTypeShare = 1;</code>
     */
    PostTagTypeShare(1),
    /**
     * <code>PostTagTypePlaymate = 2;</code>
     */
    PostTagTypePlaymate(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PostTagTypeUndefined = 0;</code>
     */
    public static final int PostTagTypeUndefined_VALUE = 0;
    /**
     * <code>PostTagTypeShare = 1;</code>
     */
    public static final int PostTagTypeShare_VALUE = 1;
    /**
     * <code>PostTagTypePlaymate = 2;</code>
     */
    public static final int PostTagTypePlaymate_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TalkPostTagType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TalkPostTagType forNumber(int value) {
      switch (value) {
        case 0: return PostTagTypeUndefined;
        case 1: return PostTagTypeShare;
        case 2: return PostTagTypePlaymate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TalkPostTagType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TalkPostTagType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TalkPostTagType>() {
            public TalkPostTagType findValueByNumber(int number) {
              return TalkPostTagType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(29);
    }

    private static final TalkPostTagType[] VALUES = values();

    public static TalkPostTagType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TalkPostTagType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.TalkPostTagType)
  }

  /**
   * Protobuf enum {@code shuo.TalkPostStatus}
   */
  public enum TalkPostStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未保存消息
     * </pre>
     *
     * <code>PostStatusPending = 0;</code>
     */
    PostStatusPending(0),
    /**
     * <pre>
     * 消息内容保存成功，未审核
     * </pre>
     *
     * <code>PostStatusCreated = 1;</code>
     */
    PostStatusCreated(1),
    /**
     * <pre>
     * 审核成功
     * </pre>
     *
     * <code>PostStatusSuccess = 2;</code>
     */
    PostStatusSuccess(2),
    /**
     * <pre>
     * 已经删除
     * </pre>
     *
     * <code>PostStatusDeleted = 3;</code>
     */
    PostStatusDeleted(3),
    /**
     * <pre>
     * 消息被隐藏
     * </pre>
     *
     * <code>PostStatusHidden = 4;</code>
     */
    PostStatusHidden(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未保存消息
     * </pre>
     *
     * <code>PostStatusPending = 0;</code>
     */
    public static final int PostStatusPending_VALUE = 0;
    /**
     * <pre>
     * 消息内容保存成功，未审核
     * </pre>
     *
     * <code>PostStatusCreated = 1;</code>
     */
    public static final int PostStatusCreated_VALUE = 1;
    /**
     * <pre>
     * 审核成功
     * </pre>
     *
     * <code>PostStatusSuccess = 2;</code>
     */
    public static final int PostStatusSuccess_VALUE = 2;
    /**
     * <pre>
     * 已经删除
     * </pre>
     *
     * <code>PostStatusDeleted = 3;</code>
     */
    public static final int PostStatusDeleted_VALUE = 3;
    /**
     * <pre>
     * 消息被隐藏
     * </pre>
     *
     * <code>PostStatusHidden = 4;</code>
     */
    public static final int PostStatusHidden_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TalkPostStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TalkPostStatus forNumber(int value) {
      switch (value) {
        case 0: return PostStatusPending;
        case 1: return PostStatusCreated;
        case 2: return PostStatusSuccess;
        case 3: return PostStatusDeleted;
        case 4: return PostStatusHidden;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TalkPostStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TalkPostStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TalkPostStatus>() {
            public TalkPostStatus findValueByNumber(int number) {
              return TalkPostStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(30);
    }

    private static final TalkPostStatus[] VALUES = values();

    public static TalkPostStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TalkPostStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.TalkPostStatus)
  }

  /**
   * <pre>
   * 动态流的数据来源
   * </pre>
   *
   * Protobuf enum {@code shuo.TalkFeedSource}
   */
  public enum TalkFeedSource
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FeedSourceEmpty = 0;</code>
     */
    FeedSourceEmpty(0),
    /**
     * <pre>
     * 来源于动态流
     * </pre>
     *
     * <code>FeedSourcePost = 1;</code>
     */
    FeedSourcePost(1),
    /**
     * <pre>
     * 来源于热门动态
     * </pre>
     *
     * <code>FeedSourceHot = 2;</code>
     */
    FeedSourceHot(2),
    /**
     * <pre>
     * 来源于好友动态
     * </pre>
     *
     * <code>FeedSourceFriend = 3;</code>
     */
    FeedSourceFriend(3),
    /**
     * <pre>
     * 来源于关注标签
     * </pre>
     *
     * <code>FeedSourceFollowTag = 4;</code>
     */
    FeedSourceFollowTag(4),
    /**
     * <pre>
     * 来源于推荐标签
     * </pre>
     *
     * <code>FeedSourceReccomendTag = 5;</code>
     */
    FeedSourceReccomendTag(5),
    /**
     * <pre>
     * 来源于好友互动
     * </pre>
     *
     * <code>FeedSourceFriendInteract = 6;</code>
     */
    FeedSourceFriendInteract(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FeedSourceEmpty = 0;</code>
     */
    public static final int FeedSourceEmpty_VALUE = 0;
    /**
     * <pre>
     * 来源于动态流
     * </pre>
     *
     * <code>FeedSourcePost = 1;</code>
     */
    public static final int FeedSourcePost_VALUE = 1;
    /**
     * <pre>
     * 来源于热门动态
     * </pre>
     *
     * <code>FeedSourceHot = 2;</code>
     */
    public static final int FeedSourceHot_VALUE = 2;
    /**
     * <pre>
     * 来源于好友动态
     * </pre>
     *
     * <code>FeedSourceFriend = 3;</code>
     */
    public static final int FeedSourceFriend_VALUE = 3;
    /**
     * <pre>
     * 来源于关注标签
     * </pre>
     *
     * <code>FeedSourceFollowTag = 4;</code>
     */
    public static final int FeedSourceFollowTag_VALUE = 4;
    /**
     * <pre>
     * 来源于推荐标签
     * </pre>
     *
     * <code>FeedSourceReccomendTag = 5;</code>
     */
    public static final int FeedSourceReccomendTag_VALUE = 5;
    /**
     * <pre>
     * 来源于好友互动
     * </pre>
     *
     * <code>FeedSourceFriendInteract = 6;</code>
     */
    public static final int FeedSourceFriendInteract_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TalkFeedSource valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TalkFeedSource forNumber(int value) {
      switch (value) {
        case 0: return FeedSourceEmpty;
        case 1: return FeedSourcePost;
        case 2: return FeedSourceHot;
        case 3: return FeedSourceFriend;
        case 4: return FeedSourceFollowTag;
        case 5: return FeedSourceReccomendTag;
        case 6: return FeedSourceFriendInteract;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TalkFeedSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TalkFeedSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TalkFeedSource>() {
            public TalkFeedSource findValueByNumber(int number) {
              return TalkFeedSource.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(31);
    }

    private static final TalkFeedSource[] VALUES = values();

    public static TalkFeedSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TalkFeedSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.TalkFeedSource)
  }

  /**
   * Protobuf enum {@code shuo.FeaturedTopicType}
   */
  public enum FeaturedTopicType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TopicTypeDefault = 0;</code>
     */
    TopicTypeDefault(0),
    /**
     * <code>TopicTypeMessage = 1;</code>
     */
    TopicTypeMessage(1),
    /**
     * <code>TopicTypePost = 2;</code>
     */
    TopicTypePost(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TopicTypeDefault = 0;</code>
     */
    public static final int TopicTypeDefault_VALUE = 0;
    /**
     * <code>TopicTypeMessage = 1;</code>
     */
    public static final int TopicTypeMessage_VALUE = 1;
    /**
     * <code>TopicTypePost = 2;</code>
     */
    public static final int TopicTypePost_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FeaturedTopicType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FeaturedTopicType forNumber(int value) {
      switch (value) {
        case 0: return TopicTypeDefault;
        case 1: return TopicTypeMessage;
        case 2: return TopicTypePost;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FeaturedTopicType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FeaturedTopicType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FeaturedTopicType>() {
            public FeaturedTopicType findValueByNumber(int number) {
              return FeaturedTopicType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(32);
    }

    private static final FeaturedTopicType[] VALUES = values();

    public static FeaturedTopicType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FeaturedTopicType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.FeaturedTopicType)
  }

  /**
   * Protobuf enum {@code shuo.TeamStatus}
   */
  public enum TeamStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TeamStatusUndefined = 0;</code>
     */
    TeamStatusUndefined(0),
    /**
     * <pre>
     * 正常 / 代发车
     * </pre>
     *
     * <code>TeamStatusOK = 1;</code>
     */
    TeamStatusOK(1),
    /**
     * <pre>
     * 已发车
     * </pre>
     *
     * <code>TeamStatusDeparture = 2;</code>
     */
    TeamStatusDeparture(2),
    /**
     * <pre>
     * 已解散
     * </pre>
     *
     * <code>TeamStatusDisband = -3;</code>
     */
    TeamStatusDisband(-3),
    /**
     * <pre>
     * 预约
     * </pre>
     *
     * <code>TeamStatusAppointment = 5;</code>
     */
    TeamStatusAppointment(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TeamStatusUndefined = 0;</code>
     */
    public static final int TeamStatusUndefined_VALUE = 0;
    /**
     * <pre>
     * 正常 / 代发车
     * </pre>
     *
     * <code>TeamStatusOK = 1;</code>
     */
    public static final int TeamStatusOK_VALUE = 1;
    /**
     * <pre>
     * 已发车
     * </pre>
     *
     * <code>TeamStatusDeparture = 2;</code>
     */
    public static final int TeamStatusDeparture_VALUE = 2;
    /**
     * <pre>
     * 已解散
     * </pre>
     *
     * <code>TeamStatusDisband = -3;</code>
     */
    public static final int TeamStatusDisband_VALUE = -3;
    /**
     * <pre>
     * 预约
     * </pre>
     *
     * <code>TeamStatusAppointment = 5;</code>
     */
    public static final int TeamStatusAppointment_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TeamStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TeamStatus forNumber(int value) {
      switch (value) {
        case 0: return TeamStatusUndefined;
        case 1: return TeamStatusOK;
        case 2: return TeamStatusDeparture;
        case -3: return TeamStatusDisband;
        case 5: return TeamStatusAppointment;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TeamStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TeamStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TeamStatus>() {
            public TeamStatus findValueByNumber(int number) {
              return TeamStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(33);
    }

    private static final TeamStatus[] VALUES = values();

    public static TeamStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TeamStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.TeamStatus)
  }

  /**
   * Protobuf enum {@code shuo.AuditStatus}
   */
  public enum AuditStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AuditStatusUndefined = 0;</code>
     */
    AuditStatusUndefined(0),
    /**
     * <pre>
     * 通过
     * </pre>
     *
     * <code>AuditStatusPass = 1;</code>
     */
    AuditStatusPass(1),
    /**
     * <pre>
     * 拒绝/高风险
     * </pre>
     *
     * <code>AuditStatusReject = 2;</code>
     */
    AuditStatusReject(2),
    /**
     * <pre>
     * 人审/低风险
     * </pre>
     *
     * <code>AuditStatusReview = 3;</code>
     */
    AuditStatusReview(3),
    /**
     * <pre>
     * 小黑屋
     * </pre>
     *
     * <code>AuditStatusDarkRoom = 16;</code>
     */
    AuditStatusDarkRoom(16),
    /**
     * <pre>
     * 命中房间屏蔽词
     * </pre>
     *
     * <code>AuditStatusRoomReject = 19;</code>
     */
    AuditStatusRoomReject(19),
    /**
     * <pre>
     * 命中私聊屏蔽词
     * </pre>
     *
     * <code>AuditStatusPrivateChatReject = 20;</code>
     */
    AuditStatusPrivateChatReject(20),
    /**
     * <pre>
     * 命中新用户风控
     * </pre>
     *
     * <code>AuditStatusNewUserRisk = 22;</code>
     */
    AuditStatusNewUserRisk(22),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AuditStatusUndefined = 0;</code>
     */
    public static final int AuditStatusUndefined_VALUE = 0;
    /**
     * <pre>
     * 通过
     * </pre>
     *
     * <code>AuditStatusPass = 1;</code>
     */
    public static final int AuditStatusPass_VALUE = 1;
    /**
     * <pre>
     * 拒绝/高风险
     * </pre>
     *
     * <code>AuditStatusReject = 2;</code>
     */
    public static final int AuditStatusReject_VALUE = 2;
    /**
     * <pre>
     * 人审/低风险
     * </pre>
     *
     * <code>AuditStatusReview = 3;</code>
     */
    public static final int AuditStatusReview_VALUE = 3;
    /**
     * <pre>
     * 小黑屋
     * </pre>
     *
     * <code>AuditStatusDarkRoom = 16;</code>
     */
    public static final int AuditStatusDarkRoom_VALUE = 16;
    /**
     * <pre>
     * 命中房间屏蔽词
     * </pre>
     *
     * <code>AuditStatusRoomReject = 19;</code>
     */
    public static final int AuditStatusRoomReject_VALUE = 19;
    /**
     * <pre>
     * 命中私聊屏蔽词
     * </pre>
     *
     * <code>AuditStatusPrivateChatReject = 20;</code>
     */
    public static final int AuditStatusPrivateChatReject_VALUE = 20;
    /**
     * <pre>
     * 命中新用户风控
     * </pre>
     *
     * <code>AuditStatusNewUserRisk = 22;</code>
     */
    public static final int AuditStatusNewUserRisk_VALUE = 22;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AuditStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AuditStatus forNumber(int value) {
      switch (value) {
        case 0: return AuditStatusUndefined;
        case 1: return AuditStatusPass;
        case 2: return AuditStatusReject;
        case 3: return AuditStatusReview;
        case 16: return AuditStatusDarkRoom;
        case 19: return AuditStatusRoomReject;
        case 20: return AuditStatusPrivateChatReject;
        case 22: return AuditStatusNewUserRisk;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AuditStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AuditStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AuditStatus>() {
            public AuditStatus findValueByNumber(int number) {
              return AuditStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(34);
    }

    private static final AuditStatus[] VALUES = values();

    public static AuditStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AuditStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.AuditStatus)
  }

  /**
   * Protobuf enum {@code shuo.PushType}
   */
  public enum PushType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PushTypeUndefined = 0;</code>
     */
    PushTypeUndefined(0),
    /**
     * <code>PushTypeAli = 1;</code>
     */
    PushTypeAli(1),
    /**
     * <code>PushTypeApns = 2;</code>
     */
    PushTypeApns(2),
    /**
     * <code>PushTypeFCM = 3;</code>
     */
    PushTypeFCM(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PushTypeUndefined = 0;</code>
     */
    public static final int PushTypeUndefined_VALUE = 0;
    /**
     * <code>PushTypeAli = 1;</code>
     */
    public static final int PushTypeAli_VALUE = 1;
    /**
     * <code>PushTypeApns = 2;</code>
     */
    public static final int PushTypeApns_VALUE = 2;
    /**
     * <code>PushTypeFCM = 3;</code>
     */
    public static final int PushTypeFCM_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static PushType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PushType forNumber(int value) {
      switch (value) {
        case 0: return PushTypeUndefined;
        case 1: return PushTypeAli;
        case 2: return PushTypeApns;
        case 3: return PushTypeFCM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PushType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PushType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PushType>() {
            public PushType findValueByNumber(int number) {
              return PushType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Constants.getDescriptor().getEnumTypes().get(35);
    }

    private static final PushType[] VALUES = values();

    public static PushType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PushType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuo.PushType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\026protoc/constants.proto\022\004shuo*\320\010\n\rWSMes" +
      "sageType\022\022\n\nNewMessage\020\000\032\002\010\001\022\017\n\013EditMess" +
      "age\020\001\022\021\n\rDeleteMessage\020\002\022\017\n\013AddAttitude\020" +
      "\003\022\022\n\016DeleteAttitude\020\004\022\024\n\020UpdateReplyCoun" +
      "t\020\005\022\014\n\010JoinRoom\020\006\022\014\n\010QuitRoom\020\007\022\017\n\013PushM" +
      "essage\020\010\022\022\n\016UpdateLinkMeta\020\t\022\017\n\013NewInvol" +
      "ved\020\n\022\017\n\013HideMessage\020\013\022\021\n\rPinTopMessage\020" +
      "\014\022\023\n\017UnPinTopMessage\020\r\022\023\n\017SystemMsgNotif" +
      "y\020\016\022\020\n\014HSRoomNotify\020\017\022\022\n\016NewChatMessage\020" +
      "\020\022\024\n\020MemberPermChange\020\021\022\n\n\006Notice\020\024\022\022\n\016C" +
      "hangeHomeHead\020\025\022\024\n\020ChangeFriendList\020\026\022\030\n" +
      "\024ReceiveFriendRequest\020\027\022\023\n\017ChangeBlackli" +
      "st\020\030\022\030\n\024ChangeFeaturedTopics\020\031\022\016\n\nTeamUp" +
      "date\020\032\022\024\n\020TeamMemberUpdate\020\033\022\022\n\016MineTeam" +
      "Change\020\034\022\027\n\023TeamNewClientJoined\020\035\022\016\n\nTal" +
      "kNotify\020\036\022\031\n\021TalkPlamateNotify\020\037\032\002\010\001\022\026\n\022" +
      "TalkPlaymateNotify\020 \022\031\n\025PublishGlobalTal" +
      "kPost\020!\022\032\n\026PublishChannelTalkPost\020\"\022\031\n\025T" +
      "oTeamAppointmentTime\020#\022\017\n\013VideoUpdate\020$\022" +
      "\026\n\022CompletedRoomTasks\020%\022\025\n\021CompletedRoom" +
      "Task\020&\022\031\n\025PublishFriendFeedPost\020\'\022\017\n\013Tea" +
      "mCreated\020(\022\017\n\013TeamDisband\020)\022\026\n\022PublishHo" +
      "tFeedPost\020*\022\026\n\022ExploreRoomUpdated\020+\022\034\n\030P" +
      "ublishRecommendFeedPost\020,\022\032\n\026TeamMemberD" +
      "etailUpdate\020-\022\026\n\022UserProfileUpdated\020.\022#\n" +
      "\037ToTeamAppointmentTimeMemberPush\020/\022\026\n\022Pu" +
      "blishChannelNote\0200\022\016\n\nNoteNotify\0201\022\024\n\020Te" +
      "amDetailUpdate\0202\022\025\n\021PlaymateRecommend\0203\022" +
      "\020\n\013PongMessage\020\351\007*\264\001\n\021SystemMessageType\022" +
      "\033\n\023UndefinedBotMessage\020\000\032\002\010\001\022\033\n\027BotHaoSh" +
      "uoRoomAssistant\020\001\022\r\n\tBotSysMsg\020\002\022\025\n\021BotA" +
      "ctivityNotice\020\003\022\021\n\rBotTalkNotice\020\004\022\031\n\025Bo" +
      "tTalkPlaymateNotice\020\005\022\021\n\rBotNoteNotice\020\006" +
      "*\262\001\n\021ClientMessageType\022\024\n\020UndefinedMessa" +
      "ge\020\000\022\017\n\013PingMessage\020\001\022\024\n\020RoomEventMessag" +
      "e\020\002\022\026\n\022FrontActiveMessage\020\003\022\033\n\027Backgroun" +
      "dActiveMessage\020\004\022\016\n\nAckMessage\020\005\022\033\n\016Unkn" +
      "ownMessage\020\377\377\377\377\377\377\377\377\377\001*\363\002\n\013MessageType\022\030\n" +
      "\024MessageTypeUndefined\020\000\022\023\n\017MessageTypeTe" +
      "xt\020\001\022\026\n\022MessageTypeSticker\020\002\022\033\n\027MessageT" +
      "ypeReferMessage\020\003\022\030\n\024MessageTypeReferRoo" +
      "m\020\004\022\026\n\022MessageTypeNewJoin\020\005\022\033\n\027MessageTy" +
      "peReferChannel\020\006\022\030\n\024MessageTypeReferTeam" +
      "\020\007\022\034\n\030MessageTypeMemberLevelUp\020\010\022\027\n\023Mess" +
      "ageTypeTalkPost\020\t\022\030\n\024MessageTypeReferPos" +
      "t\020\n\022\023\n\017MessageTypeNote\020\013\022\030\n\024MessageTypeR" +
      "eferNote\020\014\022\027\n\023MessageTypePlaymate\020\r*\321\001\n\r" +
      "MessageStatus\022\030\n\024MessageStatusUnknown\020\000\022" +
      "!\n\024MessageStatusDeleted\020\377\377\377\377\377\377\377\377\377\001\022(\n\033Me" +
      "ssageStatusChannelDeleted\020\376\377\377\377\377\377\377\377\377\001\022\036\n\021" +
      "MessageStatusHide\020\375\377\377\377\377\377\377\377\377\001\022$\n\027MessageS" +
      "tatusThreadHide\020\374\377\377\377\377\377\377\377\377\001\022\023\n\017MessageSta" +
      "tusOK\020\001*3\n\010RoomType\022\025\n\021RoomTypeUndefined" +
      "\020\000\022\020\n\014RoomTypeGame\020\001*\246\001\n\nRoomStatus\022\025\n\021R" +
      "oomStatusUnknown\020\000\022\037\n\022RoomStatusArchived" +
      "\020\376\377\377\377\377\377\377\377\377\001\022\036\n\021RoomStatusDeleted\020\377\377\377\377\377\377\377" +
      "\377\377\001\022\025\n\021RoomStatusCanJoin\020\001\022\020\n\014RoomStatus" +
      "OK\020\002\022\027\n\023RoomStatusRecommend\020\003*\310\002\n\016Permis" +
      "sionType\022\033\n\027PermissionTypeUndefined\020\000\022\034\n" +
      "\030PermissionTypeManageRoom\020\001\022\036\n\032Permissio" +
      "nTypeManageMember\020\002\022\037\n\033PermissionTypeMan" +
      "ageChannel\020\003\022\035\n\031PermissionTypeManageOplo" +
      "g\020\004\022!\n\035PermissionTypeManageRoomGroup\020\005\022\027" +
      "\n\023PermissionTypeAdmin\020\006\022!\n\035PermissionTyp" +
      "eAtEveryoneGroup\020\007\022\034\n\030PermissionTypePinM" +
      "essage\020\010\022\036\n\032PermissionTypeAnnounceChat\020\t" +
      "*\316\001\n\013ChannelType\022\030\n\024ChannelTypeUndefined" +
      "\020\000\022\023\n\017ChannelTypeText\020\001\022\027\n\023ChannelTypeAn" +
      "nounce\020\002\022\033\n\027ChannelTypeExternalLink\020\003\022\026\n" +
      "\022ChannelTypePrivate\020\004\022\027\n\023ChannelTypeTalk" +
      "Post\020\007\022\023\n\017ChannelTypeNote\020\010\022\024\n\020ChannelTy" +
      "peTopic\020\t*d\n\rChannelStatus\022\032\n\026ChannelSta" +
      "tusUndefined\020\000\022\023\n\017ChannelStatusOK\020\001\022\"\n\025C" +
      "hannelStatusArchived\020\376\377\377\377\377\377\377\377\377\001*\275\001\n\nUser" +
      "Status\022\027\n\023UserStatusUndefined\020\000\022\032\n\rUserS" +
      "tatusBan\020\377\377\377\377\377\377\377\377\377\001\022\033\n\016UserStatusMute\020\376\377" +
      "\377\377\377\377\377\377\377\001\022&\n\031UserStatusPreAccountClose\020\375\377" +
      "\377\377\377\377\377\377\377\001\022#\n\026UserStatusAccountClose\020\374\377\377\377\377" +
      "\377\377\377\377\001\022\020\n\014UserStatusOK\020\001*D\n\014UserIdentity\022" +
      "\031\n\025UserIdentityUndefined\020\000\022\031\n\025UserIdenti" +
      "tyDeveloper\020\001*\231\001\n\020RoomMemberStatus\022\035\n\031Ro" +
      "omMemberStatusUndefined\020\000\022 \n\023GlobalUserS" +
      "tatusBan\020\377\377\377\377\377\377\377\377\377\001\022!\n\024GlobalUserStatusM" +
      "ute\020\376\377\377\377\377\377\377\377\377\001\022!\n\024RoomMemberStatusMute\020\375" +
      "\377\377\377\377\377\377\377\377\001*\233\013\n\006RoomOp\022\021\n\rRoomOpUnknown\020\000\022" +
      "\025\n\020RoomOpRoomCreate\020\351\007\022\025\n\020RoomOpRoomUpda" +
      "te\020\352\007\022\025\n\020RoomOpRoomDelete\020\353\007\022\030\n\023RoomOpCh" +
      "annelCreate\020\354\007\022\030\n\023RoomOpChannelUpdate\020\355\007" +
      "\022\030\n\023RoomOpChannelDelete\020\356\007\022\035\n\030RoomOpChan" +
      "nelGroupCreate\020\357\007\022\035\n\030RoomOpChannelGroupU" +
      "pdate\020\360\007\022\035\n\030RoomOpChannelGroupDelete\020\361\007\022" +
      "\026\n\021RoomOpChannelSort\020\362\007\022\033\n\026RoomOpChannel" +
      "GroupSort\020\363\007\022\032\n\025RoomOpRoomGroupCreate\020\364\007" +
      "\022\032\n\025RoomOpRoomGroupDelete\020\365\007\022\032\n\025RoomOpRo" +
      "omGroupUpdate\020\366\007\022\030\n\023RoomOpMemberKickout\020" +
      "\367\007\022\032\n\025RoomOpMemberUnKickout\020\370\007\022\030\n\023RoomOp" +
      "MemberNospeak\020\371\007\022\032\n\025RoomOpMemberUnNospea" +
      "k\020\372\007\022$\n\037RoomOpMemberRemoveFromRoomGroup\020" +
      "\373\007\022\037\n\032RoomOpMemberAddToRoomGroup\020\374\007\022\026\n\021R" +
      "oomOpMessageHide\020\375\007\022\030\n\023RoomOpMessageDele" +
      "te\020\376\007\022\025\n\020RoomOpMessagePin\020\377\007\022\027\n\022RoomOpMe" +
      "ssageUnPin\020\200\010\022\032\n\025RoomOpRoomOwnerChange\020\201" +
      "\010\022\026\n\021RoomOpRoomArchive\020\202\010\022\035\n\030RoomOpExter" +
      "nalLinkCreate\020\203\010\022\035\n\030RoomOpExternalLinkUp" +
      "date\020\204\010\022\035\n\030RoomOpExternalLinkDelete\020\205\010\022\027" +
      "\n\022RoomOpSquareCreate\020\206\010\022\027\n\022RoomOpSquareU" +
      "pdate\020\207\010\022\031\n\024RoomOpChannelArchive\020\210\010\022\021\n\014R" +
      "oomOpTagAdd\020\211\010\022\024\n\017RoomOpTagDelete\020\212\010\022\030\n\023" +
      "RoomOpWelcomeCreate\020\213\010\022\030\n\023RoomOpWelcomeU" +
      "pdate\020\214\010\022\024\n\017RoomOpRoomAudit\020\215\010\022\034\n\027RoomOp" +
      "ExternalLinkAudit\020\216\010\022\026\n\021RoomOpLevelUpdat" +
      "e\020\217\010\022\022\n\rRoomOpBotJoin\020\220\010\022\023\n\016RoomOpBotLea" +
      "ve\020\221\010\022\027\n\022RoomOpChannelAudit\020\222\010\022\033\n\026RoomOp" +
      "BotAuditGreeting\020\223\010\022\034\n\027RoomOpChannelGrou" +
      "pAudit\020\224\010\022\034\n\027RoomOpBotAuditAutoReply\020\225\010\022" +
      "\034\n\027RoomOpMemberLevelCreate\020\226\010\022\034\n\027RoomOpM" +
      "emberLevelUpdate\020\227\010\022\033\n\026RoomOpMemberLevel" +
      "Audit\020\230\010\022\031\n\024RoomOpRoomGroupAudit\020\231\010\022\026\n\021R" +
      "oomOpSquareAudit\020\232\010\022\027\n\022RoomOpWelcomeAudi" +
      "t\020\233\010\022\021\n\014RoomOpReport\020\234\010\022\026\n\021RoomOpReportA" +
      "udit\020\235\010*\250\n\n\006UserOp\022\021\n\rUserOpUnknown\020\000\022\031\n" +
      "\024UserOpNicknameUpdate\020\321\017\022\027\n\022UserOpAvatar" +
      "Update\020\322\017\022\030\n\023UserOpNicknameAudit\020\323\017\022\026\n\021U" +
      "serOpAvatarAudit\020\324\017\022\030\n\023UserOpProfileUpda" +
      "te\020\325\017\022\023\n\016UserOpJoinRoom\020\326\017\022\023\n\016UserOpQuit" +
      "Room\020\327\017\022\022\n\rUserOpKickout\020\330\017\022\024\n\017UserOpUnK" +
      "ickout\020\331\017\022\022\n\rUserOpNospeak\020\332\017\022\024\n\017UserOpU" +
      "nNospeak\020\333\017\022\017\n\nUserOpMute\020\334\017\022\021\n\014UserOpUn" +
      "Mute\020\335\017\022\016\n\tUserOpBan\020\336\017\022\020\n\013UserOpUnBan\020\337" +
      "\017\022\036\n\031UserOpRemoveFromRoomGroup\020\340\017\022\031\n\024Use" +
      "rOpAddToRoomGroup\020\341\017\022\021\n\014UserOpReport\020\342\017\022" +
      "\026\n\021UserOpReportAudit\020\343\017\022\027\n\022UserOpRoomOwn" +
      "erSet\020\344\017\022\031\n\024UserOpRoomOwnerUnset\020\345\017\022\030\n\023U" +
      "serOpNicknameReset\020\346\017\022\026\n\021UserOpAvatarRes" +
      "et\020\347\017\022\023\n\016UserOpImprison\020\350\017\022\025\n\020UserOpUnIm" +
      "prison\020\351\017\022\030\n\023UserOpDevloperApply\020\352\017\022\031\n\024U" +
      "serOpDevloperCancel\020\353\017\022\030\n\023UserOpDevloper" +
      "Audit\020\354\017\022\030\n\023UserOpIdentityVerif\020\355\017\022\027\n\022Us" +
      "erOpSystemNotify\020\356\017\022\026\n\021UserOpAdminRemark" +
      "\020\357\017\022\030\n\023UserOpReportPrivate\020\360\017\022\035\n\030UserOpR" +
      "eportPrivateAudit\020\361\017\022\023\n\016UserOpRegister\020\362" +
      "\017\022\020\n\013UserOpLogin\020\363\017\022\030\n\023UserOpRegisterAud" +
      "it\020\364\017\022\025\n\020UserOpLoginAudit\020\365\017\022 \n\033UserOpOf" +
      "ficialCertification\020\366\017\022\025\n\020UserOpNoteCrea" +
      "te\020\367\017\022\025\n\020UserOpNoteUpdate\020\370\017\022\025\n\020UserOpNo" +
      "teDelete\020\371\017\022\024\n\017UserOpNoteAudit\020\372\017\022 \n\033Use" +
      "rOpNicknameAuditFeedback\020\373\017\022\036\n\031UserOpAva" +
      "tarAuditFeedback\020\374\017\022\025\n\020UserOpReportTeam\020" +
      "\375\017\022\032\n\025UserOpReportTeamAudit\020\376\017\022\025\n\020UserOp" +
      "ReportTalk\020\377\017\022\032\n\025UserOpReportTalkAudit\020\200" +
      "\020\022\032\n\025UserOpPreCloseAccount\020\201\020\022\026\n\021UserOpC" +
      "overUpdate\020\202\020\022\025\n\020UserOpCoverAudit\020\203\020\022\025\n\020" +
      "UserOpCoverReset\020\204\020\022\035\n\030UserOpCoverAuditF" +
      "eedback\020\205\020*\200\t\n\tMessageOp\022\024\n\020MessageOpUnk" +
      "nown\020\000\022\021\n\014MessageOpNew\020\271\027\022\022\n\rMessageOpEd" +
      "it\020\272\027\022\024\n\017MessageOpDelete\020\273\027\022\022\n\rMessageOp" +
      "Hide\020\274\027\022\022\n\rMessageOpShow\020\275\027\022\027\n\022MessageOp" +
      "ChatAudit\020\276\027\022\024\n\017MessageOpReport\020\277\027\022\031\n\024Me" +
      "ssageOpReportAudit\020\300\027\022\021\n\014MessageOpPin\020\301\027" +
      "\022\023\n\016MessageOpUnPin\020\302\027\022\021\n\014MessageOpHot\020\303\027" +
      "\022\023\n\016MessageOpUnHot\020\304\027\022\026\n\021MessageOpHotAud" +
      "it\020\305\027\022\030\n\023MessageOpHotCollect\020\306\027\022\032\n\025Messa" +
      "geOpUnHotCollect\020\307\027\022\035\n\030MessageOpHotColle" +
      "ctAudit\020\310\027\022\033\n\026MessageOpLinkMetaAudit\020\311\027\022" +
      "\"\n\035MessageOpLinkMetaPrivateAudit\020\312\027\022\036\n\031M" +
      "essageOpChatPrivateAudit\020\313\027\022\033\n\026MessageOp" +
      "ReportPrivate\020\314\027\022 \n\033MessageOpReportPriva" +
      "teAudit\020\315\027\022\034\n\027MessageOpRecommendAudit\020\316\027" +
      "\022\030\n\023MessageOpReportTeam\020\317\027\022\035\n\030MessageOpR" +
      "eportTeamAudit\020\320\027\022\037\n\032MessageOpLinkMetaTe" +
      "amAudit\020\321\027\022\033\n\026MessageOpChatTeamAudit\020\322\027\022" +
      "\030\n\023MessageOpReportTalk\020\323\027\022\035\n\030MessageOpRe" +
      "portTalkAudit\020\324\027\022\037\n\032MessageOpLinkMetaTal" +
      "kAudit\020\325\027\022\033\n\026MessageOpChatTalkAudit\020\326\027\022#" +
      "\n\036MessageOpPrivateChatVideoAudit\020\327\027\022!\n\034M" +
      "essageOpGroupChatVideoAudit\020\330\027\022\034\n\027Messag" +
      "eOpTalkVideoAudit\020\331\027\022$\n\037MessageOpReportP" +
      "rivateChatVideo\020\332\027\022\"\n\035MessageOpReportGro" +
      "upChatVideo\020\333\027\022\035\n\030MessageOpReportTalkVid" +
      "eo\020\334\027\022)\n$MessageOpReportPrivateChatVideo" +
      "Audit\020\335\027\022\'\n\"MessageOpReportGroupChatVide" +
      "oAudit\020\336\027\022\"\n\035MessageOpReportTalkVideoAud" +
      "it\020\337\027*\300\002\n\010SystemOp\022\023\n\017SystemOpUnknown\020\000\022" +
      "\034\n\027SystemOpRiskWordsCreate\020\241\037\022\034\n\027SystemO" +
      "pRiskWordsUpdate\020\242\037\022\034\n\027SystemOpRiskWords" +
      "Delete\020\243\037\022\034\n\027SystemOpRiskLabelCreate\020\244\037\022" +
      "\034\n\027SystemOpRiskLabelUpdate\020\245\037\022\034\n\027SystemO" +
      "pRiskLabelDelete\020\246\037\022\033\n\026SystemOpActivityC" +
      "reate\020\247\037\022\033\n\026SystemOpActivityUpdate\020\250\037\022\032\n" +
      "\025SystemOpActivityClose\020\251\037\022\025\n\020SystemOpNew" +
      "Order\020\252\037*\033\n\006GameOp\022\021\n\rGameOpUnknown\020\000*\365\001" +
      "\n\006TeamOp\022\021\n\rTeamOpUnknown\020\000\022\021\n\014TeamOpCre" +
      "ate\020\361.\022\021\n\014TeamOpUpdate\020\362.\022\021\n\014TeamOpDelet" +
      "e\020\363.\022\025\n\020TeamOpAuditIntro\020\364.\022\024\n\017TeamOpAud" +
      "itTags\020\365.\022\030\n\023TeamOpAuditAnnounce\020\366.\022\023\n\016T" +
      "eamOpMsgAudit\020\367.\022\030\n\023TeamOpMsgAudioAudit\020" +
      "\370.\022\021\n\014TeamOpReport\020\371.\022\026\n\021TeamOpReportAud" +
      "it\020\372.*\267\001\n\006NoteOp\022\021\n\rNoteOpUnknown\020\000\022\021\n\014N" +
      "oteOpCreate\020\3316\022\021\n\014NoteOpUpdate\020\3326\022\021\n\014Not" +
      "eOpDelete\020\3336\022\020\n\013NoteOpAudit\020\3346\022\031\n\024NoteOp" +
      "InfoConfCreate\020\3356\022\031\n\024NoteOpInfoConfUpdat" +
      "e\020\3366\022\031\n\024NoteOpInfoConfDelete\020\3376*B\n\007Audit" +
      "Op\022\022\n\016AuditOpUnknown\020\000\022\020\n\013AuditOpText\020\301>" +
      "\022\021\n\014AuditOpImage\020\302>*\232\001\n\010ChatType\022\025\n\021Chat" +
      "TypeUndefined\020\000\022\020\n\014ChatTypeRoom\020\001\022\023\n\017Cha" +
      "tTypeChannel\020\002\022\020\n\014ChatTypeUser\020\003\022\025\n\021Chat" +
      "TypeTempGroup\020\004\022\025\n\021ChatTypeSystemBot\020\005\022\020" +
      "\n\014ChatTypeTeam\020\006*\370\001\n\020FriendSourceType\022\035\n" +
      "\031FriendSourceTypeUndefined\020\000\022\031\n\025FriendSo" +
      "urceTypeGroup\020\001\022\032\n\026FriendSourceTypeSearc" +
      "h\020\002\022\035\n\031FriendSourceTypeRecommend\020\003\022!\n\035Fr" +
      "iendSourceTypeFeaturedTopic\020\004\022\030\n\024FriendS" +
      "ourceTypeTeam\020\005\022\024\n\020FriendSourceTalk\020\006\022\034\n" +
      "\030FriendSourceTypePlaymate\020\007*\224\001\n\023FriendRe" +
      "questStatus\022 \n\034FriendRequestStatusUndefi" +
      "ned\020\000\022\037\n\033FriendRequestStatusWaitPass\020\001\022\033" +
      "\n\027FriendRequestStatusPass\020\002\022\035\n\031FriendReq" +
      "uestStatusRefuse\020\003*f\n\020FriendChangeType\022\035" +
      "\n\031FriendChangeTypeUndefined\020\000\022\027\n\023FriendC" +
      "hangeTypeAdd\020\001\022\032\n\026FriendChangeTypeRemove" +
      "\020\002*r\n\023WebsocketNoticeType\022\036\n\032WebsocketNo" +
      "ticeTypeDefault\020\000\022\036\n\032WebsocketNoticeType" +
      "Message\020\001\022\033\n\027WebsocketNoticeTypeTalk\020\002*x" +
      "\n\024NewFriendRequestType\022!\n\035NewFriendReque" +
      "stTypeUndefined\020\000\022\034\n\030NewFriendRequestTyp" +
      "eSend\020\001\022\037\n\033NewFriendRequestTypeReceive\020\002" +
      "*~\n\020OnlineDeviceType\022\035\n\031OnlineDeviceType" +
      "Undefined\020\000\022\027\n\023OnlineDeviceTypeWeb\020\001\022\027\n\023" +
      "OnlineDeviceTypeApp\020\002\022\031\n\025OnlineDeviceTyp" +
      "eMulti\020\003*N\n\014TalkPostType\022\025\n\021PostTypeUnde" +
      "fined\020\000\022\021\n\rPostTypeShare\020\001\022\024\n\020PostTypePl" +
      "aymate\020\002*Z\n\017TalkPostTagType\022\030\n\024PostTagTy" +
      "peUndefined\020\000\022\024\n\020PostTagTypeShare\020\001\022\027\n\023P" +
      "ostTagTypePlaymate\020\002*\202\001\n\016TalkPostStatus\022" +
      "\025\n\021PostStatusPending\020\000\022\025\n\021PostStatusCrea" +
      "ted\020\001\022\025\n\021PostStatusSuccess\020\002\022\025\n\021PostStat" +
      "usDeleted\020\003\022\024\n\020PostStatusHidden\020\004*\265\001\n\016Ta" +
      "lkFeedSource\022\023\n\017FeedSourceEmpty\020\000\022\022\n\016Fee" +
      "dSourcePost\020\001\022\021\n\rFeedSourceHot\020\002\022\024\n\020Feed" +
      "SourceFriend\020\003\022\027\n\023FeedSourceFollowTag\020\004\022" +
      "\032\n\026FeedSourceReccomendTag\020\005\022\034\n\030FeedSourc" +
      "eFriendInteract\020\006*R\n\021FeaturedTopicType\022\024" +
      "\n\020TopicTypeDefault\020\000\022\024\n\020TopicTypeMessage" +
      "\020\001\022\021\n\rTopicTypePost\020\002*\213\001\n\nTeamStatus\022\027\n\023" +
      "TeamStatusUndefined\020\000\022\020\n\014TeamStatusOK\020\001\022" +
      "\027\n\023TeamStatusDeparture\020\002\022\036\n\021TeamStatusDi" +
      "sband\020\375\377\377\377\377\377\377\377\377\001\022\031\n\025TeamStatusAppointmen" +
      "t\020\005*\334\001\n\013AuditStatus\022\030\n\024AuditStatusUndefi" +
      "ned\020\000\022\023\n\017AuditStatusPass\020\001\022\025\n\021AuditStatu" +
      "sReject\020\002\022\025\n\021AuditStatusReview\020\003\022\027\n\023Audi" +
      "tStatusDarkRoom\020\020\022\031\n\025AuditStatusRoomReje" +
      "ct\020\023\022 \n\034AuditStatusPrivateChatReject\020\024\022\032" +
      "\n\026AuditStatusNewUserRisk\020\026*U\n\010PushType\022\025" +
      "\n\021PushTypeUndefined\020\000\022\017\n\013PushTypeAli\020\001\022\020" +
      "\n\014PushTypeApns\020\002\022\017\n\013PushTypeFCM\020\003B(\n\030com" +
      ".gomicroim.lib.protosZ\014cloud/protosb\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
