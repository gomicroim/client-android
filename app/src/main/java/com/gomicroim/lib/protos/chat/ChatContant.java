// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc/chat/api/chat/constant.proto

package com.gomicroim.lib.protos.chat;

public final class ChatContant {
  private ChatContant() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 客户端类型
   * </pre>
   *
   * Protobuf enum {@code chat.IMClientType}
   */
  public enum IMClientType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * unset
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_DEFAULT = 0;</code>
     */
    kCIM_CLIENT_TYPE_DEFAULT(0),
    /**
     * <pre>
     * 安卓
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_ANDROID = 1;</code>
     */
    kCIM_CLIENT_TYPE_ANDROID(1),
    /**
     * <pre>
     * iOS
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_IOS = 2;</code>
     */
    kCIM_CLIENT_TYPE_IOS(2),
    /**
     * <pre>
     * WebSocket
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_WEB = 3;</code>
     */
    kCIM_CLIENT_TYPE_WEB(3),
    /**
     * <pre>
     * RestAPI
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_REST_API = 4;</code>
     */
    kCIM_CLIENT_TYPE_REST_API(4),
    /**
     * <pre>
     * PC Windows
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_PC_WINDOWS = 5;</code>
     */
    kCIM_CLIENT_TYPE_PC_WINDOWS(5),
    /**
     * <pre>
     * MAC
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_MAC_OS = 6;</code>
     */
    kCIM_CLIENT_TYPE_MAC_OS(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * unset
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_DEFAULT = 0;</code>
     */
    public static final int kCIM_CLIENT_TYPE_DEFAULT_VALUE = 0;
    /**
     * <pre>
     * 安卓
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_ANDROID = 1;</code>
     */
    public static final int kCIM_CLIENT_TYPE_ANDROID_VALUE = 1;
    /**
     * <pre>
     * iOS
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_IOS = 2;</code>
     */
    public static final int kCIM_CLIENT_TYPE_IOS_VALUE = 2;
    /**
     * <pre>
     * WebSocket
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_WEB = 3;</code>
     */
    public static final int kCIM_CLIENT_TYPE_WEB_VALUE = 3;
    /**
     * <pre>
     * RestAPI
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_REST_API = 4;</code>
     */
    public static final int kCIM_CLIENT_TYPE_REST_API_VALUE = 4;
    /**
     * <pre>
     * PC Windows
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_PC_WINDOWS = 5;</code>
     */
    public static final int kCIM_CLIENT_TYPE_PC_WINDOWS_VALUE = 5;
    /**
     * <pre>
     * MAC
     * </pre>
     *
     * <code>kCIM_CLIENT_TYPE_MAC_OS = 6;</code>
     */
    public static final int kCIM_CLIENT_TYPE_MAC_OS_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMClientType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMClientType forNumber(int value) {
      switch (value) {
        case 0: return kCIM_CLIENT_TYPE_DEFAULT;
        case 1: return kCIM_CLIENT_TYPE_ANDROID;
        case 2: return kCIM_CLIENT_TYPE_IOS;
        case 3: return kCIM_CLIENT_TYPE_WEB;
        case 4: return kCIM_CLIENT_TYPE_REST_API;
        case 5: return kCIM_CLIENT_TYPE_PC_WINDOWS;
        case 6: return kCIM_CLIENT_TYPE_MAC_OS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMClientType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMClientType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMClientType>() {
            public IMClientType findValueByNumber(int number) {
              return IMClientType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(0);
    }

    private static final IMClientType[] VALUES = values();

    public static IMClientType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMClientType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMClientType)
  }

  /**
   * <pre>
   * 会话类型
   * </pre>
   *
   * Protobuf enum {@code chat.IMSessionType}
   */
  public enum IMSessionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 无效会话
     * </pre>
     *
     * <code>kCIM_SESSION_TYPE_Invalid = 0;</code>
     */
    kCIM_SESSION_TYPE_Invalid(0),
    /**
     * <pre>
     * 单聊
     * </pre>
     *
     * <code>kCIM_SESSION_TYPE_SINGLE = 1;</code>
     */
    kCIM_SESSION_TYPE_SINGLE(1),
    /**
     * <pre>
     * 群聊
     * </pre>
     *
     * <code>kCIM_SESSION_TYPE_GROUP = 2;</code>
     */
    kCIM_SESSION_TYPE_GROUP(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 无效会话
     * </pre>
     *
     * <code>kCIM_SESSION_TYPE_Invalid = 0;</code>
     */
    public static final int kCIM_SESSION_TYPE_Invalid_VALUE = 0;
    /**
     * <pre>
     * 单聊
     * </pre>
     *
     * <code>kCIM_SESSION_TYPE_SINGLE = 1;</code>
     */
    public static final int kCIM_SESSION_TYPE_SINGLE_VALUE = 1;
    /**
     * <pre>
     * 群聊
     * </pre>
     *
     * <code>kCIM_SESSION_TYPE_GROUP = 2;</code>
     */
    public static final int kCIM_SESSION_TYPE_GROUP_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMSessionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMSessionType forNumber(int value) {
      switch (value) {
        case 0: return kCIM_SESSION_TYPE_Invalid;
        case 1: return kCIM_SESSION_TYPE_SINGLE;
        case 2: return kCIM_SESSION_TYPE_GROUP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMSessionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMSessionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMSessionType>() {
            public IMSessionType findValueByNumber(int number) {
              return IMSessionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(1);
    }

    private static final IMSessionType[] VALUES = values();

    public static IMSessionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMSessionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMSessionType)
  }

  /**
   * <pre>
   * 消息类型
   * </pre>
   *
   * Protobuf enum {@code chat.IMMsgType}
   */
  public enum IMMsgType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知类型消息，本地使用，发送时请勿使用
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_UNKNOWN = 0;</code>
     */
    kCIM_MSG_TYPE_UNKNOWN(0),
    /**
     * <pre>
     * 文本
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_TEXT = 1;</code>
     */
    kCIM_MSG_TYPE_TEXT(1),
    /**
     * <pre>
     * 文件
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_FILE = 2;</code>
     */
    kCIM_MSG_TYPE_FILE(2),
    /**
     * <pre>
     * 图片
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_IMAGE = 3;</code>
     */
    kCIM_MSG_TYPE_IMAGE(3),
    /**
     * <pre>
     * 声音
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_AUDIO = 4;</code>
     */
    kCIM_MSG_TYPE_AUDIO(4),
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_VIDEO = 5;</code>
     */
    kCIM_MSG_TYPE_VIDEO(5),
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_LOCATION = 6;</code>
     */
    kCIM_MSG_TYPE_LOCATION(6),
    /**
     * <pre>
     * 图灵机器人消息
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_ROBOT = 7;</code>
     */
    kCIM_MSG_TYPE_ROBOT(7),
    /**
     * <pre>
     * 提醒类型
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_TIPS = 8;</code>
     */
    kCIM_MSG_TYPE_TIPS(8),
    /**
     * <pre>
     * 系统通知（包括入群出群通知等）
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_NOTIFACATION = 9;</code>
     */
    kCIM_MSG_TYPE_NOTIFACATION(9),
    /**
     * <pre>
     * 由音视频通话产生的消息
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_AVCHAT = 10;</code>
     */
    kCIM_MSG_TYPE_AVCHAT(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知类型消息，本地使用，发送时请勿使用
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_UNKNOWN = 0;</code>
     */
    public static final int kCIM_MSG_TYPE_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * 文本
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_TEXT = 1;</code>
     */
    public static final int kCIM_MSG_TYPE_TEXT_VALUE = 1;
    /**
     * <pre>
     * 文件
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_FILE = 2;</code>
     */
    public static final int kCIM_MSG_TYPE_FILE_VALUE = 2;
    /**
     * <pre>
     * 图片
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_IMAGE = 3;</code>
     */
    public static final int kCIM_MSG_TYPE_IMAGE_VALUE = 3;
    /**
     * <pre>
     * 声音
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_AUDIO = 4;</code>
     */
    public static final int kCIM_MSG_TYPE_AUDIO_VALUE = 4;
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_VIDEO = 5;</code>
     */
    public static final int kCIM_MSG_TYPE_VIDEO_VALUE = 5;
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_LOCATION = 6;</code>
     */
    public static final int kCIM_MSG_TYPE_LOCATION_VALUE = 6;
    /**
     * <pre>
     * 图灵机器人消息
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_ROBOT = 7;</code>
     */
    public static final int kCIM_MSG_TYPE_ROBOT_VALUE = 7;
    /**
     * <pre>
     * 提醒类型
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_TIPS = 8;</code>
     */
    public static final int kCIM_MSG_TYPE_TIPS_VALUE = 8;
    /**
     * <pre>
     * 系统通知（包括入群出群通知等）
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_NOTIFACATION = 9;</code>
     */
    public static final int kCIM_MSG_TYPE_NOTIFACATION_VALUE = 9;
    /**
     * <pre>
     * 由音视频通话产生的消息
     * </pre>
     *
     * <code>kCIM_MSG_TYPE_AVCHAT = 10;</code>
     */
    public static final int kCIM_MSG_TYPE_AVCHAT_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMMsgType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMMsgType forNumber(int value) {
      switch (value) {
        case 0: return kCIM_MSG_TYPE_UNKNOWN;
        case 1: return kCIM_MSG_TYPE_TEXT;
        case 2: return kCIM_MSG_TYPE_FILE;
        case 3: return kCIM_MSG_TYPE_IMAGE;
        case 4: return kCIM_MSG_TYPE_AUDIO;
        case 5: return kCIM_MSG_TYPE_VIDEO;
        case 6: return kCIM_MSG_TYPE_LOCATION;
        case 7: return kCIM_MSG_TYPE_ROBOT;
        case 8: return kCIM_MSG_TYPE_TIPS;
        case 9: return kCIM_MSG_TYPE_NOTIFACATION;
        case 10: return kCIM_MSG_TYPE_AVCHAT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMMsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMMsgType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMMsgType>() {
            public IMMsgType findValueByNumber(int number) {
              return IMMsgType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(2);
    }

    private static final IMMsgType[] VALUES = values();

    public static IMMsgType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMMsgType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMMsgType)
  }

  /**
   * <pre>
   * 消息状态
   * </pre>
   *
   * Protobuf enum {@code chat.IMMsgStatus}
   */
  public enum IMMsgStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认，不能当查询条件，意义太多
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_NONE = 0;</code>
     */
    kCIM_MSG_STATUS_NONE(0),
    /**
     * <pre>
     * 收到消息，未读
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_UNREAD = 1;</code>
     */
    kCIM_MSG_STATUS_UNREAD(1),
    /**
     * <pre>
     * 收到消息，已读
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_READ = 2;</code>
     */
    kCIM_MSG_STATUS_READ(2),
    /**
     * <pre>
     * 已删
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_DELETED = 3;</code>
     */
    kCIM_MSG_STATUS_DELETED(3),
    /**
     * <pre>
     * 发送中
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_SENDING = 4;</code>
     */
    kCIM_MSG_STATUS_SENDING(4),
    /**
     * <pre>
     * 已发送
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_SENT = 5;</code>
     */
    kCIM_MSG_STATUS_SENT(5),
    /**
     * <pre>
     * 对方已读发送的内容
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_RECEIPT = 6;</code>
     */
    kCIM_MSG_STATUS_RECEIPT(6),
    /**
     * <pre>
     * 草稿
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_DRAFT = 7;</code>
     */
    kCIM_MSG_STATUS_DRAFT(7),
    /**
     * <pre>
     * 发送取消
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_SendCacel = 8;</code>
     */
    kCIM_MSG_STATUS_SendCacel(8),
    /**
     * <pre>
     * 被对方拒绝，比如被对方加入黑名单等等
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_REFUSED = 9;</code>
     */
    kCIM_MSG_STATUS_REFUSED(9),
    /**
     * <pre>
     * 发送失败，客户端使用
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_FAILED = 10;</code>
     */
    kCIM_MSG_STATUS_FAILED(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认，不能当查询条件，意义太多
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_NONE = 0;</code>
     */
    public static final int kCIM_MSG_STATUS_NONE_VALUE = 0;
    /**
     * <pre>
     * 收到消息，未读
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_UNREAD = 1;</code>
     */
    public static final int kCIM_MSG_STATUS_UNREAD_VALUE = 1;
    /**
     * <pre>
     * 收到消息，已读
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_READ = 2;</code>
     */
    public static final int kCIM_MSG_STATUS_READ_VALUE = 2;
    /**
     * <pre>
     * 已删
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_DELETED = 3;</code>
     */
    public static final int kCIM_MSG_STATUS_DELETED_VALUE = 3;
    /**
     * <pre>
     * 发送中
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_SENDING = 4;</code>
     */
    public static final int kCIM_MSG_STATUS_SENDING_VALUE = 4;
    /**
     * <pre>
     * 已发送
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_SENT = 5;</code>
     */
    public static final int kCIM_MSG_STATUS_SENT_VALUE = 5;
    /**
     * <pre>
     * 对方已读发送的内容
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_RECEIPT = 6;</code>
     */
    public static final int kCIM_MSG_STATUS_RECEIPT_VALUE = 6;
    /**
     * <pre>
     * 草稿
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_DRAFT = 7;</code>
     */
    public static final int kCIM_MSG_STATUS_DRAFT_VALUE = 7;
    /**
     * <pre>
     * 发送取消
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_SendCacel = 8;</code>
     */
    public static final int kCIM_MSG_STATUS_SendCacel_VALUE = 8;
    /**
     * <pre>
     * 被对方拒绝，比如被对方加入黑名单等等
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_REFUSED = 9;</code>
     */
    public static final int kCIM_MSG_STATUS_REFUSED_VALUE = 9;
    /**
     * <pre>
     * 发送失败，客户端使用
     * </pre>
     *
     * <code>kCIM_MSG_STATUS_FAILED = 10;</code>
     */
    public static final int kCIM_MSG_STATUS_FAILED_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMMsgStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMMsgStatus forNumber(int value) {
      switch (value) {
        case 0: return kCIM_MSG_STATUS_NONE;
        case 1: return kCIM_MSG_STATUS_UNREAD;
        case 2: return kCIM_MSG_STATUS_READ;
        case 3: return kCIM_MSG_STATUS_DELETED;
        case 4: return kCIM_MSG_STATUS_SENDING;
        case 5: return kCIM_MSG_STATUS_SENT;
        case 6: return kCIM_MSG_STATUS_RECEIPT;
        case 7: return kCIM_MSG_STATUS_DRAFT;
        case 8: return kCIM_MSG_STATUS_SendCacel;
        case 9: return kCIM_MSG_STATUS_REFUSED;
        case 10: return kCIM_MSG_STATUS_FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMMsgStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMMsgStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMMsgStatus>() {
            public IMMsgStatus findValueByNumber(int number) {
              return IMMsgStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(3);
    }

    private static final IMMsgStatus[] VALUES = values();

    public static IMMsgStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMMsgStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMMsgStatus)
  }

  /**
   * <pre>
   * 会话状态
   * </pre>
   *
   * Protobuf enum {@code chat.IMSessionStatusType}
   */
  public enum IMSessionStatusType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>kCIM_SESSION_STATUS_UNKNOWN = 0;</code>
     */
    kCIM_SESSION_STATUS_UNKNOWN(0),
    /**
     * <code>kCIM_SESSION_STATUS_OK = 1;</code>
     */
    kCIM_SESSION_STATUS_OK(1),
    /**
     * <code>kCIM_SESSION_STATUS_DELETE = 2;</code>
     */
    kCIM_SESSION_STATUS_DELETE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>kCIM_SESSION_STATUS_UNKNOWN = 0;</code>
     */
    public static final int kCIM_SESSION_STATUS_UNKNOWN_VALUE = 0;
    /**
     * <code>kCIM_SESSION_STATUS_OK = 1;</code>
     */
    public static final int kCIM_SESSION_STATUS_OK_VALUE = 1;
    /**
     * <code>kCIM_SESSION_STATUS_DELETE = 2;</code>
     */
    public static final int kCIM_SESSION_STATUS_DELETE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMSessionStatusType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMSessionStatusType forNumber(int value) {
      switch (value) {
        case 0: return kCIM_SESSION_STATUS_UNKNOWN;
        case 1: return kCIM_SESSION_STATUS_OK;
        case 2: return kCIM_SESSION_STATUS_DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMSessionStatusType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMSessionStatusType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMSessionStatusType>() {
            public IMSessionStatusType findValueByNumber(int number) {
              return IMSessionStatusType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(4);
    }

    private static final IMSessionStatusType[] VALUES = values();

    public static IMSessionStatusType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMSessionStatusType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMSessionStatusType)
  }

  /**
   * <pre>
   * 消息属性
   * </pre>
   *
   * Protobuf enum {@code chat.IMMsgFeature}
   */
  public enum IMMsgFeature
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认
     * </pre>
     *
     * <code>kCIM_MSG_FEATURE_DEFAULT = 0;</code>
     */
    kCIM_MSG_FEATURE_DEFAULT(0),
    /**
     * <pre>
     * 离线消息(和漫游消息有何区别)
     * </pre>
     *
     * <code>kCIM_MSG_FEATURE_LEAVE_MSG = 1;</code>
     */
    kCIM_MSG_FEATURE_LEAVE_MSG(1),
    /**
     * <pre>
     * 漫游消息，多端同步接收，永久存储(或1年)
     * </pre>
     *
     * <code>kCIM_MSG_FEATURE_ROAM_MSG = 2;</code>
     */
    kCIM_MSG_FEATURE_ROAM_MSG(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认
     * </pre>
     *
     * <code>kCIM_MSG_FEATURE_DEFAULT = 0;</code>
     */
    public static final int kCIM_MSG_FEATURE_DEFAULT_VALUE = 0;
    /**
     * <pre>
     * 离线消息(和漫游消息有何区别)
     * </pre>
     *
     * <code>kCIM_MSG_FEATURE_LEAVE_MSG = 1;</code>
     */
    public static final int kCIM_MSG_FEATURE_LEAVE_MSG_VALUE = 1;
    /**
     * <pre>
     * 漫游消息，多端同步接收，永久存储(或1年)
     * </pre>
     *
     * <code>kCIM_MSG_FEATURE_ROAM_MSG = 2;</code>
     */
    public static final int kCIM_MSG_FEATURE_ROAM_MSG_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMMsgFeature valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMMsgFeature forNumber(int value) {
      switch (value) {
        case 0: return kCIM_MSG_FEATURE_DEFAULT;
        case 1: return kCIM_MSG_FEATURE_LEAVE_MSG;
        case 2: return kCIM_MSG_FEATURE_ROAM_MSG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMMsgFeature>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMMsgFeature> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMMsgFeature>() {
            public IMMsgFeature findValueByNumber(int number) {
              return IMMsgFeature.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(5);
    }

    private static final IMMsgFeature[] VALUES = values();

    public static IMMsgFeature valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMMsgFeature(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMMsgFeature)
  }

  /**
   * <pre>
   * 消息错误码
   * </pre>
   *
   * Protobuf enum {@code chat.IMResCode}
   */
  public enum IMResCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * unknown
     * </pre>
     *
     * <code>kCIM_RES_CODE_UNKNOWN = 0;</code>
     */
    kCIM_RES_CODE_UNKNOWN(0),
    /**
     * <pre>
     * 一切正常
     * </pre>
     *
     * <code>kCIM_RES_CODE_OK = 1;</code>
     */
    kCIM_RES_CODE_OK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * unknown
     * </pre>
     *
     * <code>kCIM_RES_CODE_UNKNOWN = 0;</code>
     */
    public static final int kCIM_RES_CODE_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * 一切正常
     * </pre>
     *
     * <code>kCIM_RES_CODE_OK = 1;</code>
     */
    public static final int kCIM_RES_CODE_OK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static IMResCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IMResCode forNumber(int value) {
      switch (value) {
        case 0: return kCIM_RES_CODE_UNKNOWN;
        case 1: return kCIM_RES_CODE_OK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IMResCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IMResCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IMResCode>() {
            public IMResCode findValueByNumber(int number) {
              return IMResCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ChatContant.getDescriptor().getEnumTypes().get(6);
    }

    private static final IMResCode[] VALUES = values();

    public static IMResCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IMResCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chat.IMResCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n rpc/chat/api/chat/constant.proto\022\004chat" +
      "*\333\001\n\014IMClientType\022\034\n\030kCIM_CLIENT_TYPE_DE" +
      "FAULT\020\000\022\034\n\030kCIM_CLIENT_TYPE_ANDROID\020\001\022\030\n" +
      "\024kCIM_CLIENT_TYPE_IOS\020\002\022\030\n\024kCIM_CLIENT_T" +
      "YPE_WEB\020\003\022\035\n\031kCIM_CLIENT_TYPE_REST_API\020\004" +
      "\022\037\n\033kCIM_CLIENT_TYPE_PC_WINDOWS\020\005\022\033\n\027kCI" +
      "M_CLIENT_TYPE_MAC_OS\020\006*i\n\rIMSessionType\022" +
      "\035\n\031kCIM_SESSION_TYPE_Invalid\020\000\022\034\n\030kCIM_S" +
      "ESSION_TYPE_SINGLE\020\001\022\033\n\027kCIM_SESSION_TYP" +
      "E_GROUP\020\002*\250\002\n\tIMMsgType\022\031\n\025kCIM_MSG_TYPE" +
      "_UNKNOWN\020\000\022\026\n\022kCIM_MSG_TYPE_TEXT\020\001\022\026\n\022kC" +
      "IM_MSG_TYPE_FILE\020\002\022\027\n\023kCIM_MSG_TYPE_IMAG" +
      "E\020\003\022\027\n\023kCIM_MSG_TYPE_AUDIO\020\004\022\027\n\023kCIM_MSG" +
      "_TYPE_VIDEO\020\005\022\032\n\026kCIM_MSG_TYPE_LOCATION\020" +
      "\006\022\027\n\023kCIM_MSG_TYPE_ROBOT\020\007\022\026\n\022kCIM_MSG_T" +
      "YPE_TIPS\020\010\022\036\n\032kCIM_MSG_TYPE_NOTIFACATION" +
      "\020\t\022\030\n\024kCIM_MSG_TYPE_AVCHAT\020\n*\301\002\n\013IMMsgSt" +
      "atus\022\030\n\024kCIM_MSG_STATUS_NONE\020\000\022\032\n\026kCIM_M" +
      "SG_STATUS_UNREAD\020\001\022\030\n\024kCIM_MSG_STATUS_RE" +
      "AD\020\002\022\033\n\027kCIM_MSG_STATUS_DELETED\020\003\022\033\n\027kCI" +
      "M_MSG_STATUS_SENDING\020\004\022\030\n\024kCIM_MSG_STATU" +
      "S_SENT\020\005\022\033\n\027kCIM_MSG_STATUS_RECEIPT\020\006\022\031\n" +
      "\025kCIM_MSG_STATUS_DRAFT\020\007\022\035\n\031kCIM_MSG_STA" +
      "TUS_SendCacel\020\010\022\033\n\027kCIM_MSG_STATUS_REFUS" +
      "ED\020\t\022\032\n\026kCIM_MSG_STATUS_FAILED\020\n*r\n\023IMSe" +
      "ssionStatusType\022\037\n\033kCIM_SESSION_STATUS_U" +
      "NKNOWN\020\000\022\032\n\026kCIM_SESSION_STATUS_OK\020\001\022\036\n\032" +
      "kCIM_SESSION_STATUS_DELETE\020\002*k\n\014IMMsgFea" +
      "ture\022\034\n\030kCIM_MSG_FEATURE_DEFAULT\020\000\022\036\n\032kC" +
      "IM_MSG_FEATURE_LEAVE_MSG\020\001\022\035\n\031kCIM_MSG_F" +
      "EATURE_ROAM_MSG\020\002*<\n\tIMResCode\022\031\n\025kCIM_R" +
      "ES_CODE_UNKNOWN\020\000\022\024\n\020kCIM_RES_CODE_OK\020\001B" +
      "@\n\035com.gomicroim.lib.protos.chatB\013ChatCo" +
      "ntantZ\022chat/api/chat;chatb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
